Index: app/src/main/res/layout/fragment_group.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:paddingLeft=\"16dp\"\r\n    android:paddingRight=\"16dp\">\r\n\r\n\r\n\r\n    <com.google.android.material.textfield.TextInputEditText\r\n        android:id=\"@+id/search_field_group\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:hint=\"@string/search\"\r\n        android:paddingLeft=\"20dp\"\r\n        android:paddingRight=\"20dp\"\r\n        android:padding=\"10dp\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:textSize=\"16sp\"\r\n        android:background=\"@drawable/search_layout\"\r\n        android:drawableLeft=\"@drawable/ic_baseline_search_24\"\r\n        android:singleLine=\"true\"\r\n        android:imeOptions=\"actionSearch\"\r\n        />\r\n\r\n    <TextView\r\n        android:id=\"@+id/tvTuoiGruppi\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/search_field_group\"\r\n        android:gravity=\"center\"\r\n        android:padding=\"20dp\"\r\n        android:text=\"@string/your_groups\"\r\n        android:textSize=\"20dp\" />\r\n\r\n    <LinearLayout\r\n        android:layout_width = \"match_parent\"\r\n        android:layout_height = \"match_parent\"\r\n        android:orientation = \"vertical\"\r\n        android:layout_below=\"@+id/tvTuoiGruppi\"\r\n        android:layout_marginTop=\"20dp\">\r\n\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/rvGruppiCreati\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            tools:listitem=\"@layout/item_gruppo\"/>\r\n\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/rvGruppiPartecipante\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            tools:listitem=\"@layout/item_gruppo\"/>\r\n    </LinearLayout>\r\n\r\n\r\n    <androidx.coordinatorlayout.widget.CoordinatorLayout\r\n        android:id=\"@+id/coordinatorLayout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_marginBottom=\"60dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        tools:layout_editor_absoluteX=\"0dp\">\r\n\r\n        <!-- Main content -->\r\n\r\n        <com.google.android.material.floatingactionbutton.FloatingActionButton\r\n            android:id=\"@+id/FAB_groups\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"bottom|right\"\r\n            android:layout_marginBottom=\"16dp\"\r\n            app:srcCompat=\"@drawable/ic_baseline_add_24\" />\r\n\r\n    </androidx.coordinatorlayout.widget.CoordinatorLayout>\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_group.xml	(revision 21bd0f2358c885c4b61cbc32378cedad3ea763a3)
+++ app/src/main/res/layout/fragment_group.xml	(date 1635614263737)
@@ -33,28 +33,21 @@
         android:gravity="center"
         android:padding="20dp"
         android:text="@string/your_groups"
-        android:textSize="20dp" />
+        android:textSize="20sp" />
 
     <LinearLayout
-        android:layout_width = "match_parent"
-        android:layout_height = "match_parent"
-        android:orientation = "vertical"
-        android:layout_below="@+id/tvTuoiGruppi"
-        android:layout_marginTop="20dp">
-
-
-        <androidx.recyclerview.widget.RecyclerView
-            android:id="@+id/rvGruppiCreati"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            tools:listitem="@layout/item_gruppo"/>
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/tvTuoiGruppi"
+        android:orientation="vertical"
+        android:layout_marginBottom="80sp">
 
 
         <androidx.recyclerview.widget.RecyclerView
-            android:id="@+id/rvGruppiPartecipante"
+            android:id="@+id/rvGruppi"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
-            tools:listitem="@layout/item_gruppo"/>
+            tools:listitem="@layout/item_gruppo" />
     </LinearLayout>
 
 
Index: app/src/main/java/com/example/contagiapp/gruppi/ProfiloGruppoFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.contagiapp.gruppi;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.SharedPreferences;\r\nimport android.content.res.ColorStateList;\r\nimport android.graphics.Color;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentTransaction;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.contagiapp.Database;\r\nimport com.example.contagiapp.R;\r\nimport com.example.contagiapp.UserAdapter;\r\nimport com.example.contagiapp.eventi.Evento;\r\nimport com.example.contagiapp.utente.Utente;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.button.MaterialButton;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.gson.Gson;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\n\r\nimport es.dmoral.toasty.Toasty;\r\n\r\n\r\npublic class ProfiloGruppoFragment extends Fragment {\r\n\r\n    private FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private StorageReference storageRef = FirebaseStorage.getInstance().getReference();\r\n    private final static String storageDirectory = \"imgGruppi\";\r\n    private ArrayList<Utente> listaPartecipanti = new ArrayList<Utente>();\r\n    int nStato = 0;\r\n    LinearLayout status;\r\n\r\n    ColorStateList red = ColorStateList.valueOf(Color.parseColor(\"#FF0000\"));\r\n    ColorStateList orange = ColorStateList.valueOf(Color.parseColor(\"#F4511E\"));\r\n    ColorStateList yellow = ColorStateList.valueOf(Color.parseColor(\"#FFF8F405\"));\r\n    ColorStateList green = ColorStateList.valueOf(Color.parseColor(\"#FF43A047\"));\r\n\r\n    public ProfiloGruppoFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view;\r\n        view =  inflater.inflate(R.layout.fragment_profilo_gruppo, container, false);\r\n\r\n        status = view.findViewById(R.id.groupStatusCircle);\r\n\r\n        Bundle bundle = getArguments();\r\n        final String idGruppo = bundle.getString(\"idGruppo\");\r\n        Log.d(\"idGruppo\", String.valueOf(idGruppo));\r\n\r\n        caricaGruppo(idGruppo, view);\r\n\r\n        //QUA\r\n        Database db = new Database();\r\n        db.getStatoGruppo(new Database.StatoGruppo() {\r\n            @Override\r\n            public String setIdGruppo() {\r\n                return idGruppo;\r\n            }\r\n\r\n            @Override\r\n            public void getStato(String stato) {\r\n                Log.d(\"stato\", stato);\r\n            }\r\n        });\r\n\r\n\r\n\r\n        MaterialButton btnAbbandonaGruppo = view.findViewById(R.id.btnAbbandonaGruppo);\r\n        btnAbbandonaGruppo.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                AlertDialog.Builder builder1 = new AlertDialog.Builder(getContext());\r\n                builder1.setMessage(\"Sei sicuro di abbandonare il gruppo?\");\r\n\r\n                builder1.setPositiveButton(\"SÃ¬\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.cancel();\r\n                        abbandonaGruppo(idGruppo, getMailUtenteLoggato());\r\n                    }\r\n                });\r\n\r\n                builder1.setNegativeButton(\r\n                        \"No\",\r\n                        new DialogInterface.OnClickListener() {\r\n                            public void onClick(DialogInterface dialog, int id) {\r\n                                dialog.cancel();\r\n                            }\r\n                        });\r\n\r\n                AlertDialog alert11 = builder1.create();\r\n                alert11.show();\r\n\r\n            }\r\n        });\r\n\r\n        return view;\r\n    }\r\n\r\n\r\n    private void abbandonaGruppo(final String idGruppo, final String mailUtenteLoggato){\r\n        db.collection(\"Gruppo\")\r\n                .document(idGruppo)\r\n                .get()\r\n                .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                    @Override\r\n                    public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                        if (documentSnapshot.exists()) {\r\n                            Gruppo gruppo = documentSnapshot.toObject(Gruppo.class);\r\n                            ArrayList<String> listaMailPartecipanti = gruppo.getPartecipanti();\r\n\r\n\r\n                            listaMailPartecipanti.remove(mailUtenteLoggato);\r\n                            db.collection(\"Gruppo\").document(idGruppo).update(\"partecipanti\", listaMailPartecipanti);\r\n\r\n                            Bundle bundle = new Bundle();\r\n                            GroupFragment fragment = new GroupFragment();\r\n                            fragment.setArguments(bundle);\r\n\r\n                            //richiamo il fragment\r\n                            FragmentTransaction fr = getActivity().getSupportFragmentManager().beginTransaction();\r\n                            fr.replace(R.id.container,fragment);\r\n                            fr.addToBackStack(null); //serve per tornare al fragment precedente\r\n                            fr.commit();\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n\r\n    String stato = null;\r\n    private void getStatoGruppo(String idGruppo){\r\n        db.collection(\"Utenti\")\r\n                .document(idGruppo)\r\n                .get()\r\n                .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                    @Override\r\n                    public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                        Gruppo g = documentSnapshot.toObject(Gruppo.class);\r\n                        stato = g.getStatoGruppo();\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void caricaGruppo(final String idGruppo, final View view){\r\n\r\n        db.collection(\"Gruppo\")\r\n                .document(idGruppo)\r\n                .get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onSuccess(final DocumentSnapshot documentSnapshot) {\r\n                if (documentSnapshot.exists()) {\r\n\r\n                    Gruppo gruppo = documentSnapshot.toObject(Gruppo.class);\r\n                    String nome = gruppo.getNomeGruppo();\r\n                    String descrizione = gruppo.getDescrizione();\r\n                    String stato = gruppo.getStatoGruppo();\r\n                    final ArrayList<String> mailPartecipanti = gruppo.getPartecipanti();\r\n                    gruppo.aggiornaNroPartecipanti(mailPartecipanti);\r\n                    int nroPartecipanti = gruppo.getNroPartecipanti();\r\n\r\n                    Log.d(\"nomeGruppo\", String.valueOf(nome));\r\n\r\n                    TextView tvNomeGruppo = view.findViewById(R.id.tvNomeProfiloGruppo);\r\n                    TextView tvDescGruppo = view.findViewById(R.id.tvDescrProfiloGruppo);\r\n                    final TextView tvNroPartecipanti = view.findViewById(R.id.tvNumPartecipantiProfiloGruppo);\r\n\r\n\r\n                    tvNomeGruppo.setText(nome);\r\n                    tvDescGruppo.setText(descrizione);\r\n                    tvNroPartecipanti.setText(\"Partecipanti\" + \"(\" + String.valueOf(nroPartecipanti) + \")\");\r\n\r\n                    final RecyclerView rvPartecipanti = view.findViewById(R.id.rvPartecipantiProfiloGruppo);\r\n                    Log.d(\"mailPartecipanti.size()\", String.valueOf(mailPartecipanti.size()));\r\n\r\n\r\n                    //ciclo l'elenco dei partecipanti per poter ottenere\r\n\r\n                    new Thread(new Runnable() {\r\n                        @Override\r\n                        public void run() {\r\n                            try {\r\n                                for(int i = 0; i < mailPartecipanti.size(); i++){\r\n\r\n\r\n                                    Task<DocumentSnapshot> task =   db.collection(\"Utenti\")\r\n                                            .document(mailPartecipanti.get(i))\r\n                                            .get()\r\n                                            .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                                                @Override\r\n                                                public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                                                    Utente user = new Utente();\r\n                                                    user.setNome(documentSnapshot.getString(\"nome\"));\r\n                                                    user.setCognome(documentSnapshot.getString(\"cognome\"));\r\n                                                    user.setMail(documentSnapshot.getString(\"mail\"));\r\n                                                    user.setDataNascita(documentSnapshot.getString(\"dataNascita\"));\r\n                                                    user.setStato(documentSnapshot.getString(\"stato\"));\r\n                                                    Log.d(\"dataNascita\", String.valueOf(user.getDataNascita()));\r\n\r\n                                                    listaPartecipanti.add(user); //toDo: questa lista globale deve essere accessibile anche fuori dal metodo a riga 70 (per intederci)\r\n                                                    Log.d(\"listaPartecipantiFOR\", String.valueOf(listaPartecipanti)); //qui Ã¨ visibile, ma Ã¨ nel for\r\n                                                }\r\n                                            });\r\n\r\n\r\n\r\n                                }\r\n\r\n                                Thread.sleep(2000);\r\n                                Log.d(\"dopoSleep\", String.valueOf(listaPartecipanti));\r\n                                //todo: richiamare il metodo per lo stato del gruppo\r\n                                nStato = calcolaNuovoStatoGruppo(listaPartecipanti);\r\n                                Log.d(\"nStato\", String.valueOf(nStato));\r\n                                impostaStatoGruppo(nStato, idGruppo, db);\r\n\r\n                            } catch (Exception e) {\r\n                                e.printStackTrace();\r\n                            }\r\n                        }\r\n\r\n                    }).start();\r\n\r\n\r\n\r\n                    UserAdapter adapter = new UserAdapter(listaPartecipanti);\r\n                    rvPartecipanti.setAdapter(adapter);\r\n                    rvPartecipanti.setLayoutManager(new LinearLayoutManager(getActivity()));\r\n\r\n                    ImageView imageViewProfiloGruppo = view.findViewById(R.id.imgProfiloGruppo);\r\n                    caricaImgDaStorage(storageRef, storageDirectory, idGruppo, imageViewProfiloGruppo);\r\n\r\n                } else {\r\n                    Toast.makeText(getContext(), \"Documents does not exist\", Toast.LENGTH_SHORT);\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    private void caricaImgDaStorage(StorageReference storageRef, String directory, String idImmagine, final ImageView imageView){\r\n        storageRef.child(directory + \"/\" + idImmagine).getDownloadUrl().addOnSuccessListener( new OnSuccessListener<Uri>() {\r\n            @Override\r\n            public void onSuccess(Uri uri) {\r\n                String sUrl = uri.toString(); //otteniamo il token del'immagine\r\n                Log.d(\"sUrl\", sUrl);\r\n                Picasso.get().load(sUrl).into(imageView);\r\n            }\r\n        }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception e) {\r\n                Log.d(\"OnFailure Exception\", String.valueOf(e));\r\n            }\r\n        });\r\n    }\r\n\r\n    private int calcolaNuovoStatoGruppo(ArrayList<Utente> listaPartecipanti){\r\n        int nuovoStato = 0;\r\n        ArrayList <Integer> listaStati = new ArrayList<Integer> ();\r\n\r\n        for(int i = 0; i < listaPartecipanti.size(); i ++){\r\n            listaStati.add(listaPartecipanti.get(i).statoToNumber());\r\n        }\r\n\r\n\r\n        nuovoStato = Collections.max(listaStati);\r\n\r\n        return nuovoStato;\r\n    }\r\n\r\n    private void impostaStatoGruppo(int nStato, String idGruppo, FirebaseFirestore db) {\r\n        switch (nStato){\r\n            case 1:\r\n                status.setBackgroundTintList(green);\r\n                aggiornaStatoGruppo(idGruppo, \"verde\", db);\r\n                break;\r\n            case 2:\r\n                status.setBackgroundTintList(yellow);\r\n                aggiornaStatoGruppo(idGruppo, \"giallo\", db);\r\n                break;\r\n            case 3:\r\n                status.setBackgroundTintList(orange);\r\n                aggiornaStatoGruppo(idGruppo, \"arancione\", db);\r\n                break;\r\n            case 4:\r\n                status.setBackgroundTintList(red);\r\n                aggiornaStatoGruppo(idGruppo, \"rosso\", db);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    private void aggiornaStatoGruppo (String idGruppo, String nuovoStatoGruppo,  FirebaseFirestore db){\r\n        db.collection(\"Gruppo\")\r\n                .document(idGruppo)\r\n                .update(\"statoGruppo\", nuovoStatoGruppo);\r\n    }\r\n\r\n    private String getMailUtenteLoggato(){\r\n        Gson gson = new Gson();\r\n        SharedPreferences prefs = getActivity().getApplicationContext().getSharedPreferences(\"Login\", Context.MODE_PRIVATE);\r\n        String json = prefs.getString(\"utente\", \"no\");\r\n        String mailUtenteLoggato;\r\n        //TODO capire il funzionamento\r\n        if(!json.equals(\"no\")) {\r\n            Utente utente = gson.fromJson(json, Utente.class);\r\n            mailUtenteLoggato = utente.getMail();\r\n            Log.d(\"mailutenteLoggato\", mailUtenteLoggato);\r\n        } else {\r\n            SharedPreferences prefs1 = getActivity().getApplicationContext().getSharedPreferences(\"LoginTemporaneo\",Context.MODE_PRIVATE);\r\n            mailUtenteLoggato = prefs1.getString(\"mail\", \"no\");\r\n            Log.d(\"mail\", mailUtenteLoggato);\r\n        }\r\n        return mailUtenteLoggato;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/contagiapp/gruppi/ProfiloGruppoFragment.java	(revision 21bd0f2358c885c4b61cbc32378cedad3ea763a3)
+++ app/src/main/java/com/example/contagiapp/gruppi/ProfiloGruppoFragment.java	(date 1635614445553)
@@ -162,7 +162,7 @@
     }
 
 
-    String stato = null;
+    /*String stato = null;
     private void getStatoGruppo(String idGruppo){
         db.collection("Utenti")
                 .document(idGruppo)
@@ -174,7 +174,7 @@
                         stato = g.getStatoGruppo();
                     }
                 });
-    }
+    }*/
 
     private void caricaGruppo(final String idGruppo, final View view){
 
@@ -188,7 +188,6 @@
                     Gruppo gruppo = documentSnapshot.toObject(Gruppo.class);
                     String nome = gruppo.getNomeGruppo();
                     String descrizione = gruppo.getDescrizione();
-                    String stato = gruppo.getStatoGruppo();
                     final ArrayList<String> mailPartecipanti = gruppo.getPartecipanti();
                     gruppo.aggiornaNroPartecipanti(mailPartecipanti);
                     int nroPartecipanti = gruppo.getNroPartecipanti();
Index: app/src/main/java/com/example/contagiapp/gruppi/ProfiloGruppoAdminFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.contagiapp.gruppi;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.res.ColorStateList;\r\nimport android.graphics.Color;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.contagiapp.R;\r\nimport com.example.contagiapp.UserAdapter;\r\nimport com.example.contagiapp.utente.Utente;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.gms.tasks.Tasks;\r\nimport com.google.android.material.button.MaterialButton;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Collections;\r\nimport java.util.concurrent.ExecutionException;\r\n\r\nimport es.dmoral.toasty.Toasty;\r\n\r\n\r\npublic class ProfiloGruppoAdminFragment extends Fragment {\r\n    private FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private StorageReference storageRef = FirebaseStorage.getInstance().getReference();\r\n    private final static String storageDirectory = \"imgGruppi\";\r\n    private ArrayList<Utente> listaPartecipanti = new ArrayList<Utente>();\r\n    LinearLayout status;\r\n    int nStato = 0;\r\n\r\n    ColorStateList red = ColorStateList.valueOf(Color.parseColor(\"#FF0000\"));\r\n    ColorStateList orange = ColorStateList.valueOf(Color.parseColor(\"#F4511E\"));\r\n    ColorStateList yellow = ColorStateList.valueOf(Color.parseColor(\"#FFF8F405\"));\r\n    ColorStateList green = ColorStateList.valueOf(Color.parseColor(\"#FF43A047\"));\r\n\r\n\r\n\r\n\r\n    public ProfiloGruppoAdminFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n\r\n        View view;\r\n        view =  inflater.inflate(R.layout.fragment_profilo_gruppo_admin, container, false);\r\n\r\n        Bundle bundle = getArguments();\r\n        final String idGruppo = bundle.getString(\"idGruppo\");\r\n        Log.d(\"idGruppo\", String.valueOf(idGruppo));\r\n\r\n\r\n        caricaGruppo(idGruppo, view);\r\n        Log.d(\"listaPartecipONCREATE\", String.valueOf(listaPartecipanti));\r\n\r\n        MaterialButton btnInvita = view.findViewById(R.id.btnAdminInvitaAmici);\r\n        MaterialButton btnEliminaGruppo = view.findViewById(R.id.btnEliminaGruppo);\r\n        MaterialButton btnModificaGruppo = view.findViewById(R.id.btnModificaGruppo);\r\n        status = view.findViewById(R.id.statusCircle);\r\n\r\n        btnInvita.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent invitaIntent = new Intent(getActivity(), InvitaAmiciGruppoActivity.class);\r\n                invitaIntent.putExtra(\"idGruppo\", idGruppo);\r\n                //invitaIntent.putExtra(\"listaMailPartecipanti\", mailPartecipanti);\r\n                startActivity(invitaIntent);\r\n            }\r\n        });\r\n\r\n\r\n\r\n        btnEliminaGruppo.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                AlertDialog.Builder builder1 = new AlertDialog.Builder(getContext());\r\n                builder1.setMessage(\"Sicuro di eliminare il gruppo?\");\r\n                builder1.setPositiveButton(\"SÃ¬\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.cancel();\r\n\r\n                        eliminaGruppo(idGruppo);\r\n\r\n                        Bundle bundle = new Bundle();\r\n                        GroupFragment fragment = new GroupFragment();\r\n                        fragment.setArguments(bundle);\r\n\r\n                        //richiamo il fragment\r\n                        FragmentTransaction fr = getActivity().getSupportFragmentManager().beginTransaction();\r\n                        fr.replace(R.id.container,fragment);\r\n                        fr.addToBackStack(null); //serve per tornare al fragment precedente\r\n                        fr.commit();\r\n\r\n                    }\r\n                });\r\n\r\n                builder1.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.cancel();\r\n                    }\r\n                });\r\n\r\n                AlertDialog alert11 = builder1.create();\r\n                alert11.show();\r\n            }\r\n        });\r\n\r\n        btnModificaGruppo.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                ModificaGruppoFragment fragment = new ModificaGruppoFragment();\r\n\r\n                Bundle bundle = new Bundle();\r\n                bundle.putString(\"idGruppo\", idGruppo);\r\n\r\n                fragment.setArguments(bundle);\r\n\r\n                //richiamo il fragment\r\n                FragmentTransaction fr = getActivity().getSupportFragmentManager().beginTransaction();\r\n                fr.replace(R.id.container,fragment);\r\n                fr.addToBackStack(null); //serve per tornare al fragment precedente\r\n                fr.commit();\r\n            }\r\n        });\r\n\r\n        return view;\r\n    }\r\n\r\n\r\n\r\n    private void eliminaGruppo(String idGruppo){\r\n        db.collection(\"Gruppo\")\r\n                .document(idGruppo)\r\n                .delete()\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        Log.d(\"document\", \"DocumentSnapshot successfully deleted!\");\r\n                        Toasty.success(getActivity(), \"Gruppo eliminato\", Toast.LENGTH_SHORT).show();\r\n\r\n\r\n\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Log.w(\"document\", \"Error deleting document\", e);\r\n                        Toasty.error(getActivity(), \"Gruppo non eliminato\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void caricaGruppo(final String idGruppo, final View view){\r\n\r\n        db.collection(\"Gruppo\")\r\n                .document(idGruppo)\r\n                .get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onSuccess(final DocumentSnapshot documentSnapshot) {\r\n                if (documentSnapshot.exists()) {\r\n\r\n                    Gruppo gruppo = documentSnapshot.toObject(Gruppo.class);\r\n                    String nome = gruppo.getNomeGruppo();\r\n                    String descrizione = gruppo.getDescrizione();\r\n                    String stato = gruppo.getStatoGruppo();\r\n                    final ArrayList<String> mailPartecipanti = gruppo.getPartecipanti();\r\n                    gruppo.aggiornaNroPartecipanti(mailPartecipanti);\r\n                    int nroPartecipanti = gruppo.getNroPartecipanti();\r\n\r\n                    Log.d(\"nomeGruppo\", String.valueOf(nome));\r\n\r\n                    TextView tvNomeGruppo = view.findViewById(R.id.tvNomeProfiloGruppoAdmin);\r\n                    TextView tvDescGruppo = view.findViewById(R.id.tvDescrProfiloGruppoAdmin);\r\n                    final TextView tvNroPartecipanti = view.findViewById(R.id.tvNumPartecipantiProfiloGruppoAdmin);\r\n\r\n\r\n                    tvNomeGruppo.setText(nome);\r\n                    tvDescGruppo.setText(descrizione);\r\n                    tvNroPartecipanti.setText(\"Partecipanti\" + \"(\" + String.valueOf(nroPartecipanti) + \")\");\r\n\r\n                    final RecyclerView rvPartecipanti = view.findViewById(R.id.rvPartecipantiProfiloGruppoAdmin);\r\n                    Log.d(\"mailPartecipanti.size()\", String.valueOf(mailPartecipanti.size()));\r\n\r\n\r\n                    //ciclo l'elenco dei partecipanti per poter ottenere\r\n\r\n                    new Thread(new Runnable() {\r\n                        @Override\r\n                        public void run() {\r\n                            try {\r\n                                for(int i = 0; i < mailPartecipanti.size(); i++){\r\n\r\n\r\n                                    Task<DocumentSnapshot> task =   db.collection(\"Utenti\")\r\n                                            .document(mailPartecipanti.get(i))\r\n                                            .get()\r\n                                            .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                                                @Override\r\n                                                public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                                                    Utente user = new Utente();\r\n                                                    user.setNome(documentSnapshot.getString(\"nome\"));\r\n                                                    user.setCognome(documentSnapshot.getString(\"cognome\"));\r\n                                                    user.setMail(documentSnapshot.getString(\"mail\"));\r\n                                                    user.setDataNascita(documentSnapshot.getString(\"dataNascita\"));\r\n                                                    user.setStato(documentSnapshot.getString(\"stato\"));\r\n                                                    Log.d(\"dataNascita\", String.valueOf(user.getDataNascita()));\r\n\r\n                                                    listaPartecipanti.add(user); //toDo: questa lista globale deve essere accessibile anche fuori dal metodo a riga 70 (per intederci)\r\n                                                    Log.d(\"listaPartecipantiFOR\", String.valueOf(listaPartecipanti)); //qui Ã¨ visibile, ma Ã¨ nel for\r\n                                                }\r\n                                            });\r\n\r\n\r\n\r\n                                }\r\n                                Thread.sleep(2000);\r\n                                Log.d(\"dopoSleep\", String.valueOf(listaPartecipanti));\r\n                                //todo: richiamare il metodo per lo stato del gruppo\r\n                                nStato = calcolaNuovoStatoGruppo(listaPartecipanti);\r\n                                Log.d(\"nStato\", String.valueOf(nStato));\r\n                                impostaStatoGruppo(nStato, idGruppo, db);\r\n\r\n                                } catch (Exception e) {\r\n                                e.printStackTrace();\r\n                            }\r\n                        }\r\n\r\n                    }).start();\r\n\r\n\r\n\r\n                    UserAdapter adapter = new UserAdapter(listaPartecipanti);\r\n                    rvPartecipanti.setAdapter(adapter);\r\n                    rvPartecipanti.setLayoutManager(new LinearLayoutManager(getActivity()));\r\n\r\n                    ImageView imageViewProfiloGruppo = view.findViewById(R.id.imgProfiloGruppoAdmin);\r\n                    caricaImgDaStorage(storageRef, storageDirectory, idGruppo, imageViewProfiloGruppo);\r\n\r\n                } else {\r\n                    Toast.makeText(getContext(), \"Documents does not exist\", Toast.LENGTH_SHORT);\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void impostaStatoGruppo(int nStato, String idGruppo, FirebaseFirestore db) {\r\n        switch (nStato){\r\n            case 1:\r\n                status.setBackgroundTintList(green);\r\n                aggiornaStatoGruppo(idGruppo, \"verde\", db);\r\n                break;\r\n            case 2:\r\n                status.setBackgroundTintList(yellow);\r\n                aggiornaStatoGruppo(idGruppo, \"giallo\", db);\r\n                break;\r\n            case 3:\r\n                status.setBackgroundTintList(orange);\r\n                aggiornaStatoGruppo(idGruppo, \"arancione\", db);\r\n                break;\r\n            case 4:\r\n                status.setBackgroundTintList(red);\r\n                aggiornaStatoGruppo(idGruppo, \"red\", db);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    private void aggiornaStatoGruppo (String idGruppo, String nuovoStatoGruppo,  FirebaseFirestore db){\r\n        db.collection(\"Gruppo\")\r\n                .document(idGruppo)\r\n                .update(\"statoGruppo\", nuovoStatoGruppo);\r\n    }\r\n\r\n\r\n\r\n    private int calcolaNuovoStatoGruppo(ArrayList<Utente> listaPartecipanti){\r\n        int nuovoStato = 0;\r\n        ArrayList <Integer> listaStati = new ArrayList<Integer> ();\r\n\r\n        for(int i = 0; i < listaPartecipanti.size(); i ++){\r\n            listaStati.add(listaPartecipanti.get(i).statoToNumber());\r\n        }\r\n\r\n\r\n        nuovoStato = Collections.max(listaStati);\r\n\r\n        return nuovoStato;\r\n    }\r\n\r\n\r\n    private void caricaImgDaStorage(StorageReference storageRef, String directory, String idImmagine, final ImageView imageView){\r\n        storageRef.child(directory + \"/\" + idImmagine).getDownloadUrl().addOnSuccessListener( new OnSuccessListener<Uri>() {\r\n            @Override\r\n            public void onSuccess(Uri uri) {\r\n                String sUrl = uri.toString(); //otteniamo il token del'immagine\r\n                Log.d(\"sUrl\", sUrl);\r\n                Picasso.get().load(sUrl).into(imageView);\r\n            }\r\n        }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception e) {\r\n                Log.d(\"OnFailure Exception\", String.valueOf(e));\r\n            }\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/contagiapp/gruppi/ProfiloGruppoAdminFragment.java	(revision 21bd0f2358c885c4b61cbc32378cedad3ea763a3)
+++ app/src/main/java/com/example/contagiapp/gruppi/ProfiloGruppoAdminFragment.java	(date 1635614516461)
@@ -64,7 +64,7 @@
     ColorStateList green = ColorStateList.valueOf(Color.parseColor("#FF43A047"));
 
 
-
+//TODO capire perchÃ¨ non escono gli admin ed i partecipanti sia in ProfiloGruppoAdminFragment che in ProfiloGruppoFragment
 
     public ProfiloGruppoAdminFragment() {
         // Required empty public constructor
Index: app/src/main/java/com/example/contagiapp/gruppi/GroupFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.contagiapp.gruppi;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentTransaction;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.GestureDetector;\r\nimport android.view.KeyEvent;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.inputmethod.EditorInfo;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.contagiapp.R;\r\nimport com.example.contagiapp.utente.Utente;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.android.material.textfield.TextInputEditText;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.gson.Gson;\r\n\r\nimport java.util.ArrayList;\r\n\r\n\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n */\r\npublic class GroupFragment extends Fragment {\r\n\r\n    public GroupFragment() {\r\n    }\r\n\r\n    private Utente utente;\r\n    private FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private FloatingActionButton crea_gruppo;\r\n    String mailUtenteLoggato;\r\n\r\n    TextInputEditText editTextSearch;\r\n\r\n    ArrayList<Gruppo> listaGruppiCreati;\r\n    ArrayList<Gruppo> listaGruppiPartecipante;\r\n    ArrayList<String> listaIdGruppiCreati = new ArrayList<String>();\r\n    ArrayList<String> listaIdGruppiPartecipante = new ArrayList<String>();\r\n\r\n\r\n    ArrayList<Gruppo> listaGruppiCreatiTrovati = new ArrayList<Gruppo>();\r\n    ArrayList<Gruppo> listaGruppiPartecipanteTrovati = new ArrayList<Gruppo>();\r\n    ArrayList<String> listaNomiGruppiCreati = new ArrayList<String>(); //mi serve per fare la ricerca sul nome del gruppo\r\n    ArrayList<String> listaNomiGruppiPartecipante = new ArrayList<String>(); //mi serve per fare la ricerca sul nome del gruppo\r\n\r\n    RecyclerView rvGruppiCreati;\r\n    RecyclerView rvGruppiPartecipante;\r\n    TextView tvTuoiGruppi;\r\n\r\n\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view;\r\n        view = inflater.inflate(R.layout.fragment_group, container, false);\r\n        mailUtenteLoggato = getMailUtenteLoggato();\r\n        tvTuoiGruppi = view.findViewById(R.id.tvTuoiGruppi);\r\n        rvGruppiCreati = view.findViewById(R.id.rvGruppiCreati);\r\n        rvGruppiPartecipante = view.findViewById(R.id.rvGruppiPartecipante);\r\n        editTextSearch = view.findViewById(R.id.search_field_group);\r\n\r\n\r\n        Log.d(\"mailUtLog\", mailUtenteLoggato);\r\n        caricaGruppi();\r\n\r\n        crea_gruppo = view.findViewById(R.id.FAB_groups);\r\n        crea_gruppo.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(getActivity(), CreaGruppoActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n\r\n\r\n        return view;\r\n    }\r\n\r\n\r\n\r\n\r\n    private ArrayList<String> ricerca(String testoInserito, ArrayList<String> listaInCuiCercare){\r\n\r\n\r\n        ArrayList<String> elementiTrovati = new ArrayList<String>();\r\n        for(int i=0; i < listaInCuiCercare.size(); i++){\r\n            if(listaInCuiCercare.get(i).toLowerCase().contains(testoInserito.toLowerCase())){\r\n                elementiTrovati.add(listaInCuiCercare.get(i));\r\n            }\r\n        }\r\n        return elementiTrovati;\r\n    }\r\n\r\n\r\n    private void caricaGruppi() {\r\n        listaGruppiCreati = new ArrayList<Gruppo>();\r\n        listaGruppiPartecipante = new ArrayList<Gruppo>();\r\n\r\n        String mailAdmin = mailUtenteLoggato;\r\n        Log.d(\"mailUtLogAd\", mailAdmin);\r\n\r\n\r\n        db.collection(\"Gruppo\").whereEqualTo(\"admin\", mailAdmin)\r\n                .get()\r\n                .addOnSuccessListener(new OnSuccessListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onSuccess(QuerySnapshot queryDocumentSnapshots) {\r\n                for (DocumentSnapshot documentSnapshot : queryDocumentSnapshots) {\r\n                    Gruppo gruppo = documentSnapshot.toObject(Gruppo.class);\r\n                    String id = documentSnapshot.getId();\r\n\r\n\r\n                    gruppo.aggiornaNroPartecipanti(gruppo.getPartecipanti());\r\n                    listaIdGruppiCreati.add(id);\r\n\r\n                    if(!listaNomiGruppiCreati.contains(gruppo.getNomeGruppo())){\r\n                        listaNomiGruppiCreati.add(gruppo.getNomeGruppo());\r\n                    }\r\n\r\n\r\n                    listaGruppiCreati.add(gruppo);\r\n                    Log.d(\"Lista_Gruppi\", String.valueOf(listaGruppiCreati));\r\n                    Log.d(\"Lista_ID\", String.valueOf(listaIdGruppiCreati));\r\n                    Log.d(\"ListaNomiGruppiCreat\", String.valueOf(listaNomiGruppiCreati));\r\n\r\n                }\r\n                if(listaGruppiCreati.isEmpty()){\r\n                    tvTuoiGruppi.setText(\"Non hai ancora nessun gruppo. Crea subito uno\");\r\n                }\r\n\r\n\r\n\r\n                GruppoAdapter adapter = new GruppoAdapter(listaGruppiCreati);\r\n                rvGruppiCreati.setAdapter(adapter);\r\n                rvGruppiCreati.setLayoutManager(new LinearLayoutManager(getActivity()));\r\n                rvGruppiCreati.addOnItemTouchListener(new RecyclerTouchListener(getActivity(), rvGruppiCreati, new RecyclerTouchListener.ClickListener() {\r\n                    @Override\r\n                    public void onClick(View view, int position) {\r\n                        Log.i(\"lista1: \", String.valueOf(listaIdGruppiCreati));\r\n                        String idGruppoSelezionato = listaIdGruppiCreati.get(position);\r\n                        Log.i(\"idList: \", idGruppoSelezionato);\r\n\r\n\r\n                        ProfiloGruppoAdminFragment fragment = new ProfiloGruppoAdminFragment();\r\n\r\n                        Bundle bundle = new Bundle();\r\n                        bundle.putString(\"idGruppo\", idGruppoSelezionato);\r\n\r\n                        fragment.setArguments(bundle);\r\n\r\n                        //richiamo il fragment\r\n                        FragmentTransaction fr = getActivity().getSupportFragmentManager().beginTransaction();\r\n                        fr.replace(R.id.container,fragment);\r\n                        fr.addToBackStack(null); //serve per tornare al fragment precedente\r\n                        fr.commit();\r\n                    }\r\n\r\n                    @Override\r\n                    public void onLongClick(View view, int position) {\r\n\r\n                    }\r\n\r\n                }));\r\n\r\n            }\r\n        }); //toDo onFailure\r\n\r\n        db.collection(\"Gruppo\").whereArrayContains(\"partecipanti\", mailUtenteLoggato)\r\n                .get()\r\n                .addOnSuccessListener(new OnSuccessListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onSuccess(QuerySnapshot queryDocumentSnapshots) {\r\n                        for (DocumentSnapshot documentSnapshot : queryDocumentSnapshots) {\r\n                            Gruppo gruppo = documentSnapshot.toObject(Gruppo.class);\r\n\r\n                            Log.d(\"gruppo.getPartecipanti\", String.valueOf(gruppo.getPartecipanti()));\r\n                            gruppo.setPartecipanti(gruppo.getPartecipanti());\r\n                            gruppo.aggiornaNroPartecipanti(gruppo.getPartecipanti());\r\n\r\n                            String id = documentSnapshot.getId();\r\n                            listaIdGruppiPartecipante.add(id);\r\n                            listaGruppiPartecipante.add(gruppo);\r\n\r\n\r\n                            Log.d(\"ListaGruppiPartecipante\", String.valueOf(listaGruppiPartecipante));\r\n                            Log.d(\"Lista_ID\", String.valueOf(listaIdGruppiCreati));\r\n\r\n                            if(!listaNomiGruppiPartecipante.contains(gruppo.getNomeGruppo())){\r\n                                listaNomiGruppiPartecipante.add(gruppo.getNomeGruppo());\r\n                            }\r\n\r\n\r\n                            if(!listaGruppiPartecipante.isEmpty()){\r\n                                tvTuoiGruppi.setText(\"I tuoi gruppi\");\r\n                            }\r\n\r\n                        }//fine for\r\n\r\n                        GruppoAdapter adapter = new GruppoAdapter(listaGruppiPartecipante);\r\n                        rvGruppiPartecipante.setAdapter(adapter);\r\n                        rvGruppiPartecipante.setLayoutManager(new LinearLayoutManager(getActivity()));\r\n                        rvGruppiPartecipante.addOnItemTouchListener(new RecyclerTouchListener(getActivity(), rvGruppiPartecipante, new RecyclerTouchListener.ClickListener() {\r\n                            @Override\r\n                            public void onClick(View view, int position) {\r\n                                Log.i(\"lista2: \", String.valueOf(listaIdGruppiPartecipante));\r\n                                String idGruppoSelezionato = listaIdGruppiPartecipante.get(position);\r\n                                Log.i(\"idGruppoSelezionato: \", idGruppoSelezionato);\r\n\r\n                                ProfiloGruppoFragment fragment = new ProfiloGruppoFragment();\r\n\r\n                                Bundle bundle = new Bundle();\r\n                                bundle.putString(\"idGruppo\", idGruppoSelezionato);\r\n\r\n                                fragment.setArguments(bundle);\r\n\r\n                                //richiamo il fragment\r\n                                FragmentTransaction fr = getActivity().getSupportFragmentManager().beginTransaction();\r\n                                fr.replace(R.id.container,fragment);\r\n                                fr.addToBackStack(null); //serve per tornare al fragment precedente\r\n                                fr.commit();\r\n                            }\r\n\r\n                            @Override\r\n                            public void onLongClick(View view, int position) {\r\n\r\n                            }\r\n\r\n                        }));\r\n\r\n                    }\r\n                });\r\n\r\n        //RICERCA\r\n        if(!editTextSearch.toString().isEmpty()){\r\n\r\n\r\n            editTextSearch.setOnEditorActionListener(new TextView.OnEditorActionListener() {\r\n                @Override\r\n                public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {\r\n                    if (actionId == EditorInfo.IME_ACTION_SEARCH) {\r\n                        listaGruppiCreati.clear();\r\n                        listaGruppiPartecipante.clear();\r\n                        listaGruppiCreatiTrovati.clear();\r\n                        listaGruppiPartecipanteTrovati.clear();\r\n                        listaIdGruppiCreati.clear();\r\n                        listaIdGruppiPartecipante.clear();\r\n\r\n                        //da inserire metodo per la ricerca\r\n\r\n                        ArrayList<String> nomeGruppiCreatiTrovati = new ArrayList<String>();\r\n                        ArrayList<String> nomeGruppiPartecipantiTrovati = new ArrayList<String>();\r\n                        nomeGruppiCreatiTrovati = ricerca(editTextSearch.getText().toString(), listaNomiGruppiCreati);\r\n                        nomeGruppiPartecipantiTrovati = ricerca(editTextSearch.getText().toString(), listaNomiGruppiPartecipante);\r\n\r\n                        Log.d(\"listaInCuiCercare\", String.valueOf(listaNomiGruppiCreati));\r\n                        Log.d(\"gruppiTrovati\", String.valueOf(nomeGruppiCreatiTrovati));\r\n\r\n\r\n\r\n\r\n                        //ottengo l'id del gruppo creato Trovato\r\n                        for(int i = 0; i < nomeGruppiCreatiTrovati.size(); i++){\r\n                            db.collection(\"Gruppo\")\r\n                                    .whereEqualTo(\"nomeGruppo\", nomeGruppiCreatiTrovati.get(i))\r\n                                    .get()\r\n                                    .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                                        @Override\r\n                                        public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                                            for (QueryDocumentSnapshot document : task.getResult()) {\r\n                                                Gruppo gruppoTrovato = document.toObject(Gruppo.class);\r\n                                                gruppoTrovato.aggiornaNroPartecipanti(gruppoTrovato.getPartecipanti());\r\n                                                listaGruppiCreatiTrovati.add(gruppoTrovato);\r\n                                                listaIdGruppiCreati.add(gruppoTrovato.getIdGruppo());\r\n\r\n\r\n\r\n                                            }\r\n                                            Log.d(\"listaGruppiTrovati\", String.valueOf(listaGruppiCreatiTrovati));\r\n                                            Log.d(\"listaGruppiCreati_ID\", String.valueOf(listaIdGruppiCreati));\r\n\r\n                                            GruppoAdapter adapter = new GruppoAdapter(listaGruppiCreatiTrovati);\r\n                                            rvGruppiCreati.setAdapter(adapter);\r\n                                            rvGruppiCreati.setLayoutManager(new LinearLayoutManager(getActivity()));\r\n\r\n                                        }\r\n                                    });\r\n                        }\r\n                        //ottengo l'id del gruppo Trovato a cui partecipo\r\n                        for(int i = 0; i < nomeGruppiPartecipantiTrovati.size(); i++){\r\n                            db.collection(\"Gruppo\")\r\n                                    .whereEqualTo(\"nomeGruppo\", nomeGruppiPartecipantiTrovati.get(i))\r\n                                    .get()\r\n                                    .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                                        @Override\r\n                                        public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                                            for (QueryDocumentSnapshot document : task.getResult()) {\r\n                                                Gruppo gruppoTrovato = document.toObject(Gruppo.class);\r\n                                                gruppoTrovato.aggiornaNroPartecipanti(gruppoTrovato.getPartecipanti());\r\n\r\n                                                listaGruppiPartecipanteTrovati.add(gruppoTrovato);\r\n                                                listaIdGruppiPartecipante.add(gruppoTrovato.getIdGruppo());\r\n\r\n\r\n                                            }\r\n                                            Log.d(\"listaGruppiPartTrovati\", String.valueOf(listaGruppiPartecipanteTrovati));\r\n                                            Log.d(\"listaGruppiParte_ID\", String.valueOf(listaIdGruppiPartecipante));\r\n\r\n                                            GruppoAdapter adapter = new GruppoAdapter(listaGruppiPartecipanteTrovati);\r\n                                            rvGruppiPartecipante.setAdapter(adapter);\r\n                                            rvGruppiPartecipante.setLayoutManager(new LinearLayoutManager(getActivity()));\r\n\r\n                                        }\r\n                                    });\r\n                        }\r\n\r\n                        hideSoftKeyboard(getActivity()); //nascode la tastiera dopo aver cliccato il tasto cerca nella tastiera\r\n                        return true;\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    //funzione che nasconde la tastiera\r\n    public static void hideSoftKeyboard(Activity activity) {\r\n        InputMethodManager inputMethodManager =\r\n                (InputMethodManager) activity.getSystemService(\r\n                        Activity.INPUT_METHOD_SERVICE);\r\n        if(inputMethodManager.isAcceptingText()){\r\n            inputMethodManager.hideSoftInputFromWindow(\r\n                    activity.getCurrentFocus().getWindowToken(),\r\n                    0\r\n            );\r\n        }\r\n    }\r\n\r\n    private String getMailUtenteLoggato(){\r\n        Gson gson = new Gson();\r\n        SharedPreferences prefs = getActivity().getApplicationContext().getSharedPreferences(\"Login\", Context.MODE_PRIVATE);\r\n        String json = prefs.getString(\"utente\", \"no\");\r\n        String mailUtenteLoggato;\r\n        if(!json.equals(\"no\")) {\r\n            utente = gson.fromJson(json, Utente.class);\r\n            mailUtenteLoggato = utente.getMail();\r\n            Log.d(\"mailutenteLoggato\", mailUtenteLoggato);\r\n        } else {\r\n            SharedPreferences prefs1 = getActivity().getApplicationContext().getSharedPreferences(\"LoginTemporaneo\",Context.MODE_PRIVATE);\r\n            mailUtenteLoggato = prefs1.getString(\"mail\", \"no\");\r\n            Log.d(\"mail\", mailUtenteLoggato);\r\n        }\r\n        return mailUtenteLoggato;\r\n    }\r\n\r\n    private static class RecyclerTouchListener implements RecyclerView.OnItemTouchListener {\r\n        private GestureDetector gestureDetector;\r\n        private RecyclerTouchListener.ClickListener clickListener;\r\n\r\n        public RecyclerTouchListener(Context context, final RecyclerView recyclerView, final RecyclerTouchListener.ClickListener clickListener) {\r\n            this.clickListener = clickListener;\r\n            gestureDetector = new GestureDetector(context, new GestureDetector.SimpleOnGestureListener() {\r\n                @Override\r\n                public boolean onSingleTapUp(MotionEvent e) {\r\n                    return true;\r\n                }\r\n\r\n                public void onLongPress(MotionEvent e) {\r\n                    View child = recyclerView.findChildViewUnder(e.getX(), e.getY());\r\n                    if (child != null && clickListener != null) {\r\n                        clickListener.onLongClick(child, recyclerView.getChildAdapterPosition(child));\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        @Override\r\n        public boolean onInterceptTouchEvent(@NonNull RecyclerView rv, @NonNull MotionEvent e) {\r\n            View child = rv.findChildViewUnder(e.getX(), e.getY());\r\n\r\n            if (child != null && clickListener != null && gestureDetector.onTouchEvent(e)) {\r\n                clickListener.onClick(child, rv.getChildAdapterPosition(child));\r\n            }\r\n            return false;\r\n        }\r\n\r\n        @Override\r\n        public void onTouchEvent(@NonNull RecyclerView rv, @NonNull MotionEvent e) {\r\n\r\n        }\r\n\r\n        @Override\r\n        public void onRequestDisallowInterceptTouchEvent(boolean disallowIntercept) {\r\n\r\n        }\r\n\r\n        public interface ClickListener {\r\n            void onClick(View view, int position);\r\n\r\n            void onLongClick(View view, int position);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/contagiapp/gruppi/GroupFragment.java	(revision 21bd0f2358c885c4b61cbc32378cedad3ea763a3)
+++ app/src/main/java/com/example/contagiapp/gruppi/GroupFragment.java	(date 1635614263717)
@@ -59,19 +59,13 @@
 
     TextInputEditText editTextSearch;
 
-    ArrayList<Gruppo> listaGruppiCreati;
-    ArrayList<Gruppo> listaGruppiPartecipante;
-    ArrayList<String> listaIdGruppiCreati = new ArrayList<String>();
-    ArrayList<String> listaIdGruppiPartecipante = new ArrayList<String>();
-
+    ArrayList<Gruppo> listaGruppi;
+    ArrayList<Boolean> adminPartecipante = new ArrayList<>();
+    ArrayList<String> listaIdGruppi = new ArrayList<String>();
+    ArrayList<String> listaNomiGruppi = new ArrayList<>();
+    ArrayList<Gruppo> listaGruppiTrovati = new ArrayList<>();
 
-    ArrayList<Gruppo> listaGruppiCreatiTrovati = new ArrayList<Gruppo>();
-    ArrayList<Gruppo> listaGruppiPartecipanteTrovati = new ArrayList<Gruppo>();
-    ArrayList<String> listaNomiGruppiCreati = new ArrayList<String>(); //mi serve per fare la ricerca sul nome del gruppo
-    ArrayList<String> listaNomiGruppiPartecipante = new ArrayList<String>(); //mi serve per fare la ricerca sul nome del gruppo
-
-    RecyclerView rvGruppiCreati;
-    RecyclerView rvGruppiPartecipante;
+    RecyclerView rvGruppi;
     TextView tvTuoiGruppi;
 
 
@@ -84,10 +78,10 @@
         view = inflater.inflate(R.layout.fragment_group, container, false);
         mailUtenteLoggato = getMailUtenteLoggato();
         tvTuoiGruppi = view.findViewById(R.id.tvTuoiGruppi);
-        rvGruppiCreati = view.findViewById(R.id.rvGruppiCreati);
-        rvGruppiPartecipante = view.findViewById(R.id.rvGruppiPartecipante);
         editTextSearch = view.findViewById(R.id.search_field_group);
 
+        rvGruppi = view.findViewById(R.id.rvGruppi);
+
 
         Log.d("mailUtLog", mailUtenteLoggato);
         caricaGruppi();
@@ -101,17 +95,15 @@
             }
         });
 
-
-
+        ricerca1();
         return view;
     }
 
+    private void ricerca1() {
 
-
+    }
 
     private ArrayList<String> ricerca(String testoInserito, ArrayList<String> listaInCuiCercare){
-
-
         ArrayList<String> elementiTrovati = new ArrayList<String>();
         for(int i=0; i < listaInCuiCercare.size(); i++){
             if(listaInCuiCercare.get(i).toLowerCase().contains(testoInserito.toLowerCase())){
@@ -121,237 +113,112 @@
         return elementiTrovati;
     }
 
-
     private void caricaGruppi() {
-        listaGruppiCreati = new ArrayList<Gruppo>();
-        listaGruppiPartecipante = new ArrayList<Gruppo>();
-
-        String mailAdmin = mailUtenteLoggato;
-        Log.d("mailUtLogAd", mailAdmin);
+        listaGruppi = new ArrayList<>();
 
-
-        db.collection("Gruppo").whereEqualTo("admin", mailAdmin)
+        db.collection("Gruppo")
+                .whereArrayContains("partecipanti", mailUtenteLoggato)
                 .get()
                 .addOnSuccessListener(new OnSuccessListener<QuerySnapshot>() {
-            @Override
-            public void onSuccess(QuerySnapshot queryDocumentSnapshots) {
-                for (DocumentSnapshot documentSnapshot : queryDocumentSnapshots) {
-                    Gruppo gruppo = documentSnapshot.toObject(Gruppo.class);
-                    String id = documentSnapshot.getId();
+                    @Override
+                    public void onSuccess(QuerySnapshot queryDocumentSnapshots) {
+                        for (DocumentSnapshot documentSnapshot : queryDocumentSnapshots) {
+                            Gruppo gruppo = documentSnapshot.toObject(Gruppo.class);
+                            String id = documentSnapshot.getId();
 
+                            //gruppo.aggiornaNroPartecipanti(gruppo.getPartecipanti());
+                            listaIdGruppi.add(id);
+                            listaGruppi.add(gruppo);
 
-                    gruppo.aggiornaNroPartecipanti(gruppo.getPartecipanti());
-                    listaIdGruppiCreati.add(id);
+                            //true = gruppoAdmin // false = gruppoPartecipante
+                            if(gruppo.getAdmin().equals(mailUtenteLoggato)) adminPartecipante.add(true);
+                            else adminPartecipante.add(false);
 
-                    if(!listaNomiGruppiCreati.contains(gruppo.getNomeGruppo())){
-                        listaNomiGruppiCreati.add(gruppo.getNomeGruppo());
-                    }
-
-
-                    listaGruppiCreati.add(gruppo);
-                    Log.d("Lista_Gruppi", String.valueOf(listaGruppiCreati));
-                    Log.d("Lista_ID", String.valueOf(listaIdGruppiCreati));
-                    Log.d("ListaNomiGruppiCreat", String.valueOf(listaNomiGruppiCreati));
-
-                }
-                if(listaGruppiCreati.isEmpty()){
-                    tvTuoiGruppi.setText("Non hai ancora nessun gruppo. Crea subito uno");
-                }
+                            if(!listaNomiGruppi.contains(gruppo.getNomeGruppo())){
+                                listaNomiGruppi.add(gruppo.getNomeGruppo());
+                            }
+                        }
+
+                        if(listaGruppi.isEmpty()){
+                            tvTuoiGruppi.setText("Non hai ancora nessun gruppo. Crea subito uno");
+                        } else tvTuoiGruppi.setText("I tuoi gruppi");
 
 
-
-                GruppoAdapter adapter = new GruppoAdapter(listaGruppiCreati);
-                rvGruppiCreati.setAdapter(adapter);
-                rvGruppiCreati.setLayoutManager(new LinearLayoutManager(getActivity()));
-                rvGruppiCreati.addOnItemTouchListener(new RecyclerTouchListener(getActivity(), rvGruppiCreati, new RecyclerTouchListener.ClickListener() {
-                    @Override
-                    public void onClick(View view, int position) {
-                        Log.i("lista1: ", String.valueOf(listaIdGruppiCreati));
-                        String idGruppoSelezionato = listaIdGruppiCreati.get(position);
-                        Log.i("idList: ", idGruppoSelezionato);
+                        GruppoAdapter adapter = new GruppoAdapter(listaGruppi);
+                        rvGruppi.setAdapter(adapter);
+                        rvGruppi.setLayoutManager(new LinearLayoutManager(getActivity()));
+                        rvGruppi.addOnItemTouchListener(new RecyclerTouchListener(getActivity(), rvGruppi, new RecyclerTouchListener.ClickListener() {
+                            @Override
+                            public void onClick(View view, int position) {
+                                String idGruppoSelezionato = listaIdGruppi.get(position);
 
+                                Fragment fragment;
 
-                        ProfiloGruppoAdminFragment fragment = new ProfiloGruppoAdminFragment();
+                                if(adminPartecipante.get(position)) fragment = new ProfiloGruppoAdminFragment();
+                                else fragment = new ProfiloGruppoFragment();
 
-                        Bundle bundle = new Bundle();
-                        bundle.putString("idGruppo", idGruppoSelezionato);
+                                Bundle bundle = new Bundle();
+                                bundle.putString("idGruppo", idGruppoSelezionato);
 
-                        fragment.setArguments(bundle);
+                                fragment.setArguments(bundle);
 
-                        //richiamo il fragment
-                        FragmentTransaction fr = getActivity().getSupportFragmentManager().beginTransaction();
-                        fr.replace(R.id.container,fragment);
-                        fr.addToBackStack(null); //serve per tornare al fragment precedente
-                        fr.commit();
-                    }
+                                //richiamo il fragment
+                                FragmentTransaction fr = getActivity().getSupportFragmentManager().beginTransaction();
+                                fr.replace(R.id.container,fragment);
+                                fr.addToBackStack(null); //serve per tornare al fragment precedente
+                                fr.commit();
+                            }
 
-                    @Override
-                    public void onLongClick(View view, int position) {
+                            @Override
+                            public void onLongClick(View view, int position) {
 
-                    }
-
-                }));
+                            }
+                        }));
 
-            }
-        }); //toDo onFailure
-
-        db.collection("Gruppo").whereArrayContains("partecipanti", mailUtenteLoggato)
-                .get()
-                .addOnSuccessListener(new OnSuccessListener<QuerySnapshot>() {
-                    @Override
-                    public void onSuccess(QuerySnapshot queryDocumentSnapshots) {
-                        for (DocumentSnapshot documentSnapshot : queryDocumentSnapshots) {
-                            Gruppo gruppo = documentSnapshot.toObject(Gruppo.class);
-
-                            Log.d("gruppo.getPartecipanti", String.valueOf(gruppo.getPartecipanti()));
-                            gruppo.setPartecipanti(gruppo.getPartecipanti());
-                            gruppo.aggiornaNroPartecipanti(gruppo.getPartecipanti());
-
-                            String id = documentSnapshot.getId();
-                            listaIdGruppiPartecipante.add(id);
-                            listaGruppiPartecipante.add(gruppo);
-
-
-                            Log.d("ListaGruppiPartecipante", String.valueOf(listaGruppiPartecipante));
-                            Log.d("Lista_ID", String.valueOf(listaIdGruppiCreati));
-
-                            if(!listaNomiGruppiPartecipante.contains(gruppo.getNomeGruppo())){
-                                listaNomiGruppiPartecipante.add(gruppo.getNomeGruppo());
-                            }
-
-
-                            if(!listaGruppiPartecipante.isEmpty()){
-                                tvTuoiGruppi.setText("I tuoi gruppi");
-                            }
-
-                        }//fine for
-
-                        GruppoAdapter adapter = new GruppoAdapter(listaGruppiPartecipante);
-                        rvGruppiPartecipante.setAdapter(adapter);
-                        rvGruppiPartecipante.setLayoutManager(new LinearLayoutManager(getActivity()));
-                        rvGruppiPartecipante.addOnItemTouchListener(new RecyclerTouchListener(getActivity(), rvGruppiPartecipante, new RecyclerTouchListener.ClickListener() {
-                            @Override
-                            public void onClick(View view, int position) {
-                                Log.i("lista2: ", String.valueOf(listaIdGruppiPartecipante));
-                                String idGruppoSelezionato = listaIdGruppiPartecipante.get(position);
-                                Log.i("idGruppoSelezionato: ", idGruppoSelezionato);
-
-                                ProfiloGruppoFragment fragment = new ProfiloGruppoFragment();
-
-                                Bundle bundle = new Bundle();
-                                bundle.putString("idGruppo", idGruppoSelezionato);
-
-                                fragment.setArguments(bundle);
-
-                                //richiamo il fragment
-                                FragmentTransaction fr = getActivity().getSupportFragmentManager().beginTransaction();
-                                fr.replace(R.id.container,fragment);
-                                fr.addToBackStack(null); //serve per tornare al fragment precedente
-                                fr.commit();
-                            }
-
-                            @Override
-                            public void onLongClick(View view, int position) {
-
-                            }
-
-                        }));
-
-                    }
-                });
-
-        //RICERCA
-        if(!editTextSearch.toString().isEmpty()){
-
-
-            editTextSearch.setOnEditorActionListener(new TextView.OnEditorActionListener() {
-                @Override
-                public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {
-                    if (actionId == EditorInfo.IME_ACTION_SEARCH) {
-                        listaGruppiCreati.clear();
-                        listaGruppiPartecipante.clear();
-                        listaGruppiCreatiTrovati.clear();
-                        listaGruppiPartecipanteTrovati.clear();
-                        listaIdGruppiCreati.clear();
-                        listaIdGruppiPartecipante.clear();
-
-                        //da inserire metodo per la ricerca
+                        //RICERCA
+                        if(!editTextSearch.toString().isEmpty()){
+                            editTextSearch.setOnEditorActionListener(new TextView.OnEditorActionListener() {
+                                @Override
+                                public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {
+                                    if (actionId == EditorInfo.IME_ACTION_SEARCH) {
+                                        listaGruppi.clear();
+                                        listaGruppiTrovati.clear();
 
-                        ArrayList<String> nomeGruppiCreatiTrovati = new ArrayList<String>();
-                        ArrayList<String> nomeGruppiPartecipantiTrovati = new ArrayList<String>();
-                        nomeGruppiCreatiTrovati = ricerca(editTextSearch.getText().toString(), listaNomiGruppiCreati);
-                        nomeGruppiPartecipantiTrovati = ricerca(editTextSearch.getText().toString(), listaNomiGruppiPartecipante);
+                                        //TODO da inserire metodo per la ricerca
 
-                        Log.d("listaInCuiCercare", String.valueOf(listaNomiGruppiCreati));
-                        Log.d("gruppiTrovati", String.valueOf(nomeGruppiCreatiTrovati));
+                                        ArrayList<String> nomeGruppiTrovati;
+                                        nomeGruppiTrovati = ricerca(editTextSearch.getText().toString(), listaNomiGruppi);
 
-
-
-
-                        //ottengo l'id del gruppo creato Trovato
-                        for(int i = 0; i < nomeGruppiCreatiTrovati.size(); i++){
-                            db.collection("Gruppo")
-                                    .whereEqualTo("nomeGruppo", nomeGruppiCreatiTrovati.get(i))
-                                    .get()
-                                    .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
-                                        @Override
-                                        public void onComplete(@NonNull Task<QuerySnapshot> task) {
-                                            for (QueryDocumentSnapshot document : task.getResult()) {
-                                                Gruppo gruppoTrovato = document.toObject(Gruppo.class);
-                                                gruppoTrovato.aggiornaNroPartecipanti(gruppoTrovato.getPartecipanti());
-                                                listaGruppiCreatiTrovati.add(gruppoTrovato);
-                                                listaIdGruppiCreati.add(gruppoTrovato.getIdGruppo());
-
-
-
-                                            }
-                                            Log.d("listaGruppiTrovati", String.valueOf(listaGruppiCreatiTrovati));
-                                            Log.d("listaGruppiCreati_ID", String.valueOf(listaIdGruppiCreati));
-
-                                            GruppoAdapter adapter = new GruppoAdapter(listaGruppiCreatiTrovati);
-                                            rvGruppiCreati.setAdapter(adapter);
-                                            rvGruppiCreati.setLayoutManager(new LinearLayoutManager(getActivity()));
-
-                                        }
-                                    });
-                        }
-                        //ottengo l'id del gruppo Trovato a cui partecipo
-                        for(int i = 0; i < nomeGruppiPartecipantiTrovati.size(); i++){
-                            db.collection("Gruppo")
-                                    .whereEqualTo("nomeGruppo", nomeGruppiPartecipantiTrovati.get(i))
-                                    .get()
-                                    .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
-                                        @Override
-                                        public void onComplete(@NonNull Task<QuerySnapshot> task) {
-                                            for (QueryDocumentSnapshot document : task.getResult()) {
-                                                Gruppo gruppoTrovato = document.toObject(Gruppo.class);
-                                                gruppoTrovato.aggiornaNroPartecipanti(gruppoTrovato.getPartecipanti());
-
-                                                listaGruppiPartecipanteTrovati.add(gruppoTrovato);
-                                                listaIdGruppiPartecipante.add(gruppoTrovato.getIdGruppo());
-
-
-                                            }
-                                            Log.d("listaGruppiPartTrovati", String.valueOf(listaGruppiPartecipanteTrovati));
-                                            Log.d("listaGruppiParte_ID", String.valueOf(listaIdGruppiPartecipante));
+                                        for(int i = 0; i < nomeGruppiTrovati.size(); i++){
+                                            db.collection("Gruppo")
+                                                    .whereEqualTo("nomeGruppo", nomeGruppiTrovati.get(i))
+                                                    .get()
+                                                    .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
+                                                        @Override
+                                                        public void onComplete(@NonNull Task<QuerySnapshot> task) {
+                                                            for (QueryDocumentSnapshot document : task.getResult()) {
+                                                                Gruppo gruppoTrovato = document.toObject(Gruppo.class);
+                                                                gruppoTrovato.aggiornaNroPartecipanti(gruppoTrovato.getPartecipanti());
+                                                                listaGruppiTrovati.add(gruppoTrovato);
+                                                                listaIdGruppi.add(gruppoTrovato.getIdGruppo());
+                                                            }
 
-                                            GruppoAdapter adapter = new GruppoAdapter(listaGruppiPartecipanteTrovati);
-                                            rvGruppiPartecipante.setAdapter(adapter);
-                                            rvGruppiPartecipante.setLayoutManager(new LinearLayoutManager(getActivity()));
-
-                                        }
-                                    });
-                        }
+                                                            GruppoAdapter adapter = new GruppoAdapter(listaGruppiTrovati);
+                                                            rvGruppi.setAdapter(adapter);
+                                                            rvGruppi.setLayoutManager(new LinearLayoutManager(getActivity()));
+                                                        }
+                                                    });
+                                        }
 
-                        hideSoftKeyboard(getActivity()); //nascode la tastiera dopo aver cliccato il tasto cerca nella tastiera
-                        return true;
-                    }
-
-                    return false;
-                }
-            });
-
-        }
+                                        hideSoftKeyboard(getActivity()); //nascode la tastiera dopo aver cliccato il tasto cerca nella tastiera
+                                        return true;
+                                    }
+                                    return false;
+                                }
+                            });
+                        }
+                    }
+                });
     }
 
     //funzione che nasconde la tastiera
Index: app/src/main/java/com/example/contagiapp/eventi/PartecipazioneGruppoFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.contagiapp.eventi;\r\n\r\nimport android.content.Context;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentTransaction;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.util.Log;\r\nimport android.view.GestureDetector;\r\nimport android.view.KeyEvent;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.inputmethod.EditorInfo;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.contagiapp.R;\r\nimport com.example.contagiapp.gruppi.GroupFragment;\r\nimport com.example.contagiapp.gruppi.Gruppo;\r\nimport com.example.contagiapp.gruppi.GruppoAdapter;\r\nimport com.example.contagiapp.gruppi.ProfiloGruppoAdminFragment;\r\nimport com.example.contagiapp.gruppi.ProfiloGruppoFragment;\r\nimport com.example.contagiapp.notifiche.EventPartecipanteAdapter;\r\nimport com.example.contagiapp.utente.Utente;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.gson.Gson;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport es.dmoral.toasty.Toasty;\r\n\r\n\r\npublic class PartecipazioneGruppoFragment extends Fragment {\r\n\r\n    private FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private Utente utente;\r\n    RecyclerView rvGruppiCreati;\r\n    ArrayList<Gruppo> listaGruppiCreati;\r\n    ArrayList<Gruppo> listaGruppiPartecipante;\r\n    ArrayList<String> listaIdGruppiCreati = new ArrayList<String>();\r\n    ArrayList<String> listaGruppi = new ArrayList<String>();\r\n    String idEvento;\r\n    ArrayList<String> listaPartecipantiEvento;\r\n    int numPostiDisponibili;\r\n\r\n    public PartecipazioneGruppoFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        View view;\r\n        view = inflater.inflate(R.layout.fragment_partecipazione_gruppo, container, false);\r\n        rvGruppiCreati = view.findViewById(R.id.rvGruppiCreati);\r\n\r\n        Bundle bundle = getArguments();\r\n        idEvento = bundle.getString(\"idEvento\");\r\n        Log.d(\"bundle\", String.valueOf(idEvento));\r\n\r\n\r\n        db.collection(\"Eventi\")\r\n                .document(idEvento)\r\n                .get()\r\n                .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                    @Override\r\n                    public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                        Evento evento = documentSnapshot.toObject(Evento.class);\r\n\r\n                        numPostiDisponibili = evento.getNumeroMaxPartecipanti() - evento.getPartecipanti().size();\r\n\r\n                        if(documentSnapshot.exists()){\r\n                            listaGruppi = evento.getGruppiPartecipanti();\r\n                            listaPartecipantiEvento = evento.getPartecipanti();\r\n                            Log.d(\"listaPartecipantiEvento\", String.valueOf(listaPartecipantiEvento));\r\n                        }\r\n\r\n                    }\r\n                });\r\n\r\n        caricaGruppi();\r\n        // Inflate the layout for this fragment\r\n        return view;\r\n    }\r\n\r\n    private void tornareIndietro(int i) {\r\n\r\n        Fragment fragment = null;\r\n\r\n        switch (i) {\r\n            case 1:\r\n                fragment = new EliminazionePartecipazioneEvento();\r\n                break;\r\n            case 2:\r\n                fragment = new ProfiloEventoFragment();\r\n                break;\r\n        }\r\n\r\n        Bundle bundle = new Bundle();\r\n        bundle.putString(\"idEvento\", idEvento);\r\n        bundle.putBoolean(\"partenza\", false);\r\n\r\n        fragment.setArguments(bundle);\r\n\r\n        //richiamo il fragment\r\n\r\n        FragmentTransaction fr = getActivity().getSupportFragmentManager().beginTransaction();\r\n        fr.replace(R.id.container,fragment);\r\n        fr.addToBackStack(null); //serve per tornare al fragment precedente\r\n        fr.commit();\r\n    }\r\n\r\n\r\n    private void caricaGruppi() {\r\n        listaGruppiCreati = new ArrayList<Gruppo>();\r\n        listaGruppiPartecipante = new ArrayList<Gruppo>();\r\n        String mailAdmin = getMailUtenteLoggato();\r\n\r\n\r\n        db.collection(\"Gruppo\")\r\n                .whereEqualTo(\"admin\", mailAdmin)\r\n                .get()\r\n                .addOnSuccessListener(new OnSuccessListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onSuccess(QuerySnapshot queryDocumentSnapshots) {\r\n                        for (DocumentSnapshot documentSnapshot : queryDocumentSnapshots) {\r\n                            Gruppo gruppo = documentSnapshot.toObject(Gruppo.class);\r\n\r\n                            String statoGruppo = String.valueOf(gruppo.getStatoGruppo());\r\n                            if(gruppo.getNroPartecipanti() <= numPostiDisponibili &&\r\n                                    (statoGruppo.equals(\"verde\") || statoGruppo.equals(\"giallo\"))) {\r\n                                String id = documentSnapshot.getId();\r\n\r\n                                listaIdGruppiCreati.add(id);\r\n                                listaGruppiCreati.add(gruppo);\r\n                            }\r\n                        }\r\n\r\n\r\n                        if(listaGruppiCreati.isEmpty()){\r\n                            Toast.makeText(getContext(),\"Non hai ancora nessun gruppo. Crea subito uno\",Toast.LENGTH_LONG).show();\r\n                        }\r\n\r\n                        if(listaIdGruppiCreati.size()!=0) {\r\n                            GruppoAdapter adapter = new GruppoAdapter(listaGruppiCreati);\r\n                            rvGruppiCreati.setAdapter(adapter);\r\n                            rvGruppiCreati.setLayoutManager(new LinearLayoutManager(getActivity()));\r\n                            rvGruppiCreati.addOnItemTouchListener(new PartecipazioneGruppoFragment.RecyclerTouchListener(getActivity(), rvGruppiCreati, new PartecipazioneGruppoFragment.RecyclerTouchListener.ClickListener() {\r\n                                @Override\r\n                                public void onClick(View view, int position) {\r\n                                    Log.i(\"lista1: \", String.valueOf(listaIdGruppiCreati));\r\n                                    final String idGruppoSelezionato = listaIdGruppiCreati.get(position);\r\n                                    Log.i(\"idList: \", idGruppoSelezionato);\r\n\r\n\r\n                                    if(!listaGruppi.contains(idGruppoSelezionato)){\r\n                                        listaGruppi.add(idGruppoSelezionato);\r\n                                        Toasty.success(getActivity(), \"Prenotazione effettuata\", Toast.LENGTH_SHORT).show();\r\n\r\n                                        db.collection(\"Gruppo\")\r\n                                                .document(idGruppoSelezionato)\r\n                                                .get()\r\n                                                .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                                                    @Override\r\n                                                    public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                                                        //recupero tutti i partecipanti al gruppo\r\n                                                        //aggiungo questi alla lista dei partecipanti all'evento (metterndoci i controlli se quell'email giÃ  esiste)\r\n\r\n                                                        if(documentSnapshot.exists()){\r\n                                                            Gruppo gruppo = documentSnapshot.toObject(Gruppo.class);\r\n                                                            final ArrayList<String> listaPartecipantiGruppo = gruppo.getPartecipanti();\r\n                                                            Log.d(\"listaPartecipantiGruppo\", String.valueOf(listaPartecipantiGruppo));\r\n\r\n                                                            //aggiunta alla lista dei partecipanti all'evento i partecipanti del gruppo\r\n\r\n                                                            for(int i = 0; i < listaPartecipantiGruppo.size(); i++) {\r\n                                                                boolean cond = true;\r\n                                                                for(int j = 0; j < listaPartecipantiEvento.size(); j++) {\r\n                                                                    if(listaPartecipantiGruppo.get(i).equals(listaPartecipantiEvento.get(j))) {\r\n                                                                        cond = false;\r\n                                                                    }\r\n                                                                }\r\n\r\n                                                                if(cond) {\r\n                                                                    listaPartecipantiEvento.add(listaPartecipantiGruppo.get(i));\r\n                                                                }\r\n                                                            }\r\n\r\n                                                            db.collection(\"Eventi\")\r\n                                                                    .document(idEvento)\r\n                                                                    .update(\"partecipanti\", listaPartecipantiEvento);\r\n                                                            tornareIndietro(1);\r\n                                                        }\r\n                                                    }\r\n                                                });\r\n\r\n                                        db.collection(\"Eventi\")\r\n                                                .document(idEvento)\r\n                                                .update(\"gruppiPartecipanti\", listaGruppi);\r\n                                    }else Toasty.warning(getActivity(), \"Questo tuo gruppo Ã¨ giÃ  prenotato all'evento\", Toast.LENGTH_SHORT).show();\r\n                                }\r\n\r\n                                @Override\r\n                                public void onLongClick(View view, int position) {\r\n\r\n                                }\r\n\r\n                            }));\r\n                        } else {\r\n                            tornareIndietro(2);\r\n                            Toast.makeText(getContext().getApplicationContext(), \"I gruppi da te creati eccedono il numero massimo di partecipanti dell'evento\", Toast.LENGTH_LONG).show();\r\n                        }\r\n\r\n\r\n                    }\r\n                }); //toDo onFailure\r\n    }\r\n\r\n    private String getMailUtenteLoggato(){\r\n        Gson gson = new Gson();\r\n        SharedPreferences prefs = getActivity().getApplicationContext().getSharedPreferences(\"Login\", Context.MODE_PRIVATE);\r\n        String json = prefs.getString(\"utente\", \"no\");\r\n        String mailUtenteLoggato;\r\n\r\n        if(!json.equals(\"no\")) {\r\n            utente = gson.fromJson(json, Utente.class);\r\n            mailUtenteLoggato = utente.getMail();\r\n            Log.d(\"mailutenteLoggato\", mailUtenteLoggato);\r\n        } else {\r\n            SharedPreferences prefs1 = getActivity().getApplicationContext().getSharedPreferences(\"LoginTemporaneo\",Context.MODE_PRIVATE);\r\n            mailUtenteLoggato = prefs1.getString(\"mail\", \"no\");\r\n            Log.d(\"mail\", mailUtenteLoggato);\r\n        }\r\n        return mailUtenteLoggato;\r\n    }\r\n\r\n    private static class RecyclerTouchListener implements RecyclerView.OnItemTouchListener {\r\n        private GestureDetector gestureDetector;\r\n        private PartecipazioneGruppoFragment.RecyclerTouchListener.ClickListener clickListener;\r\n\r\n        public RecyclerTouchListener(Context context, final RecyclerView recyclerView, final PartecipazioneGruppoFragment.RecyclerTouchListener.ClickListener clickListener) {\r\n            this.clickListener = clickListener;\r\n            gestureDetector = new GestureDetector(context, new GestureDetector.SimpleOnGestureListener() {\r\n                @Override\r\n                public boolean onSingleTapUp(MotionEvent e) {\r\n                    return true;\r\n                }\r\n\r\n                public void onLongPress(MotionEvent e) {\r\n                    View child = recyclerView.findChildViewUnder(e.getX(), e.getY());\r\n                    if (child != null && clickListener != null) {\r\n                        clickListener.onLongClick(child, recyclerView.getChildAdapterPosition(child));\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        @Override\r\n        public boolean onInterceptTouchEvent(@NonNull RecyclerView rv, @NonNull MotionEvent e) {\r\n            View child = rv.findChildViewUnder(e.getX(), e.getY());\r\n\r\n            if (child != null && clickListener != null && gestureDetector.onTouchEvent(e)) {\r\n                clickListener.onClick(child, rv.getChildAdapterPosition(child));\r\n            }\r\n            return false;\r\n        }\r\n\r\n        @Override\r\n        public void onTouchEvent(@NonNull RecyclerView rv, @NonNull MotionEvent e) {\r\n\r\n        }\r\n\r\n        @Override\r\n        public void onRequestDisallowInterceptTouchEvent(boolean disallowIntercept) {\r\n\r\n        }\r\n\r\n        public interface ClickListener {\r\n            void onClick(View view, int position);\r\n\r\n            void onLongClick(View view, int position);\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/contagiapp/eventi/PartecipazioneGruppoFragment.java	(revision 21bd0f2358c885c4b61cbc32378cedad3ea763a3)
+++ app/src/main/java/com/example/contagiapp/eventi/PartecipazioneGruppoFragment.java	(date 1635611994963)
@@ -229,10 +229,8 @@
                             tornareIndietro(2);
                             Toast.makeText(getContext().getApplicationContext(), "I gruppi da te creati eccedono il numero massimo di partecipanti dell'evento", Toast.LENGTH_LONG).show();
                         }
-
-
                     }
-                }); //toDo onFailure
+                });
     }
 
     private String getMailUtenteLoggato(){
Index: app/src/main/res/layout/fragment_profilo_gruppo_admin.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<ScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_marginBottom=\"60dp\"\r\n    tools:context=\".gruppi.ProfiloGruppoAdminFragment\">\r\n\r\n\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/imgProfiloGruppoAdmin\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:maxHeight=\"250dp\"\r\n            android:adjustViewBounds=\"true\"/>\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvNomeProfiloGruppoAdmin\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:padding=\"20dp\"\r\n            android:text=\"@string/group_name\"\r\n            android:textColor=\"@color/black\"\r\n            android:textSize=\"30dp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvDescrProfiloGruppoAdmin\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:background=\"@color/gray\"\r\n            android:padding=\"20dp\"\r\n            android:text=\"@string/description\"\r\n            android:textColor=\"@color/black\"></TextView>\r\n\r\n        <com.google.android.material.card.MaterialCardView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:clickable=\"true\"\r\n            android:focusable=\"true\"\r\n            app:cardElevation=\"1dp\"\r\n            android:layout_margin=\"20dp\"\r\n            app:cardCornerRadius=\"15dp\"\r\n            android:checkable=\"true\">\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"vertical\"\r\n                android:padding=\"16dp\">\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/statusCircle\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:background=\"@drawable/small_circle\"\r\n                    android:layout_margin=\"20dp\"\r\n                    android:layout_gravity=\"center\"\r\n                    android:orientation=\"horizontal\" />\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:orientation=\"vertical\"\r\n                    android:padding=\"16dp\">\r\n\r\n                    <!-- Title, secondary and supporting text -->\r\n                    <TextView\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:text=\"@string/group_state\"\r\n                        android:textAppearance=\"?attr/textAppearanceHeadline6\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tvStatusDescription\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginTop=\"8dp\"\r\n                        android:text=\"@string/description\"\r\n                        android:textAppearance=\"?attr/textAppearanceBody2\"\r\n                        android:textColor=\"?android:attr/textColorSecondary\" />\r\n\r\n                </LinearLayout>\r\n\r\n            </LinearLayout>\r\n\r\n\r\n        </com.google.android.material.card.MaterialCardView>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <com.google.android.material.button.MaterialButton\r\n                android:id=\"@+id/btnAdminInvitaAmici\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_margin=\"10dp\"\r\n                android:layout_weight=\"1\"\r\n                android:text=\"@string/invite_friends\"\r\n                app:cornerRadius=\"20dp\"\r\n                app:icon=\"@drawable/ic_baseline_add_24\"></com.google.android.material.button.MaterialButton>\r\n\r\n            <com.google.android.material.button.MaterialButton\r\n                android:id=\"@+id/btnModificaGruppo\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_margin=\"10dp\"\r\n                android:layout_weight=\"1\"\r\n                android:text=\"@string/modify_group\"\r\n                app:cornerRadius=\"20dp\"\r\n                app:icon=\"@drawable/ic_pencil_24dp\" />\r\n\r\n\r\n        </LinearLayout>\r\n\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvNumPartecipantiProfiloGruppoAdmin\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:textStyle=\"bold\"\r\n            android:textSize=\"18sp\"\r\n            android:textColor=\"@color/black\"\r\n            android:paddingTop=\"20dp\"\r\n            android:paddingLeft=\"20dp\"/>\r\n\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/rvPartecipantiProfiloGruppoAdmin\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            tools:listitem=\"@layout/item_partecipanti\">\r\n        </androidx.recyclerview.widget.RecyclerView>\r\n\r\n        <com.google.android.material.button.MaterialButton\r\n            android:id=\"@+id/btnEliminaGruppo\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_margin=\"20dp\"\r\n            android:backgroundTint=\"#800000\"\r\n            android:text=\"@string/delete_group\"\r\n            app:cornerRadius=\"20dp\"\r\n            app:icon=\"@drawable/ic_baseline_delete_24\" />\r\n\r\n\r\n    </LinearLayout>\r\n\r\n\r\n\r\n</ScrollView>\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_profilo_gruppo_admin.xml	(revision 21bd0f2358c885c4b61cbc32378cedad3ea763a3)
+++ app/src/main/res/layout/fragment_profilo_gruppo_admin.xml	(date 1635612085262)
@@ -137,9 +137,8 @@
         <androidx.recyclerview.widget.RecyclerView
             android:id="@+id/rvPartecipantiProfiloGruppoAdmin"
             android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            tools:listitem="@layout/item_partecipanti">
-        </androidx.recyclerview.widget.RecyclerView>
+            android:layout_height="wrap_content"
+            tools:listitem="@layout/item_partecipanti"></androidx.recyclerview.widget.RecyclerView>
 
         <com.google.android.material.button.MaterialButton
             android:id="@+id/btnEliminaGruppo"
Index: app/src/main/res/layout/fragment_profilo_gruppo.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<ScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    tools:context=\".gruppi.ProfiloGruppoFragment\"\r\n    android:layout_marginBottom=\"60dp\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/imgProfiloGruppo\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:maxHeight=\"250dp\"\r\n            android:adjustViewBounds=\"true\"/>\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvNomeProfiloGruppo\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:padding=\"20dp\"\r\n            android:text=\"@string/group_name\"\r\n            android:textColor=\"@color/black\"\r\n            android:textSize=\"30dp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvDescrProfiloGruppo\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:background=\"@color/gray\"\r\n            android:padding=\"20dp\"\r\n            android:text=\"@string/description\"\r\n            android:textColor=\"@color/black\"></TextView>\r\n\r\n        <com.google.android.material.card.MaterialCardView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:clickable=\"true\"\r\n            android:focusable=\"true\"\r\n            app:cardElevation=\"1dp\"\r\n            android:layout_margin=\"20dp\"\r\n            app:cardCornerRadius=\"15dp\"\r\n            android:checkable=\"true\">\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"vertical\"\r\n                android:padding=\"16dp\">\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/groupStatusCircle\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:background=\"@drawable/small_circle\"\r\n                    android:layout_margin=\"20dp\"\r\n                    android:layout_gravity=\"center\"\r\n                    android:orientation=\"horizontal\" />\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:orientation=\"vertical\"\r\n                    android:padding=\"16dp\">\r\n\r\n                    <!-- Title, secondary and supporting text -->\r\n                    <TextView\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:text=\"@string/your_state\"\r\n                        android:textAppearance=\"?attr/textAppearanceHeadline6\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tvStatusDescription\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginTop=\"8dp\"\r\n                        android:text=\"@string/description\"\r\n                        android:textAppearance=\"?attr/textAppearanceBody2\"\r\n                        android:textColor=\"?android:attr/textColorSecondary\" />\r\n\r\n                </LinearLayout>\r\n\r\n            </LinearLayout>\r\n\r\n\r\n        </com.google.android.material.card.MaterialCardView>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"horizontal\"\r\n            android:padding=\"20dp\">\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"Admin: \"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"18sp\"\r\n                android:textStyle=\"bold\"/>\r\n\r\n            <TextView\r\n                android:id=\"@+id/tvAdmin\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textSize=\"18sp\"\r\n                android:textColor=\"@color/black\"/>\r\n\r\n        </LinearLayout>\r\n\r\n\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvNumPartecipantiProfiloGruppo\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:textStyle=\"bold\"\r\n            android:textSize=\"18sp\"\r\n            android:textColor=\"@color/black\"\r\n            android:paddingTop=\"20dp\"\r\n            android:paddingLeft=\"20dp\"/>\r\n\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/rvPartecipantiProfiloGruppo\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            tools:listitem=\"@layout/item_partecipanti\"></androidx.recyclerview.widget.RecyclerView>\r\n\r\n        <com.google.android.material.button.MaterialButton\r\n            android:id=\"@+id/btnAbbandonaGruppo\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_margin=\"20dp\"\r\n            android:backgroundTint=\"#800000\"\r\n            android:text=\"@string/exit_group\"\r\n            app:cornerRadius=\"20dp\"></com.google.android.material.button.MaterialButton>\r\n\r\n    </LinearLayout>\r\n\r\n</ScrollView>\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_profilo_gruppo.xml	(revision 21bd0f2358c885c4b61cbc32378cedad3ea763a3)
+++ app/src/main/res/layout/fragment_profilo_gruppo.xml	(date 1635611994945)
@@ -9,15 +9,15 @@
 
     <LinearLayout
         android:layout_width="match_parent"
-        android:layout_height="match_parent"
+        android:layout_height="wrap_content"
         android:orientation="vertical">
 
         <ImageView
             android:id="@+id/imgProfiloGruppo"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
-            android:maxHeight="250dp"
-            android:adjustViewBounds="true"/>
+            android:adjustViewBounds="true"
+            android:maxHeight="250dp" />
 
         <TextView
             android:id="@+id/tvNomeProfiloGruppo"
@@ -26,7 +26,7 @@
             android:padding="20dp"
             android:text="@string/group_name"
             android:textColor="@color/black"
-            android:textSize="30dp"
+            android:textSize="30sp"
             android:textStyle="bold" />
 
         <TextView
@@ -41,12 +41,13 @@
         <com.google.android.material.card.MaterialCardView
             android:layout_width="match_parent"
             android:layout_height="match_parent"
+            android:layout_margin="20dp"
+            android:checkable="true"
             android:clickable="true"
             android:focusable="true"
-            app:cardElevation="1dp"
-            android:layout_margin="20dp"
             app:cardCornerRadius="15dp"
-            android:checkable="true">
+            app:cardElevation="1dp">
+
             <LinearLayout
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
@@ -57,9 +58,9 @@
                     android:id="@+id/groupStatusCircle"
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
-                    android:background="@drawable/small_circle"
+                    android:layout_gravity="center"
                     android:layout_margin="20dp"
-                    android:layout_gravity="center"
+                    android:background="@drawable/small_circle"
                     android:orientation="horizontal" />
 
                 <LinearLayout
@@ -96,40 +97,41 @@
             android:layout_height="wrap_content"
             android:orientation="horizontal"
             android:padding="20dp">
+
             <TextView
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:text="Admin: "
                 android:textColor="@color/black"
                 android:textSize="18sp"
-                android:textStyle="bold"/>
+                android:textStyle="bold" />
 
             <TextView
                 android:id="@+id/tvAdmin"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:textSize="18sp"
-                android:textColor="@color/black"/>
+                android:textColor="@color/black"
+                android:textSize="18sp" />
 
         </LinearLayout>
 
 
-
         <TextView
             android:id="@+id/tvNumPartecipantiProfiloGruppo"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
-            android:textStyle="bold"
-            android:textSize="18sp"
-            android:textColor="@color/black"
+            android:paddingLeft="20dp"
             android:paddingTop="20dp"
-            android:paddingLeft="20dp"/>
+            android:paddingRight="20dp"
+            android:textColor="@color/black"
+            android:textSize="18sp"
+            android:textStyle="bold" />
 
 
         <androidx.recyclerview.widget.RecyclerView
             android:id="@+id/rvPartecipantiProfiloGruppo"
             android:layout_width="match_parent"
-            android:layout_height="match_parent"
+            android:layout_height="wrap_content"
             tools:listitem="@layout/item_partecipanti"></androidx.recyclerview.widget.RecyclerView>
 
         <com.google.android.material.button.MaterialButton
Index: app/src/main/java/com/example/contagiapp/notifiche/NotifyFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.contagiapp.notifiche;\r\n\r\nimport android.content.Context;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentTransaction;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.util.Log;\r\nimport android.view.GestureDetector;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.contagiapp.R;\r\nimport com.example.contagiapp.eventi.EliminazionePartecipazioneEvento;\r\nimport com.example.contagiapp.eventi.Evento;\r\nimport com.example.contagiapp.eventi.ProfiloEventoAdminFragment;\r\nimport com.example.contagiapp.gruppi.Gruppo;\r\nimport com.example.contagiapp.impostazioni.EventiPartecipatoAdapter;\r\nimport com.example.contagiapp.impostazioni.EventsPartecipatoPositivo;\r\nimport com.example.contagiapp.utente.Utente;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.Query;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.reflect.TypeToken;\r\n\r\nimport java.lang.reflect.Type;\r\nimport java.sql.Timestamp;\r\nimport java.text.DateFormat;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n */\r\npublic class NotifyFragment extends Fragment {\r\n\r\n    private FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private ArrayList<String> idList = new ArrayList<String>(); //lista che conterrÃ  gli id cioÃ¨ le mail degli utenti\r\n    String mailUtenteLoggato;\r\n    private RecyclerView rvEventiACuiPartecipo;\r\n    private RecyclerView rvEventiRossi;\r\n    private ArrayList<Evento> listaEventi = new ArrayList<Evento>();\r\n    private Evento ev;\r\n    private Utente utente;\r\n    private final List<Evento> ev1 = new ArrayList<>();\r\n    private boolean contro = false;\r\n    //private List<Evento> eventi = new ArrayList<>();\r\n\r\n    public NotifyFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view;\r\n        view = inflater.inflate(R.layout.fragment_notify, container, false);\r\n        mailUtenteLoggato = getMailUtenteLoggato();\r\n\r\n        RecyclerView rvNoEventiPartecipazione = view.findViewById(R.id.rvNoPartecipazioneEvento);\r\n        rvEventiRossi = view.findViewById(R.id.rvEventiRossi);\r\n        final RecyclerView recyclerViewRichieste =  view.findViewById(R.id.rvRichieste);\r\n        final RecyclerView recyclerViewInviti =  view.findViewById(R.id.rvInviti);\r\n        rvEventiACuiPartecipo = view.findViewById(R.id.rvEventiACuiPartecipo);\r\n\r\n        //Otteniamo la lista della mail degli amici\r\n        db.collection(\"Utenti\")\r\n                .document(mailUtenteLoggato)\r\n                .get()\r\n                .addOnCompleteListener(new OnCompleteListener() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task task) {\r\n                        DocumentSnapshot document = (DocumentSnapshot) task.getResult();\r\n                        ArrayList<String> listaMailRichieste = (ArrayList<String>) document.get(\"richiesteRicevute\");\r\n                        ArrayList<String> listaInviti = (ArrayList<String>) document.get(\"invitiRicevuti\");\r\n\r\n                        Log.d(\"listaMailRichieste\", String.valueOf(listaMailRichieste));\r\n                        Log.d(\"listaInviti\", String.valueOf(listaInviti));\r\n                        getRichieste(listaMailRichieste, recyclerViewRichieste);\r\n                        getInviti(listaInviti, recyclerViewInviti);\r\n\r\n                        utente = document.toObject(Utente.class);\r\n                    }\r\n                });\r\n\r\n        caricaEventi(rvEventiACuiPartecipo);\r\n        caricaEventiRossi(rvEventiRossi);\r\n        caricaEventiNoPartecipazione(rvNoEventiPartecipazione);\r\n\r\n        return view;\r\n    }\r\n\r\n    public void caricaEventiNoPartecipazione(final RecyclerView rvEventiACuiNonPartecipo) {\r\n        final SharedPreferences pref = getActivity().getApplicationContext().getSharedPreferences(\"eventi\", Context.MODE_PRIVATE);\r\n        String json = pref.getString(\"id\", \"no\");\r\n\r\n        if(!json.equals(\"no\")) {\r\n            Gson gson = new Gson();\r\n            final ArrayList<String> eventi;\r\n            eventi = gson.fromJson(json, new TypeToken<ArrayList<String>>() {}.getType());\r\n\r\n            if(eventi.size() != 0) {\r\n                for(int i = 0; i < eventi.size(); i++) {\r\n                    String id = eventi.get(i);\r\n\r\n                    final int finalI = i;\r\n                    db.collection(\"Eventi\")\r\n                            .document(id)\r\n                            .get()\r\n                            .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                                @Override\r\n                                public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                                    try {\r\n                                        ev1.add(documentSnapshot.toObject(Evento.class));\r\n                                        Log.d(\"EVENTI:::\",documentSnapshot.toObject(Evento.class).getIdEvento());\r\n                                    } catch (NullPointerException e) {\r\n                                        eventi.remove(finalI);\r\n\r\n                                        SharedPreferences.Editor editor = pref.edit();\r\n                                        Gson gson1 = new Gson();\r\n                                        String json1 = gson1.toJson(eventi);\r\n                                        editor.putString(\"id\", json1);\r\n                                        editor.commit();\r\n                                    }\r\n\r\n                                    if(ev1.size() == eventi.size()) {\r\n                                        EventoNoPartecipazioneAdapter adapter = new EventoNoPartecipazioneAdapter(ev1, getActivity().getApplicationContext());\r\n\r\n                                        rvEventiACuiNonPartecipo.setAdapter(adapter);\r\n                                        rvEventiACuiNonPartecipo.setLayoutManager(new LinearLayoutManager(getActivity()));\r\n                                    }\r\n                                }\r\n                            });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public void caricaEventiRossi(final RecyclerView rvEventi) {\r\n\r\n        final ArrayList<Evento> eventi = new ArrayList<>();\r\n\r\n        db.collection(\"Eventi\")\r\n                .whereArrayContains(\"partecipanti\", mailUtenteLoggato)\r\n                .whereEqualTo(\"statoRosso\",true)\r\n                .get()\r\n                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                        if(task.isSuccessful()) {\r\n                            for(QueryDocumentSnapshot document : task.getResult()) {\r\n                                ev = document.toObject(Evento.class);\r\n\r\n                                try {\r\n                                    Date dataRosso = new SimpleDateFormat(\"dd/MM/yyyy\").parse(ev.getDataRosso());\r\n                                    Date dataAttuale = new Date(System.currentTimeMillis());\r\n\r\n                                    //864000000 millisecondi = 10 giorni\r\n                                    if(dataAttuale.getTime() - dataRosso.getTime() <= 864000000) {\r\n                                        eventi.add(ev);\r\n                                    }\r\n                                } catch (ParseException e) {\r\n                                    e.printStackTrace();\r\n                                }\r\n                            }\r\n\r\n                            EventoRossoAdapter adapter = new EventoRossoAdapter(getContext(), eventi, mailUtenteLoggato, utente);\r\n\r\n                            rvEventi.setAdapter(adapter);\r\n                            rvEventi.setLayoutManager(new LinearLayoutManager(getActivity()));\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    public void getRichieste(ArrayList<String> listaRichieste, final RecyclerView recyclerView){\r\n        /*\r\n        metodo che svolge le seguenti operazioni:\r\n         1)date in input le mail degli amici ottiene, per ciascuno, i seguenti dati dal database: nome, cognome, mail\r\n         2)crea per ognuno un nuovo tipo Utente che aggiunge ad una lista\r\n         3) passa la lista all'adapter del recycler View che poi permetterÃ  la visualizzazione della lista di CardView degli amici sull'app\r\n         */\r\n\r\n        final ArrayList<Utente> utenti = new ArrayList<Utente>();\r\n        for(int i=0; i < listaRichieste.size(); i++){\r\n            db.collection(\"Utenti\")\r\n                    .document(listaRichieste.get(i))\r\n                    .get()\r\n                    .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                        @Override\r\n                        public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                            Utente user = new Utente();\r\n                            user.setNome(documentSnapshot.getString(\"nome\"));\r\n                            user.setCognome(documentSnapshot.getString(\"cognome\"));\r\n                            user.setMail(documentSnapshot.getString(\"mail\"));\r\n                            user.setDataNascita(documentSnapshot.getString(\"dataNascita\"));\r\n                            user.setCitta(documentSnapshot.getString(\"citta\"));\r\n                            user.setAmici((ArrayList<String>) documentSnapshot.get(\"amici\"));\r\n                            user.setRichiesteRicevute((ArrayList<String>) documentSnapshot.get(\"richiesteRicevute\"));\r\n\r\n                            Log.d(\"amici\", String.valueOf(user.getAmici()));\r\n\r\n\r\n                            utenti.add(user);\r\n                            Log.d(\"richiesteSize\", String.valueOf(utenti.size()));\r\n\r\n                            db.collection(\"Utenti\").document(mailUtenteLoggato)\r\n                                    .get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                                @Override\r\n                                public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                                    DocumentSnapshot document = (DocumentSnapshot) task.getResult();\r\n\r\n                                }\r\n                            });\r\n\r\n                            //\r\n                            //apro il documento dell'utente loggato\r\n                            //nell'adapter vengono aggiornati gli amici al click del bottone Accetta\r\n                            db.collection(\"Utenti\").document(mailUtenteLoggato)\r\n                                    .get()\r\n                                    .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                                        @Override\r\n                                        public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                                            if (documentSnapshot.exists()){\r\n                                                final Utente utenteLoggato = documentSnapshot.toObject(Utente.class);\r\n                                                RichiesteAdapter adapter = new RichiesteAdapter(utenti, mailUtenteLoggato, utenteLoggato);\r\n                                                recyclerView.setAdapter(adapter);\r\n                                                recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));\r\n\r\n                                            }else {\r\n                                                Toast.makeText(getActivity(), \"Documents does not exist\", Toast.LENGTH_SHORT);\r\n                                            }\r\n                                        }\r\n                                    });\r\n\r\n                            //RichiesteAdapter adapter = new RichiesteAdapter(utenti, mailUtenteLoggato, utenteLoggato);\r\n\r\n                            String id = user.getMail();\r\n                            idList.add(id);\r\n\r\n/*\r\n                            recyclerView.addOnItemTouchListener(new NotifyFragment.RecyclerTouchListener(getActivity(), recyclerView, new NotifyFragment.RecyclerTouchListener.ClickListener() {\r\n                                @Override\r\n                                public void onClick(View view, int position) {\r\n                                    String idUtenteSelezionato = idList.get(position);\r\n                                    Log.i(\"idList: \", idUtenteSelezionato);\r\n\r\n                                    Intent profiloIntent = new Intent(getActivity(), ProfiloUtentiActivity.class);\r\n                                    profiloIntent.putExtra(\"id\", idUtenteSelezionato);\r\n                                    startActivity(profiloIntent);\r\n                                }\r\n\r\n                                @Override\r\n                                public void onLongClick(View view, int position) {\r\n\r\n                                }\r\n\r\n                            }));\r\n                            */\r\n\r\n                        }\r\n                    }).addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    Log.d(\"error\", \"errore\");\r\n                }\r\n\r\n\r\n            });\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public void getInviti(final ArrayList<String> listaInviti, final RecyclerView recyclerView){\r\n\r\n\r\n        final ArrayList<Gruppo> gruppi = new ArrayList<Gruppo>();\r\n        for(int i=0; i < listaInviti.size(); i++){\r\n            db.collection(\"Gruppo\")\r\n                    .document(listaInviti.get(i))\r\n                    .get()\r\n                    .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                        @Override\r\n                        public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                            Gruppo gruppo = new Gruppo();\r\n                            gruppo.setNomeGruppo(documentSnapshot.getString(\"nomeGruppo\"));\r\n                            gruppo.setAdmin(documentSnapshot.getString(\"admin\"));\r\n                            gruppo.setDescrizione(documentSnapshot.getString(\"descrizione\"));\r\n                            gruppo.setIdGruppo(documentSnapshot.getString(\"idGruppo\"));\r\n                            //gruppo.setNroPartecipanti((Integer) documentSnapshot.get(\"nroPartecipanti\"));\r\n                            gruppo.setPartecipanti((ArrayList<String>) documentSnapshot.get(\"partecipanti\"));\r\n                            Log.d(\"setPartecipanti\", String.valueOf((ArrayList<String>) documentSnapshot.get(\"partecipanti\")));\r\n\r\n                            Log.d(\"idGruppo\", String.valueOf(documentSnapshot.getString(\"idGruppo\")));\r\n\r\n\r\n                            gruppi.add(gruppo);\r\n                            Log.d(\"gruppi.size()\", String.valueOf(gruppi.size()));\r\n\r\n\r\n\r\n                            db.collection(\"Utenti\").document(mailUtenteLoggato)\r\n                                    .get()\r\n                                    .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                                        @Override\r\n                                        public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                                            if (documentSnapshot.exists()){\r\n                                                final Utente utenteLoggato = documentSnapshot.toObject(Utente.class);\r\n                                                utenteLoggato.setInvitiRicevuti(listaInviti);\r\n                                                InvitiAdapter adapter = new InvitiAdapter(gruppi, mailUtenteLoggato, utenteLoggato);\r\n                                                recyclerView.setAdapter(adapter);\r\n                                                recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));\r\n\r\n                                            }else {\r\n                                                Toast.makeText(getActivity(), \"Documents does not exist\", Toast.LENGTH_SHORT);\r\n                                            }\r\n                                        }\r\n                                    });\r\n\r\n                        }\r\n                    }).addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    Log.d(\"error\", \"errore\");\r\n                }\r\n\r\n\r\n            });\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private String getMailUtenteLoggato(){\r\n        Gson gson = new Gson();\r\n        SharedPreferences prefs = getActivity().getApplicationContext().getSharedPreferences(\"Login\", Context.MODE_PRIVATE);\r\n        String json = prefs.getString(\"utente\", \"no\");\r\n        String mailUtenteLoggato;\r\n        //TODO capire il funzionamento\r\n        if(!json.equals(\"no\")) {\r\n            Utente utente = gson.fromJson(json, Utente.class);\r\n            mailUtenteLoggato = utente.getMail();\r\n            Log.d(\"mailutenteLoggato\", mailUtenteLoggato);\r\n        } else {\r\n            SharedPreferences prefs1 = getActivity().getApplicationContext().getSharedPreferences(\"LoginTemporaneo\",Context.MODE_PRIVATE);\r\n            mailUtenteLoggato = prefs1.getString(\"mail\", \"no\");\r\n            Log.d(\"mail\", mailUtenteLoggato);\r\n        }\r\n        return mailUtenteLoggato;\r\n    }\r\n\r\n    private void caricaEventi(final RecyclerView rvEventi){\r\n\r\n        listaEventi = new ArrayList<Evento>();\r\n\r\n\r\n        db.collection(\"Eventi\")\r\n                //.whereArrayContains(\"partecipanti\", mailUtenteLoggato)\r\n                .orderBy(\"data\", Query.Direction.ASCENDING)\r\n                .get()\r\n                .addOnSuccessListener(new OnSuccessListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onSuccess(QuerySnapshot queryDocumentSnapshots) {\r\n\r\n                        for(DocumentSnapshot documentSnapshot : queryDocumentSnapshots){\r\n                            Evento evento = documentSnapshot.toObject(Evento.class);\r\n\r\n                            try {\r\n                                Date dataEvento = new SimpleDateFormat(\"dd/MM/yyyy\").parse(evento.getData());\r\n                                Date dataAttuale = new Date(System.currentTimeMillis());\r\n\r\n                                if(dataEvento.compareTo(dataAttuale) >= 0\r\n                                        && (evento.getPartecipanti().contains(mailUtenteLoggato) ||\r\n                                        evento.getAdmin().equals(mailUtenteLoggato))) {\r\n\r\n\r\n                                    if(!listaEventi.contains(evento)){\r\n                                        listaEventi.add(evento);\r\n                                    }\r\n\r\n\r\n                                    String id = documentSnapshot.getId();\r\n                                    idList.add(id);\r\n                                }\r\n                            } catch (ParseException e) {\r\n                                e.printStackTrace();\r\n                            }\r\n                        }\r\n\r\n                        EventPartecipanteAdapter adapter = new EventPartecipanteAdapter(listaEventi);\r\n\r\n                        rvEventi.setAdapter(adapter);\r\n                        rvEventi.setLayoutManager(new LinearLayoutManager(getActivity()));\r\n\r\n\r\n                        rvEventi.addOnItemTouchListener(new RecyclerTouchListener(getActivity(), rvEventi, new RecyclerTouchListener.ClickListener() {\r\n                            @Override\r\n                            public void onClick(View view, int position) {\r\n                                Evento evento = listaEventi.get(position);\r\n                                if(evento.getAdmin().equals(mailUtenteLoggato)) {\r\n                                    ProfiloEventoAdminFragment fragment = new ProfiloEventoAdminFragment();\r\n\r\n                                    Bundle bundle = new Bundle();\r\n                                    bundle.putString(\"idEvento\", idList.get(position));\r\n\r\n                                    fragment.setArguments(bundle);\r\n\r\n                                    //richiamo il fragment\r\n\r\n                                    FragmentTransaction fr = getActivity().getSupportFragmentManager().beginTransaction();\r\n                                    fr.replace(R.id.container,fragment);\r\n                                    fr.addToBackStack(null); //serve per tornare al fragment precedente\r\n                                    fr.commit();\r\n                                }\r\n\r\n                                if(evento.getPartecipanti().contains(mailUtenteLoggato)) {\r\n                                    EliminazionePartecipazioneEvento fragment = new EliminazionePartecipazioneEvento();\r\n\r\n                                    Bundle bundle = new Bundle();\r\n                                    bundle.putString(\"idEvento\", idList.get(position));\r\n                                    bundle.putBoolean(\"partenza\", true);\r\n\r\n                                    fragment.setArguments(bundle);\r\n\r\n                                    //richiamo il fragment\r\n\r\n                                    FragmentTransaction fr = getActivity().getSupportFragmentManager().beginTransaction();\r\n                                    fr.replace(R.id.container,fragment);\r\n                                    fr.addToBackStack(null); //serve per tornare al fragment precedente\r\n                                    fr.commit();\r\n                                }\r\n                            }\r\n                            @Override\r\n                            public void onLongClick(View view, int position) {\r\n\r\n                            }\r\n\r\n                        }));\r\n                    }\r\n                }); //toDo onFailure\r\n    }\r\n\r\n\r\n}\r\n\r\n//TODO vedere se la partecipazione all'evento la vede solo chi si Ã¨ iscritto all'evento come gruppo o tutto il gruppo\r\n//per il click\r\nclass RecyclerTouchListener implements RecyclerView.OnItemTouchListener {\r\n    private GestureDetector gestureDetector;\r\n    private RecyclerTouchListener.ClickListener clickListener;\r\n\r\n    public RecyclerTouchListener(Context context, final RecyclerView recyclerView, final RecyclerTouchListener.ClickListener clickListener) {\r\n        this.clickListener = (ClickListener) clickListener;\r\n        gestureDetector = new GestureDetector(context, new GestureDetector.SimpleOnGestureListener() {\r\n            @Override\r\n            public boolean onSingleTapUp(MotionEvent e) {\r\n                return true;\r\n            }\r\n\r\n            public void onLongPress(MotionEvent e) {\r\n                View child = recyclerView.findChildViewUnder(e.getX(), e.getY());\r\n                if (child != null && clickListener != null) {\r\n                    clickListener.onLongClick(child, recyclerView.getChildAdapterPosition(child));\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public boolean onInterceptTouchEvent(@NonNull RecyclerView rv, @NonNull MotionEvent e) {\r\n        View child = rv.findChildViewUnder(e.getX(), e.getY());\r\n\r\n        if (child != null && clickListener != null && gestureDetector.onTouchEvent(e)) {\r\n            clickListener.onClick(child, rv.getChildAdapterPosition(child));\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public void onTouchEvent(@NonNull RecyclerView rv, @NonNull MotionEvent e) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onRequestDisallowInterceptTouchEvent(boolean disallowIntercept) {\r\n\r\n    }\r\n\r\n    public interface ClickListener {\r\n        void onClick(View view, int position);\r\n\r\n        void onLongClick(View view, int position);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/contagiapp/notifiche/NotifyFragment.java	(revision 21bd0f2358c885c4b61cbc32378cedad3ea763a3)
+++ app/src/main/java/com/example/contagiapp/notifiche/NotifyFragment.java	(date 1635610000528)
@@ -359,7 +359,7 @@
         SharedPreferences prefs = getActivity().getApplicationContext().getSharedPreferences("Login", Context.MODE_PRIVATE);
         String json = prefs.getString("utente", "no");
         String mailUtenteLoggato;
-        //TODO capire il funzionamento
+
         if(!json.equals("no")) {
             Utente utente = gson.fromJson(json, Utente.class);
             mailUtenteLoggato = utente.getMail();
@@ -460,13 +460,13 @@
 
                         }));
                     }
-                }); //toDo onFailure
+                });
     }
 
 
 }
 
-//TODO vedere se la partecipazione all'evento la vede solo chi si Ã¨ iscritto all'evento come gruppo o tutto il gruppo
+
 //per il click
 class RecyclerTouchListener implements RecyclerView.OnItemTouchListener {
     private GestureDetector gestureDetector;
Index: app/src/main/java/com/example/contagiapp/utente/ProfiloActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.contagiapp.utente;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.content.FileProvider;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.ListView;\r\n\r\nimport com.example.contagiapp.BuildConfig;\r\nimport com.example.contagiapp.R;\r\nimport com.example.contagiapp.WelcomeActivity;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.gson.Gson;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.Objects;\r\n\r\npublic class ProfiloActivity extends AppCompatActivity {\r\n    static final int REQUEST_IMAGE_CAPTURE = 0;\r\n    private static final String TAG = \"ProfiloActivity\";\r\n    private Button certificato;\r\n    private ListView listViewProfilo;\r\n    private Button logout;\r\n    private Button modifica;\r\n    private FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private Utente utente;\r\n    //private ImageView imgCertificato;\r\n    private ImageView imgViewProfiloUtente;\r\n    String imageFileName;\r\n    String currentPhotoPath;\r\n    private StorageReference storageRef = FirebaseStorage.getInstance().getReference();\r\n    private final static String storageDirectory = \"imgUtenti\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_profilo);\r\n        //imgCertificato= findViewById(R.id.immaginecertificato);\r\n        imgViewProfiloUtente = findViewById(R.id.imgProfilo);\r\n        listViewProfilo = (ListView) findViewById(R.id.list_profilo);\r\n        final ArrayList<String> arrayListProfilo = new ArrayList<>();\r\n\r\n        SharedPreferences prefs = getApplicationContext().getSharedPreferences(\"Login\", MODE_PRIVATE);\r\n        Gson gson = new Gson();\r\n        String json = prefs.getString(\"utente\", \"no\");\r\n\r\n        //TODO verificare il controllo\r\n        if(!json.equals(\"no\")) {\r\n            utente = gson.fromJson(json, Utente.class);\r\n\r\n            riempiListView(arrayListProfilo);\r\n\r\n            caricaImgDaStorage(storageRef, storageDirectory, utente.getMail(), imgViewProfiloUtente);\r\n        } else {\r\n            SharedPreferences prefs1 = getApplicationContext().getSharedPreferences(\"LoginTemporaneo\", MODE_PRIVATE);\r\n            String username = prefs1.getString(\"mail\", \"no\");\r\n            Log.d(\"username\", String.valueOf(username));\r\n\r\n\r\n            db.collection(\"Utenti\")\r\n                    .document(username)\r\n                    .get()\r\n                    .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                        @Override\r\n                        public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n\r\n                            utente = documentSnapshot.toObject(Utente.class);\r\n\r\n                            riempiListView(arrayListProfilo);\r\n                        }\r\n                    }).addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    Log.d(TAG, \"Documento non esiste\");\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n\r\n        //arrayListProfilo.add(\"Propic\"+ utente.getPropic());\r\n\r\n\r\n\r\n        modifica = findViewById(R.id.modifica_dati);\r\n        modifica.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent mod = new Intent(ProfiloActivity.this, ModificaUtenteActivity.class);\r\n                startActivity(mod);\r\n                finish();\r\n            }\r\n        });\r\n\r\n        logout = findViewById(R.id.logout);\r\n        logout.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                SharedPreferences prefs = getApplicationContext ().getSharedPreferences(\"Login\", MODE_PRIVATE);\r\n                SharedPreferences.Editor editor = prefs.edit();\r\n                editor.clear();\r\n                editor.apply();\r\n\r\n                Intent welcome = new Intent(ProfiloActivity.this, WelcomeActivity.class);\r\n                startActivity(welcome);\r\n                finish();\r\n            }\r\n        });\r\n\r\n        /*certificato = (Button) findViewById(R.id.certificato);\r\n        certificato.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                Intent photoIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n               dispatchTakePictureIntent(photoIntent);\r\n            }\r\n        });*/\r\n    }\r\n\r\n\r\n    private void riempiListView(ArrayList<String> arrayListProfilo){\r\n        String stato = null;\r\n        if(utente.getStato().equals(\"rosso\")) stato=\"POSITIVO\";\r\n        if(utente.getStato().equals(\"verde\")) stato=\"NEGATIVO\";\r\n        if(utente.getStato().equals(\"arancione\")) stato=\"contatto con un POSITIVO\";\r\n        if(utente.getStato().equals(\"giallo\")) stato=\"INCERTO\";\r\n\r\n        arrayListProfilo.add(\"Stato: \"+stato);\r\n        arrayListProfilo.add(\"Nome: \"+utente.getNome());\r\n        arrayListProfilo.add(\"Cognome: \"+utente.getCognome());\r\n        arrayListProfilo.add(\"Mail: \"+utente.getMail());\r\n        arrayListProfilo.add(\"Data di Nascita: \"+utente.getDataNascita());\r\n        arrayListProfilo.add(\"Genere: \"+utente.getGenere());\r\n        arrayListProfilo.add(\"Nazione di residenza: \"+utente.getNazione());\r\n        arrayListProfilo.add(\"Regione di residenza: \"+utente.getRegione());\r\n        arrayListProfilo.add(\"Provincia di residenza: \"+utente.getProvince());\r\n        arrayListProfilo.add(\"CittÃ  di residenza: \"+utente.getCitta());\r\n        arrayListProfilo.add(\"Telefono: \"+utente.getTelefono());\r\n\r\n        caricaImgDaStorage(storageRef, storageDirectory, utente.getMail(), imgViewProfiloUtente);\r\n        Log.d(\"arrayListProfilo\", String.valueOf(arrayListProfilo));\r\n        ArrayAdapter arrayAdapter = new ArrayAdapter(ProfiloActivity.this, R.layout.support_simple_spinner_dropdown_item, arrayListProfilo);\r\n        listViewProfilo.setAdapter(arrayAdapter);\r\n    }\r\n\r\n    private void caricaImgDaStorage(StorageReference storageRef, String directory, String idImmagine, final ImageView imageView){\r\n        storageRef.child(directory + \"/\" + idImmagine).getDownloadUrl().addOnSuccessListener( new OnSuccessListener<Uri>() {\r\n            @Override\r\n            public void onSuccess(Uri uri) {\r\n                String sUrl = uri.toString(); //otteniamo il token del'immagine\r\n                Log.d(\"sUrl\", sUrl);\r\n                Picasso.get().load(sUrl).into(imageView);\r\n            }\r\n        }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception e) {\r\n                Log.d(\"OnFailure Exception\", String.valueOf(e));\r\n            }\r\n        });\r\n    }\r\n\r\n   /* private void dispatchTakePictureIntent(@NotNull Intent takePictureIntent) {\r\n            // Create the File where the photo should go\r\n            File photoFile = null;\r\n            try {\r\n                photoFile = createImageFile();\r\n            } catch (IOException ex) {\r\n                ex.printStackTrace();\r\n            }\r\n            // Continue only if the File was successfully created\r\n            if (photoFile != null) {\r\n                Uri photoURI = FileProvider.getUriForFile(Objects.requireNonNull(getApplicationContext()),\r\n                        BuildConfig.APPLICATION_ID + \".provider\", photoFile);\r\n                takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, photoURI);\r\n                startActivityForResult(takePictureIntent, REQUEST_IMAGE_CAPTURE);\r\n            }\r\n        }*/\r\n\r\n    /*@Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if(resultCode== RESULT_OK ){\r\n            Bitmap bitmap= BitmapFactory.decodeFile(currentPhotoPath);\r\n            imgCertificato.setImageBitmap(bitmap);\r\n            imgCertificato.setRotation(90);\r\n        }\r\n    }\r\n\r\n    @NotNull\r\n    private File createImageFile() throws IOException {\r\n        // Create an image file name\r\n        String timeStamp = new SimpleDateFormat(\"yyyyMMdd_HHmmss\").format(new Date());\r\n        imageFileName = \"JPEG_\" + timeStamp + \"_\";\r\n        File storageDir = getExternalFilesDir(Environment.DIRECTORY_PICTURES);\r\n        File image = File.createTempFile(\r\n                imageFileName,\r\n                \".jpg\",\r\n                storageDir\r\n        );\r\n\r\n        // Save a file: path for use with ACTION_VIEW intents\r\n        currentPhotoPath = image.getAbsolutePath();\r\n        return image;\r\n    }*/\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/contagiapp/utente/ProfiloActivity.java	(revision 21bd0f2358c885c4b61cbc32378cedad3ea763a3)
+++ app/src/main/java/com/example/contagiapp/utente/ProfiloActivity.java	(date 1635609718690)
@@ -74,7 +74,7 @@
         Gson gson = new Gson();
         String json = prefs.getString("utente", "no");
 
-        //TODO verificare il controllo
+
         if(!json.equals("no")) {
             utente = gson.fromJson(json, Utente.class);
 
@@ -93,9 +93,7 @@
                     .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {
                         @Override
                         public void onSuccess(DocumentSnapshot documentSnapshot) {
-
                             utente = documentSnapshot.toObject(Utente.class);
-
                             riempiListView(arrayListProfilo);
                         }
                     }).addOnFailureListener(new OnFailureListener() {
