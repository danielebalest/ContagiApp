Index: app/src/main/java/com/example/contagiapp/eventi/NewEventsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.contagiapp.eventi;\r\n\r\nimport android.app.DatePickerDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.app.TimePickerDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.PersistableBundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextClock;\r\nimport android.widget.TextView;\r\nimport android.widget.TimePicker;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.contagiapp.R;\r\nimport com.example.contagiapp.utente.Utente;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.MapView;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.tasks.OnCanceledListener;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\n\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\nimport com.google.gson.Gson;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\n\r\npublic class NewEventsActivity extends AppCompatActivity implements OnMapReadyCallback {\r\n\r\n    MapView mapView;\r\n    EditText editTextLuogo;\r\n\r\n    StorageReference storageRef = FirebaseStorage.getInstance().getReference();\r\n    private static final String TAG = \"NewEventsFragment\";\r\n\r\n    private Button creaEvento;\r\n    private TextView dataEvento;\r\n    private TextClock orarioEvento;\r\n    private DatePickerDialog.OnDateSetListener dataDellEvento;\r\n    private TimePickerDialog.OnTimeSetListener orarioDellEvento;\r\n\r\n    public static final int PICK_IMAGE = 1;\r\n    private Uri imageUri;\r\n\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private CollectionReference eventiCollection = db.collection(\"Eventi\");\r\n    String documentId = null;\r\n    private int anno = 0, mese = 0, giorno = 0, ora=0, minuti=0, oraapp=0, minapp=0;\r\n\r\n    @Override\r\n    protected void onCreate(final Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.fragment_new_events);\r\n\r\n        editTextLuogo = findViewById(R.id.editTextIndirizzo);\r\n\r\n\r\n        mapView = findViewById(R.id.map_view);\r\n        mapView.onCreate(savedInstanceState);\r\n        mapView.getMapAsync(this);\r\n\r\n\r\n        // collegamento button registrati con la mainActivity\r\n        creaEvento = (Button) findViewById(R.id.buttonCreaEvento);\r\n\r\n        creaEvento.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                //openMainActivity();\r\n                addEventToDb();\r\n            }\r\n        });\r\n\r\n        //Date Picker\r\n        orarioEvento=(TextClock) findViewById(R.id.orarioEvento);\r\n        orarioEvento.setOnClickListener(new View.OnClickListener() {\r\n\r\n            @Override\r\n            public void onClick(View v) {\r\n                Calendar cal = Calendar.getInstance();\r\n                int hour = cal.get(Calendar.HOUR);\r\n                int minute = cal.get(Calendar.MINUTE);\r\n                TimePickerDialog dialog;\r\n                dialog = new TimePickerDialog(NewEventsActivity.this, android.R.style.Theme_Material_InputMethod, orarioDellEvento,hour,minute,true);\r\n                dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.LTGRAY));\r\n                dialog.show();\r\n            }\r\n        });\r\n\r\n        dataEvento = (TextView) findViewById(R.id.dataEvento);\r\n        dataEvento.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Calendar cal = Calendar.getInstance();\r\n                int year = cal.get(Calendar.YEAR);\r\n                int month = cal.get(Calendar.MONTH);\r\n                int day = cal.get(Calendar.DAY_OF_MONTH);\r\n\r\n                DatePickerDialog dialog = new DatePickerDialog(\r\n                        NewEventsActivity.this,\r\n                        android.R.style.Theme_Material_InputMethod,\r\n                        dataDellEvento,\r\n                        year, month, day);\r\n                dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.LTGRAY));\r\n                dialog.show();\r\n            }\r\n        });\r\n\r\n\r\n\r\n        dataDellEvento = new DatePickerDialog.OnDateSetListener() {\r\n            @Override\r\n            public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\r\n                month++;\r\n                String date = null;\r\n                Log.d(TAG, \"onDateSet: date: \" + dayOfMonth + \"/\" + month + \"/\" + year);\r\n                if(month<=9) {\r\n                    date = dayOfMonth + \"/0\" + month + \"/\" + year;\r\n                }else\r\n                    date = dayOfMonth + \"/\" + month + \"/\" + year;\r\n\r\n                dataEvento.setText(date);\r\n            }\r\n        };\r\n        //orario visualizzato come cristo comanda\r\n\r\n        orarioDellEvento = new TimePickerDialog.OnTimeSetListener() {\r\n            @Override\r\n            public void onTimeSet(TimePicker view, int hour, int minute) {\r\n                boolean condorario= false;\r\n                boolean condminuto= false;\r\n\r\n                if(hour<=9){\r\n                    condorario=true;\r\n                }\r\n                if(minute<=9){\r\n                    condminuto=true;\r\n                }\r\n\r\n                String time=null;\r\n                Log.d(TAG,\"onTimeSet: time: \" +hour + \":\" + minute);\r\n                if(condorario && condminuto){\r\n                    time= \"0\" + hour + \":0\" + minute;\r\n                }else if (condorario){\r\n                    time= \"0\"+ hour + \":\" + minute;\r\n                }else if(condminuto){\r\n                    time= + hour + \":0\" + minute;\r\n                }else time= + hour + \":\" + minute;\r\n\r\n                orarioEvento.setText(time);\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    private void addEventToDb(){\r\n\r\n\r\n        EditText nome = findViewById(R.id.editTextNomeEvento);\r\n        EditText descrizione = findViewById(R.id.editTextDescrEvento);\r\n        EditText numeroMaxP = findViewById(R.id.editTextNumMaxPartecipanti);\r\n        TextView data = findViewById(R.id.dataEvento);\r\n        TextClock orario= findViewById(R.id.orarioEvento);\r\n        EditText citta = findViewById(R.id.editTextCitta);\r\n        EditText indirizzo = findViewById(R.id.editTextIndirizzo);\r\n\r\n        final Evento evento = new Evento();\r\n        evento.setAdmin(getMailUtenteLoggato());\r\n        evento.setNome(nome.getText().toString());\r\n        evento.setDescrizione(descrizione.getText().toString());\r\n        evento.setNumeroMaxPartecipanti(Integer.parseInt(numeroMaxP.getText().toString()));\r\n        evento.setData(data.getText().toString()); //da vedere controllo\r\n        evento.setOrario(orario.getText().toString());\r\n        evento.setCitta(citta.getText().toString());\r\n        evento.setIndirizzo(indirizzo.getText().toString());\r\n\r\n        ArrayList<String> partecipanti = new ArrayList<String>(); //inizializzo un array vuoto\r\n        evento.setPartecipanti(partecipanti);\r\n\r\n\r\n        Log.d(\"getIndirizzo\", String.valueOf(evento.getIndirizzo()));\r\n        Log.d(\"getData\", String.valueOf(evento.getData()));\r\n        Log.d(\"getOrario\", String.valueOf(evento.getOrario()));\r\n\r\n\r\n        if(dataOraValide(evento, evento.getData(), evento.getOrario())){\r\n            db.collection(\"Eventi\").add(evento)\r\n            .addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\r\n                @Override\r\n                public void onSuccess(DocumentReference documentReference) {\r\n                    Log.d(TAG, \"DocumentSnapshot written with ID: \" + documentReference.getId());\r\n                    documentId = documentReference.getId();\r\n                    evento.setIdEvento(documentId);\r\n                    db.collection(\"Eventi\").document(documentId).update(\"idEvento\", documentId);\r\n                    uploadImage();\r\n                }\r\n            })\r\n            .addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    Log.w(TAG, \"Error adding document\", e);\r\n                }\r\n            });\r\n\r\n            Toast.makeText(this, \"Evento aggiunto\", Toast.LENGTH_SHORT).show();\r\n\r\n            finish();\r\n        }else {\r\n            finish();\r\n            startActivity(getIntent());\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    private void openMainActivity() {\r\n        Map<String, Object> evento = new HashMap<>();\r\n\r\n        TextView nome = (TextView) findViewById(R.id.editTextNomeEvento);\r\n        evento.put(\"nome\", nome.getText().toString());\r\n\r\n        TextView numeroP = (TextView) findViewById(R.id.editTextNumMaxPartecipanti);\r\n        evento.put(\"num_partecipanti\", numeroP.getText().toString());\r\n\r\n        TextView data = (TextView) findViewById(R.id.dataEvento);\r\n        String appoggio= data.getText().toString();\r\n\r\n        TextClock orario= (TextClock) findViewById(R.id.orarioEvento);\r\n        String appoggio1=orario.getText().toString();\r\n\r\n        TextView descrizione = (TextView) findViewById(R.id.editTextDescrEvento);\r\n        evento.put(\"descrizione\", descrizione.getText().toString());\r\n\r\n        Spinner nazione = (Spinner) findViewById(R.id.spinnerNazioni);\r\n        evento.put(\"nazione\", nazione.getSelectedItem().toString());\r\n\r\n        TextView citta = (TextView) findViewById(R.id.editTextCitta);\r\n        evento.put(\"citta\", citta.getText().toString());\r\n\r\n        TextView luogo = (TextView) findViewById(R.id.editTextCitta);\r\n\r\n        controllodata(evento,appoggio,appoggio1);\r\n\r\n        //Tornare indietro\r\n        this.finish();\r\n    }\r\n\r\n    void controllodata(Map<String, Object> evento, String appoggio, String appoggio1){\r\n        Calendar cal = Calendar.getInstance();\r\n        boolean condevento=false;\r\n        boolean condorario2= true;\r\n        int l = appoggio.length();\r\n        int l1= appoggio1.length();\r\n        System.out.println(\"la lunghezza è stocazzooooo \"+ l1);\r\n        System.out.println(\"l'orario scelto è \"+ appoggio1);\r\n        switch (l) {\r\n            case 9:\r\n                anno = Integer.valueOf(appoggio.substring(l - 4, l));\r\n                mese = Integer.valueOf(appoggio.substring(l - 7, l - 5));\r\n                giorno = Integer.valueOf(appoggio.charAt(0)) - 48;\r\n                break;\r\n            case 10:\r\n                anno = Integer.valueOf(appoggio.substring(l - 4, l));\r\n                mese = Integer.valueOf(appoggio.substring(l - 7, l - 5));\r\n                giorno = Integer.valueOf(appoggio.substring(l - 10, l - 8));\r\n                break;\r\n        }\r\n        minapp = Integer.valueOf(appoggio1.substring(3,5));\r\n        oraapp = Integer.valueOf(appoggio1.substring(0,2));\r\n\r\n        System.out.println(\"orario scelto \"+ oraapp);\r\n        System.out.println(\"minuti scelti \"+ minapp);\r\n        if (anno >= cal.get(Calendar.YEAR)) {\r\n            if ((mese-1) >= cal.get(Calendar.MONTH)) {\r\n                if (giorno >= cal.get(Calendar.DAY_OF_MONTH))\r\n                    if(oraapp>= (cal.get(Calendar.HOUR_OF_DAY)+1)) {\r\n                        evento.put(\"data\", appoggio);\r\n                        evento.put(\"orario evento\", appoggio1);\r\n                        condorario2=false;\r\n                    }\r\n            }else condevento= true;\r\n        }else condevento= true;\r\n\r\n        if(condevento){\r\n            Toast.makeText(this, \"data non valida\",Toast.LENGTH_SHORT).show();\r\n            finish();\r\n            startActivity(getIntent());\r\n        }else if(condorario2) {\r\n            Toast.makeText(this, \"orario non valido\",Toast.LENGTH_SHORT).show();\r\n            finish();\r\n            startActivity(getIntent());\r\n        }else{\r\n            db.collection(\"Eventi\").add(evento);\r\n            Toast.makeText(this, \"Evento aggiunto\", Toast.LENGTH_SHORT).show();\r\n            finish();\r\n            //provaaaaaaaa\r\n        }\r\n    }\r\n\r\n    private Boolean dataOraValide(Evento evento, String data, String orario){\r\n        Boolean validita;\r\n        Calendar cal = Calendar.getInstance();\r\n        boolean condevento=false;\r\n        boolean condorario2= true;\r\n        int l = data.length();\r\n        int l1= orario.length();\r\n        System.out.println(\"la lunghezza è stocazzooooo \"+ l1);\r\n        System.out.println(\"l'orario scelto è \"+ orario);\r\n        switch (l) {\r\n            case 9:\r\n                anno = Integer.valueOf(data.substring(l - 4, l));\r\n                mese = Integer.valueOf(data.substring(l - 7, l - 5));\r\n                giorno = Integer.valueOf(data.charAt(0)) - 48;\r\n                break;\r\n            case 10:\r\n                anno = Integer.valueOf(data.substring(l - 4, l));\r\n                mese = Integer.valueOf(data.substring(l - 7, l - 5));\r\n                giorno = Integer.valueOf(data.substring(l - 10, l - 8));\r\n                break;\r\n        }\r\n        minapp = Integer.valueOf(orario.substring(3,5));\r\n        oraapp = Integer.valueOf(orario.substring(0,2));\r\n\r\n        System.out.println(\"orario scelto \"+ oraapp);\r\n        System.out.println(\"minuti scelti \"+ minapp);\r\n        if (anno >= cal.get(Calendar.YEAR)) {\r\n            if ((mese-1) >= cal.get(Calendar.MONTH)) {\r\n                if (giorno >= cal.get(Calendar.DAY_OF_MONTH))\r\n                    if(oraapp>= (cal.get(Calendar.HOUR_OF_DAY)+1)) {\r\n                        evento.setData(data);\r\n                        evento.setOrario(orario);\r\n                        condorario2=false;\r\n                    }\r\n            }else condevento= true;\r\n        }else condevento= true;\r\n\r\n        if(condevento){\r\n            Toast.makeText(this, \"data non valida\",Toast.LENGTH_SHORT).show();\r\n            validita = false;\r\n        }else if(condorario2) {\r\n            Toast.makeText(this, \"orario non valido\",Toast.LENGTH_SHORT).show();\r\n            validita = false;\r\n        }else{\r\n            validita = true;\r\n            //provaaaaaaaa\r\n        }\r\n        return validita;\r\n    }\r\n\r\n    private String getMailUtenteLoggato(){\r\n        Gson gson = new Gson();\r\n        SharedPreferences prefs = getApplicationContext().getSharedPreferences(\"Login\", Context.MODE_PRIVATE);\r\n        String json = prefs.getString(\"utente\", \"no\");\r\n        String mailUtenteLoggato;\r\n        //TODO capire il funzionamento\r\n        if(!json.equals(\"no\")) {\r\n            Utente utente = gson.fromJson(json, Utente.class);\r\n            mailUtenteLoggato = utente.getMail();\r\n            Log.d(\"mailutenteLoggato\", mailUtenteLoggato);\r\n        } else {\r\n            SharedPreferences prefs1 = getApplicationContext().getSharedPreferences(\"LoginTemporaneo\",Context.MODE_PRIVATE);\r\n            mailUtenteLoggato = prefs1.getString(\"mail\", \"no\");\r\n            Log.d(\"mail\", mailUtenteLoggato);\r\n        }\r\n        return mailUtenteLoggato;\r\n    }\r\n\r\n    @Override\r\n    public void onMapReady(GoogleMap googleMap) {\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        mapView.onStart();\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n    }\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        mapView.onDestroy();\r\n    }\r\n\r\n    @Override\r\n    public void onSaveInstanceState(@NonNull Bundle outState, @NonNull PersistableBundle outPersistentState) {\r\n        super.onSaveInstanceState(outState, outPersistentState);\r\n        mapView.onSaveInstanceState(outState);\r\n    }\r\n\r\n    @Override\r\n    public void onLowMemory() {\r\n        super.onLowMemory();\r\n        mapView.onLowMemory();\r\n    }\r\n\r\n\r\n    public void addImgEvent(View view) {\r\n        openImage();\r\n    }\r\n\r\n\r\n    private void openImage(){\r\n        Intent intent = new Intent();\r\n        intent.setType(\"image/*\");\r\n        intent.setAction(Intent.ACTION_GET_CONTENT);\r\n        startActivityForResult(Intent.createChooser(intent, \"Select Picture\"), PICK_IMAGE);\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        if(requestCode == PICK_IMAGE && resultCode == RESULT_OK){\r\n            imageUri = data.getData();\r\n            ImageView imageView= findViewById(R.id.immagineEvento);\r\n            Picasso.get().load(imageUri).into(imageView); //mette l'immagine nell'ImageView di questa activity\r\n        }\r\n\r\n    }\r\n\r\n    private  void uploadImage(){\r\n        final ProgressDialog pd = new ProgressDialog(this);\r\n        pd.setMessage(\"Caricamento\");\r\n        pd.show();\r\n\r\n        Log.d(\"imageUri\", String.valueOf(imageUri));\r\n        Log.d(\"documentID\", String.valueOf(documentId));\r\n\r\n        if((imageUri != null) && (documentId != null)){\r\n            final StorageReference fileRef = FirebaseStorage.getInstance().getReference().child(\"eventi\").child(documentId);\r\n\r\n            fileRef.putFile(imageUri).addOnCompleteListener(new OnCompleteListener<UploadTask.TaskSnapshot>() {\r\n                @Override\r\n                public void onComplete(@NonNull Task<UploadTask.TaskSnapshot> task) {\r\n                    fileRef.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                        @Override\r\n                        public void onSuccess(Uri uri) {\r\n                            String url = uri.toString();\r\n\r\n                            Log.d(\"downloadUrl\", url);\r\n                            //pd.dismiss();\r\n                            Toast.makeText(NewEventsActivity.this, \"immagine caricata\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }).addOnCanceledListener(new OnCanceledListener() {\r\n                        @Override\r\n                        public void onCanceled() {\r\n                            Toast.makeText(NewEventsActivity.this, \"immagine non caricata\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/contagiapp/eventi/NewEventsActivity.java	(revision 61a7cf7711741ae64f6592914e3e2917cfdd4a08)
+++ app/src/main/java/com/example/contagiapp/eventi/NewEventsActivity.java	(date 1620665908954)
@@ -327,10 +327,10 @@
     }
 
     private Boolean dataOraValide(Evento evento, String data, String orario){
-        Boolean validita;
+        Boolean validita= false;
         Calendar cal = Calendar.getInstance();
-        boolean condevento=false;
-        boolean condorario2= true;
+        boolean condevento2=false;
+        boolean condorario3= true;
         int l = data.length();
         int l1= orario.length();
         System.out.println("la lunghezza è stocazzooooo "+ l1);
@@ -350,28 +350,35 @@
         minapp = Integer.valueOf(orario.substring(3,5));
         oraapp = Integer.valueOf(orario.substring(0,2));
 
+        System.out.println("l'anno in cui viviamo è "+cal.get(Calendar.YEAR) + (anno >= cal.get(Calendar.YEAR)));
+        System.out.println("il mese in cui viviamo è "+cal.get(Calendar.MONTH+1)+ ((mese) >= cal.get(Calendar.MONTH)));
+        System.out.println("il giorno in cui viviamo è "+cal.get(Calendar.DAY_OF_MONTH)+ (giorno >= cal.get(Calendar.DAY_OF_MONTH)));
+        System.out.println(" condizione orario"+(oraapp>= (cal.get(Calendar.HOUR_OF_DAY))));
+
+        System.out.println("orario secondo sto cristo di server " +(cal.get(Calendar.HOUR_OF_DAY)));
         System.out.println("orario scelto "+ oraapp);
         System.out.println("minuti scelti "+ minapp);
         if (anno >= cal.get(Calendar.YEAR)) {
-            if ((mese-1) >= cal.get(Calendar.MONTH)) {
-                if (giorno >= cal.get(Calendar.DAY_OF_MONTH))
-                    if(oraapp>= (cal.get(Calendar.HOUR_OF_DAY)+1)) {
+            if ((mese) >= cal.get(Calendar.MONTH)) {
+                if (giorno >= cal.get(Calendar.DAY_OF_MONTH)){
+                    if(oraapp>= (cal.get(Calendar.HOUR_OF_DAY))) {
+                        System.out.println("arrivo qui");
                         evento.setData(data);
                         evento.setOrario(orario);
-                        condorario2=false;
+                        condorario3=false;
                     }
-            }else condevento= true;
-        }else condevento= true;
+                }
+            }else condevento2= true;
+        }else condevento2= true;
 
-        if(condevento){
+        if(condevento2){
             Toast.makeText(this, "data non valida",Toast.LENGTH_SHORT).show();
             validita = false;
-        }else if(condorario2) {
+        }else if(condorario3) {
             Toast.makeText(this, "orario non valido",Toast.LENGTH_SHORT).show();
             validita = false;
         }else{
             validita = true;
-            //provaaaaaaaa
         }
         return validita;
     }
Index: .idea/runConfigurations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"RunConfigurationProducerService\">\r\n    <option name=\"ignoredProducers\">\r\n      <set>\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer\" />\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer\" />\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/runConfigurations.xml	(revision 61a7cf7711741ae64f6592914e3e2917cfdd4a08)
+++ .idea/runConfigurations.xml	(date 1620664757732)
@@ -3,6 +3,7 @@
   <component name="RunConfigurationProducerService">
     <option name="ignoredProducers">
       <set>
+        <option value="com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectPlainTextFileTypeManager\">\r\n    <file url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_friend_profile.xml\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 61a7cf7711741ae64f6592914e3e2917cfdd4a08)
+++ .idea/misc.xml	(date 1620664757740)
@@ -1,9 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectPlainTextFileTypeManager">
-    <file url="file://$PROJECT_DIR$/app/src/main/res/layout/fragment_friend_profile.xml" />
-  </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <bytecodeTargetLevel target=\"1.8\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(revision 61a7cf7711741ae64f6592914e3e2917cfdd4a08)
+++ .idea/compiler.xml	(date 1620664757747)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="CompilerConfiguration">
-    <bytecodeTargetLevel target="1.8" />
+    <bytecodeTargetLevel target="11" />
   </component>
 </project>
\ No newline at end of file
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_29_01_2021_17_16__Default_Changelist_1.xml .idea/shelf/Uncommitted_changes_before_Update_at_29_01_2021_17_16__Default_Changelist_1.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_29_01_2021_17_16__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_29_01_2021_17_16__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_14_01_2021_20_23__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_14_01_2021_20_23__Default_Changelist_.xml
