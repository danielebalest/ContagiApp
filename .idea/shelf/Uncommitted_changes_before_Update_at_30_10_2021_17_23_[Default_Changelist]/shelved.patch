Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">ContagiApp</string>\r\n    <string name=\"home\">Home</string>\r\n\r\n\r\n    <!--Campi di registrazione-->\r\n    <string name=\"birth\">Data di nascita</string>\r\n\r\n    <!-- TODO: Remove or change this placeholder text -->\r\n    <string name=\"login\">Accedi</string>\r\n    <string name=\"signUp\">Registrati</string>\r\n    <string name=\"prompt_email\">Email</string>\r\n    <string name=\"prompt_password\">Password</string>\r\n    <string name=\"repeat_password\">Ripeti Password</string>\r\n    <string name=\"action_sign_in_short\">Sign in</string>\r\n    <string name=\"welcome\">\"Benvenuto !\"</string>\r\n    <string name=\"invalid_username\">Not a valid username</string>\r\n    <string name=\"invalid_password\">Password deve contenere più di 5 caratteri</string>\r\n    <string name=\"login_failed\">\"Accesso fallito\"</string>\r\n    <string name=\"phone\">Cellulare</string>\r\n    <string name=\"search\">Cerca</string>\r\n    <string name=\"invite\">Invita</string>\r\n    <string name=\"participants\">Partecipanti</string>\r\n    <string name=\"available\">disponibili</string>\r\n\r\n    <string name=\"remember_me\">Ricordami</string>\r\n    <string name=\"createAccount\">Crea account</string>\r\n\r\n    //Nomi AppBar\r\n    <string name=\"settings\">Impostazioni</string>\r\n\r\n    //bottoni in impostazioni\r\n    <string name=\"SegnalaPositività\">Segnala positività</string>\r\n    <string name=\"SegnalaNegatività\">Segnala negatività</string>\r\n    <string name=\"DarkTheme\">Tema scuro</string>\r\n    <string name=\"Notifiche\">Notifiche</string>\r\n    <string name=\"InformativaPrivacy\">Informativa e privacy</string>\r\n\r\n\r\n\r\n    <string-array name=\"nazioni\">\r\n        <item>Italia</item>\r\n        <item>Francia</item>\r\n        <item>Spagna</item>\r\n        <item>Germania</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"regioniItaliane\">\r\n        <item>Puglia</item>\r\n        <item>Basilicata</item>\r\n        <item>Campania</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"ProvincePuglia\">\r\n        <item>BA</item>\r\n        <item>BAT</item>\r\n        <item>FG</item>\r\n        <item>LE</item>\r\n        <item>BR</item>\r\n        <item>TA</item>\r\n    </string-array>\r\n\r\n\r\n    //ERRORI\r\n\r\n    <string-array name=\"Citta\">\r\n        <item>Bari</item>\r\n        <item>Molfetta</item>\r\n    </string-array>\r\n    <!-- TODO: Remove or change this placeholder text -->\r\n\r\n\r\n    <string name=\"rimuovi_partecipante\">Rimuovi partecipante</string>\r\n\r\n\r\n\r\n\r\n    //Descrizione stati\r\n    <string name=\"DescrStatoGiallo\">Lo stato giallo indica che non c\\'è stato alcun contatto con persone positive</string>\r\n    <string name=\"DescrStatoVerde\">Lo stato verde indica che l\\'utente è negativo al tampone effettuato</string>\r\n    <string name=\"DescrStatoArancione\">Lo stato arancione indica che si sono verificati contatti con persone positive</string>\r\n    <string name=\"DescrStatoRosso\">Lo stato rosso indica si è positivi al COVID-19</string>\r\n\r\n\r\n    //HomeFragment\r\n    <string name=\"your_state\">Il tuo stato</string>\r\n    <string name=\"where_do_you_want_to_go\">Dove vuoi andare?</string>\r\n    <string name=\"search_for_available_events\">Cerca gli eventi disponibili oppure creane uno</string>\r\n    <string name=\"search_event\">Cerca evento</string>\r\n    <string name=\"create_event\">Crea evento</string>\r\n\r\n    //GroupFragment\r\n    <string name=\"your_groups\">I tuoi gruppi</string>\r\n\r\n    //addFriends\r\n    <string name=\"select_user\">Seleziona utente</string>\r\n\r\n    //addImgGruppo\r\n    <string name=\"add_cover_img\">Aggiungi un\\'immagine di copertina</string>\r\n    <string name=\"cover_img\">immagine di copertina</string>\r\n    <string name=\"descr_add_cover_img\">Dai un\\'idea alle persone di cosa tratta il tuo gruppo con una foto.</string>\r\n    <string name=\"upload_cover_img\">Carica immagine di copertina</string>\r\n    <string name=\"next\">Avanti</string>\r\n\r\n    //activity_crea_gruppo\r\n    <string name=\"group_name\">nome del gruppo</string>\r\n    <string name=\"description\">descrizione</string>\r\n\r\n    //activity_eventi_partecipato_positivo\r\n    <string name=\"end\">fine</string>\r\n\r\n    //activity_invita_amici_gruppo\r\n    <string name=\"invite_friend_to_group\">invita i tuoi amici al gruppo</string>\r\n    <string name=\"stop\">termina</string>\r\n\r\n    //activity_modifica_dati_utente\r\n    <string name=\"modify_data\">modifica dati</string>\r\n    <string name=\"name\">nome</string>\r\n    <string name=\"surname\">cognome</string>\r\n    <string name=\"gender\">genere</string>\r\n    <string name=\"residency\">residenza</string>\r\n    <string name=\"region\">regione</string>\r\n    <string name=\"province\">provincia</string>\r\n    <string name=\"city\">città</string>\r\n    <string name=\"save\">salva modifiche</string>\r\n\r\n    //activity_profilo_utenti\r\n    <string name=\"add_to_friends\">aggiungi agli amici</string>\r\n    <string name=\"birth2dots\">Data di nascita:</string>\r\n    <string name=\"age2dots\">Età:</string>\r\n    <string name=\"gender2dots\">genere</string>\r\n    <string name=\"residency2dots\">Residenza:</string>\r\n\r\n    //activity_registration\r\n    <string name=\"take_profile_picture\">scatta foto profilo</string>\r\n    <string name=\"upload_profile_picture\">carica foto profilo</string>\r\n\r\n    //activity_segnala_negatività\r\n    <string name=\"date_of_negativity\">data negatività</string>\r\n    <string name=\"upload_image\">carica immagine</string>\r\n    <string name=\"upload_pdf\">carica pdf</string>\r\n    <string name=\"report\">completa la segnalazione</string>\r\n\r\n    //activity_segnala_positività\r\n    <string name=\"date_of_positivity\">data positività</string>\r\n\r\n\r\n    //fragment_events\r\n    <string name=\"participating\">Eventi a cui sono iscritto</string>\r\n    <string name=\"created_by_me\">Eventi creati da me</string>\r\n\r\n    //fragment_friends\r\n    <string name=\"your_friends\">i tuoi amici</string>\r\n\r\n    //fragment_new_events\r\n    <string name=\"event_name\">Nome dell\\'evento</string>\r\n    <string name=\"maximum_number_of_participants\">Numero massimo di partecipanti</string>\r\n    <string name=\"event_date2dots\">Data evento:</string>\r\n    <string name=\"event_date\">Data evento</string>\r\n    <string name=\"event_time2dots\">Orario evento:</string>\r\n    <string name=\"event_time\">Orario evento</string>\r\n    <string name=\"event_description\">Descrizione evento</string>\r\n    <string name=\"event_address\">Indirizzo evento</string>\r\n\r\n    //fragment_profilo_evento\r\n    <string name=\"number_of_participants\">Numero di partecipanti all\\'evento </string>\r\n    <string name=\"available_places\">Posti disponibili </string>\r\n    <string name=\"partecipate\">partecipa </string>\r\n    <string name=\"partecipate_as_a_group\">partecipa come gruppo </string>\r\n\r\n    //fragment_profilo_evento_admin\r\n    <string name=\"modify_event\">Modifica evento </string>\r\n    <string name=\"delete_event\">Elimina evento </string>\r\n\r\n    //fragment_profilo_gruppo\r\n    <string name=\"exit_group\">Abbandona gruppo </string>\r\n\r\n    //fragment_profilo_gruppo_admin\r\n    <string name=\"group_state\">Stato del gruppo </string>\r\n    <string name=\"invite_friends\">Invita amici </string>\r\n    <string name=\"modify_group\">Modifica gruppo </string>\r\n    <string name=\"delete_group\">Elimina gruppo </string>\r\n\r\n    //fragment_profilo_partecipante\r\n    <string name=\"name_and_surname\">Nome Cognome </string>\r\n\r\n    //fragment_rimuovi_partecipazione\r\n    <string name=\"cancel_participation\">Annulla partecipazione </string>\r\n\r\n    //item_annulla_partecipazione_evento\r\n    <string name=\"red_state_participation\">Il tuo stato è rosso/arancione\\nNon puoi più partecipare a questo evento</string>\r\n\r\n    //item_invito\r\n    <string name=\"invite_from_group\">Hai ricevuto un invito da questo gruppo:</string>\r\n    <string name=\"accept\">Accetta</string>\r\n    <string name=\"delete\">Elimina</string>\r\n    <string name=\"participant\">Partecipanti</string>\r\n\r\n    //item_partecipato_evento\r\n    <string name=\"did_you_participate_event\">Hai partecipato a questo evento?</string>\r\n    <string name=\"date\">Data</string>\r\n    <string name=\"yes\">Sì</string>\r\n    <string name=\"no\">No</string>\r\n\r\n    //item_promemoria_evento\r\n    <string name=\"reminder\">Promemoria</string>\r\n    <string name=\"you_will_participate_event\">Parteciperai a questo evento</string>\r\n\r\n    //item_richiesta\r\n    <string name=\"friend_request\">Hai ricevuto una richesta d\\'amicizia da:</string>\r\n\r\n    //partecipante_row\r\n    <string name=\"years\">Anni</string>\r\n\r\n    //bottom_navigation\r\n    <string name=\"groups\">Gruppi</string>\r\n    <string name=\"friends\">Amici</string>\r\n    <string name=\"notifications\">Notifiche</string>\r\n    <string name=\"events\">Eventi</string>\r\n\r\n    //Shared message\r\n    <string name=\"subMessage1\">Iscriviti subito all\\'evento di ContagiApp\\n \\'\\'</string>\r\n    <string name=\"subMessage2\">\\'\\' \\n che si terrà in:\\n</string>\r\n    <string name=\"separator\">\", \"</string>\r\n    <string name=\"subMessage3\">\\n\\nEffettua subito la prenotazione sull\\'app.\"</string>\r\n    <string name=\"ERROR\">ERRORE</string>\r\n\r\n</resources>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision a4479ca25108f2a75bcd5748f58899ddde2e5657)
+++ app/src/main/res/values/strings.xml	(date 1635591234229)
@@ -25,6 +25,7 @@
 
     <string name="remember_me">Ricordami</string>
     <string name="createAccount">Crea account</string>
+    <string name="VuotoEventi">Non hai partecipato ad alcun evento utlimamente. Clicca su fine per completare l operazione</string>
 
     //Nomi AppBar
     <string name="settings">Impostazioni</string>
Index: app/src/main/java/com/example/contagiapp/impostazioni/SettingActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.contagiapp.impostazioni;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.provider.Settings;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.contagiapp.R;\r\nimport com.example.contagiapp.gruppi.Gruppo;\r\nimport com.example.contagiapp.utente.Utente;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.material.button.MaterialButton;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.gson.Gson;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\npublic class SettingActivity extends AppCompatActivity {\r\n\r\n    private MaterialButton btnSegnalaPositivita;\r\n    private MaterialButton btnSegnalaNegativita;\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_setting);\r\n        btnSegnalaPositivita = findViewById(R.id.btnSegnalaPositività);\r\n        btnSegnalaNegativita = findViewById(R.id.btnSegnalaNegatività);\r\n        MaterialButton btnNotifiche = findViewById(R.id.btnNotify);\r\n\r\n        db.collection(\"Utenti\")\r\n                .document(getMailUtenteLoggato())\r\n                .get()\r\n                .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                Utente utente = documentSnapshot.toObject(Utente.class);\r\n\r\n                String id = documentSnapshot.getId();\r\n\r\n                String dataPositività = utente.getDataPositivita();\r\n                String stato = utente.getStato();\r\n\r\n                btnSegnalaPositivita.setClickable(false);\r\n                btnSegnalaPositivita.setVisibility(View.INVISIBLE);\r\n                btnSegnalaNegativita.setClickable(false);\r\n                btnSegnalaNegativita.setVisibility(View.INVISIBLE);\r\n\r\n                switch(stato) {\r\n                    case \"verde\":\r\n                        btnSegnalaPositivita.setClickable(true);\r\n                        btnSegnalaPositivita.setVisibility(View.VISIBLE);\r\n                        break;\r\n                    case \"rosso\":\r\n                        if(dataPositività != null){\r\n                            try {\r\n                                Date dataPositività1=new SimpleDateFormat(\"dd/MM/yyyy\").parse(dataPositività);\r\n                                Date dataAttuale = new Date(System.currentTimeMillis());\r\n\r\n                                long g = TimeUnit.MILLISECONDS.toDays(dataAttuale.getTime() - dataPositività1.getTime());\r\n\r\n                                if(g > 14) {\r\n                                    btnSegnalaNegativita.setClickable(true);\r\n                                    btnSegnalaNegativita.setVisibility(View.VISIBLE);\r\n                                }\r\n                            } catch (ParseException e) {\r\n                                e.printStackTrace();\r\n                            }\r\n\r\n                        }\r\n                        break;\r\n                    default:\r\n                        btnSegnalaPositivita.setClickable(true);\r\n                        btnSegnalaPositivita.setVisibility(View.VISIBLE);\r\n                        btnSegnalaNegativita.setClickable(true);\r\n                        btnSegnalaNegativita.setVisibility(View.VISIBLE);\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n\r\n        btnSegnalaPositivita.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(SettingActivity.this, SegnalaPositivitaActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        btnSegnalaNegativita.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(SettingActivity.this, SegnalaNegativita.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        btnNotifiche.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                Intent intent = new Intent(Settings.ACTION_APP_NOTIFICATION_SETTINGS);\r\n                intent.putExtra(\"android.provider.extra.APP_PACKAGE\", getPackageName());\r\n                startActivity(intent);\r\n            }\r\n        });\r\n    }\r\n\r\n    private String getMailUtenteLoggato(){\r\n        Gson gson = new Gson();\r\n        SharedPreferences prefs = getApplicationContext().getSharedPreferences(\"Login\", Context.MODE_PRIVATE);\r\n        String json = prefs.getString(\"utente\", \"no\");\r\n        String mailUtenteLoggato;\r\n        if(!json.equals(\"no\")) {\r\n            Utente utente = gson.fromJson(json, Utente.class);\r\n            mailUtenteLoggato = utente.getMail();\r\n            Log.d(\"mailutenteLoggato\", mailUtenteLoggato);\r\n        } else {\r\n            SharedPreferences prefs1 = getApplicationContext().getSharedPreferences(\"LoginTemporaneo\",Context.MODE_PRIVATE);\r\n            mailUtenteLoggato = prefs1.getString(\"mail\", \"no\");\r\n            Log.d(\"mail\", mailUtenteLoggato);\r\n        }\r\n        return mailUtenteLoggato;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/contagiapp/impostazioni/SettingActivity.java	(revision a4479ca25108f2a75bcd5748f58899ddde2e5657)
+++ app/src/main/java/com/example/contagiapp/impostazioni/SettingActivity.java	(date 1635590258007)
@@ -101,6 +101,7 @@
             public void onClick(View v) {
                 Intent intent = new Intent(SettingActivity.this, SegnalaPositivitaActivity.class);
                 startActivity(intent);
+                finish();
             }
         });
 
Index: app/src/main/java/com/example/contagiapp/impostazioni/EventsPartecipatoPositivo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.contagiapp.impostazioni;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.FragmentTransaction;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.contagiapp.HomeFragment;\r\nimport com.example.contagiapp.R;\r\nimport com.example.contagiapp.eventi.Evento;\r\nimport com.example.contagiapp.notifiche.RichiesteAdapter;\r\nimport com.example.contagiapp.utente.Utente;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.gson.Gson;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\npublic class EventsPartecipatoPositivo extends AppCompatActivity {\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private static final String TAG = \"EventsPartecipatoP\";\r\n    private String dataRosso;\r\n    private Button btnFine;\r\n    private EventiPartecipatoAdapter adapter;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_eventi_partecipato_positivo);\r\n\r\n        btnFine = findViewById(R.id.btnFine);\r\n\r\n        final List<Evento> eventi = new ArrayList<>();\r\n        final RecyclerView recyclerView =  findViewById(R.id.rvRichiesteEventi);\r\n\r\n        db.collection(\"Eventi\")\r\n                .whereArrayContains(\"partecipanti\", getMailUtenteLoggato())\r\n                .get()\r\n                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                        if (task.isSuccessful()) {\r\n                            for (QueryDocumentSnapshot document : task.getResult()) {\r\n                                Evento ev = document.toObject(Evento.class);\r\n\r\n                                //se l'evento è accaduto 10 giorni fa\r\n                                try {\r\n                                    Date dataEvento = new SimpleDateFormat(\"dd/MM/yyyy\").parse(ev.getData());\r\n                                    Intent intent = getIntent();\r\n                                    dataRosso = intent.getStringExtra(\"dataRosso\");\r\n                                    Date dataRosso2 = new SimpleDateFormat(\"dd/MM/yyyy\").parse(dataRosso);\r\n\r\n                                    //864000000 millisecondi = 10 giorni\r\n                                    if(dataRosso2.getTime() - dataEvento.getTime() <= 864000000) {\r\n                                        eventi.add(ev);\r\n                                    }\r\n                                } catch (ParseException e) {\r\n                                    e.printStackTrace();\r\n                                }\r\n                            }\r\n                        } else {\r\n                            Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                        }\r\n                    }\r\n                });\r\n\r\n        db.collection(\"Utenti\").document(getMailUtenteLoggato())\r\n                .get()\r\n                .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                    @Override\r\n                    public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                        if (documentSnapshot.exists()){\r\n                            final Utente utenteLoggato = documentSnapshot.toObject(Utente.class);\r\n                            adapter = new EventiPartecipatoAdapter(getApplicationContext(), eventi, getMailUtenteLoggato(), utenteLoggato, dataRosso);\r\n                            recyclerView.setAdapter(adapter);\r\n                            recyclerView.setLayoutManager(new LinearLayoutManager(EventsPartecipatoPositivo.this));\r\n                        }else {\r\n                            Toast.makeText(EventsPartecipatoPositivo.this, \"Documents does not exist\", Toast.LENGTH_SHORT);\r\n                        }\r\n                    }\r\n                });\r\n\r\n        btnFine.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if(eventi.size()==0) {\r\n                    if(adapter.getCond().contains(false)) {\r\n                        Toast.makeText(EventsPartecipatoPositivo.this, \"Completare la segnalazione degli eventi\", Toast.LENGTH_LONG).show();\r\n                    } else {\r\n                        HomeFragment home = new HomeFragment();\r\n                        FragmentTransaction fr = getSupportFragmentManager().beginTransaction();\r\n                        fr.replace(R.id.container,home);\r\n                        fr.addToBackStack(null); //serve per tornare al fragment precedente\r\n                        fr.commit();\r\n                    }\r\n                } else finish();\r\n            }\r\n        });\r\n    }\r\n\r\n    private String getMailUtenteLoggato(){\r\n        Gson gson = new Gson();\r\n        SharedPreferences prefs = getApplicationContext().getSharedPreferences(\"Login\", Context.MODE_PRIVATE);\r\n        String json = prefs.getString(\"utente\", \"no\");\r\n        String mailUtenteLoggato;\r\n        if(!json.equals(\"no\")) {\r\n            Utente utente = gson.fromJson(json, Utente.class);\r\n            mailUtenteLoggato = utente.getMail();\r\n            Log.d(\"mailutenteLoggato\", mailUtenteLoggato);\r\n        } else {\r\n            SharedPreferences prefs1 = getApplicationContext().getSharedPreferences(\"LoginTemporaneo\",Context.MODE_PRIVATE);\r\n            mailUtenteLoggato = prefs1.getString(\"mail\", \"no\");\r\n            Log.d(\"mail\", mailUtenteLoggato);\r\n        }\r\n        return mailUtenteLoggato;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/contagiapp/impostazioni/EventsPartecipatoPositivo.java	(revision a4479ca25108f2a75bcd5748f58899ddde2e5657)
+++ app/src/main/java/com/example/contagiapp/impostazioni/EventsPartecipatoPositivo.java	(date 1635592503296)
@@ -7,6 +7,7 @@
 import android.util.Log;
 import android.view.View;
 import android.widget.Button;
+import android.widget.TextView;
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
@@ -36,12 +37,15 @@
 import java.util.Date;
 import java.util.List;
 
+import es.dmoral.toasty.Toasty;
+
 public class EventsPartecipatoPositivo extends AppCompatActivity {
     FirebaseFirestore db = FirebaseFirestore.getInstance();
     private static final String TAG = "EventsPartecipatoP";
     private String dataRosso;
     private Button btnFine;
     private EventiPartecipatoAdapter adapter;
+    private TextView noEventi;
 
     @Override
     protected void onCreate(@Nullable Bundle savedInstanceState) {
@@ -49,6 +53,7 @@
         setContentView(R.layout.activity_eventi_partecipato_positivo);
 
         btnFine = findViewById(R.id.btnFine);
+        noEventi = findViewById(R.id.textView4);
 
         final List<Evento> eventi = new ArrayList<>();
         final RecyclerView recyclerView =  findViewById(R.id.rvRichiesteEventi);
@@ -78,6 +83,9 @@
                                     e.printStackTrace();
                                 }
                             }
+
+                            if(eventi.isEmpty()) noEventi.setVisibility(View.VISIBLE);
+                            //if(eventi.isEmpty()) finish();
                         } else {
                             Log.d(TAG, "Error getting documents: ", task.getException());
                         }
@@ -103,19 +111,24 @@
         btnFine.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                if(eventi.size()==0) {
+                if(!eventi.isEmpty()) {
                     if(adapter.getCond().contains(false)) {
                         Toast.makeText(EventsPartecipatoPositivo.this, "Completare la segnalazione degli eventi", Toast.LENGTH_LONG).show();
                     } else {
-                        HomeFragment home = new HomeFragment();
-                        FragmentTransaction fr = getSupportFragmentManager().beginTransaction();
-                        fr.replace(R.id.container,home);
-                        fr.addToBackStack(null); //serve per tornare al fragment precedente
-                        fr.commit();
-                    }
-                } else finish();
-            }
-        });
+                        home();
+                    }
+                } home();
+            }
+        });
+    }
+
+
+    private void home() {
+        HomeFragment home = new HomeFragment();
+        FragmentTransaction fr = getSupportFragmentManager().beginTransaction();
+        fr.replace(R.id.container,home);
+        fr.addToBackStack(null); //serve per tornare al fragment precedente
+        fr.commit();
     }
 
     private String getMailUtenteLoggato(){
Index: app/src/main/res/values-en/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <string name=\"app_name\">ContagiApp</string>\r\n    <string name=\"home\">Home</string>\r\n\r\n    <!--Campi di registrazione-->\r\n    <string name=\"birth\">Date of birth</string>\r\n\r\n\r\n    <string name=\"login\">Login</string>\r\n    <string name=\"signUp\">Sign Up</string>\r\n    <string name=\"prompt_email\">Email</string>\r\n    <string name=\"prompt_password\">Password</string>\r\n    <string name=\"repeat_password\">Repeat Password</string>\r\n    <string name=\"action_sign_in_short\">Sign in</string>\r\n    <string name=\"welcome\">\"Welcome !\"</string>\r\n    <string name=\"invalid_username\">Not a valid username</string>\r\n    <string name=\"invalid_password\">Password must be >5 characters</string>\r\n    <string name=\"login_failed\">\"Login failed\"</string>\r\n    <string name=\"phone\">Cellulare</string>\r\n    <string name=\"search\">Search</string>\r\n    <string name=\"invite\">Invite</string>\r\n    <string name=\"participants\">participants</string>\r\n    <string name=\"available\">available</string>\r\n\r\n    <string name=\"remember_me\">Remember me</string>\r\n    <string name=\"createAccount\">Create account</string>\r\n\r\n    //Nomi AppBar\r\n    <string name=\"settings\">Settings</string>\r\n\r\n    //bottoni in impostazioni\r\n    <string name=\"SegnalaPositività\">Report positivity</string>\r\n    <string name=\"SegnalaNegatività\">Report negativity</string>\r\n    <string name=\"DarkTheme\">Dark Theme</string>\r\n    <string name=\"Notifiche\">Notifications</string>\r\n    <string name=\"InformativaPrivacy\">Information and privacy</string>\r\n\r\n    <string-array name=\"nazioni\">\r\n        <item>Italy</item>\r\n        <item>France</item>\r\n        <item>Spain</item>\r\n        <item>Germany</item>\r\n    </string-array>\r\n\r\n\r\n    <string name=\"rimuovi_partecipante\">Remove participant</string>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //Descrizione stati\r\n    <string name=\"DescrStatoGiallo\">The yellow status indicates that there has been no contact with positive people</string>\r\n    <string name=\"DescrStatoVerde\">The green status indicates that the user is negative for the swab performed</string>\r\n    <string name=\"DescrStatoArancione\">The orange status indicates that there has been contact with positive people</string>\r\n    <string name=\"DescrStatoRosso\">Red status indicates positive for COVID-19</string>\r\n\r\n    //HomeFragment\r\n    <string name=\"your_state\">Your state</string>\r\n    <string name=\"where_do_you_want_to_go\">Where do you want to go?</string>\r\n    <string name=\"search_for_available_events\">Search for available events or create a new one</string>\r\n    <string name=\"search_event\">Search event</string>\r\n    <string name=\"create_event\">Create event</string>\r\n\r\n\r\n    //GroupFragment\r\n    <string name=\"your_groups\">Your groups</string>\r\n\r\n    //addFriends\r\n    <string name=\"select_user\">Select user</string>\r\n\r\n    //addImgGruppo\r\n    <string name=\"add_cover_img\">Add a cover image</string>\r\n    <string name=\"cover_img\">cover image</string>\r\n    <string name=\"descr_add_cover_img\">Give people an idea of what your group is about with a photo.</string>\r\n    <string name=\"upload_cover_img\">Upload cover image</string>\r\n    <string name=\"next\">Next</string>\r\n\r\n\r\n    //activity_crea_gruppo\r\n    <string name=\"group_name\">group name</string>\r\n    <string name=\"description\">description</string>\r\n\r\n    //activity_eventi_partecipato_positivo\r\n    <string name=\"end\">end</string>\r\n\r\n    //activity_invita_amici_gruppo\r\n    <string name=\"invite_friend_to_group\">invite your friends to the group</string>\r\n    <string name=\"stop\">stop</string>\r\n\r\n    //activity_modifica_dati_utente\r\n    <string name=\"modify_data\">modify your data</string>\r\n    <string name=\"name\">name</string>\r\n    <string name=\"surname\">surname</string>\r\n    <string name=\"gender\">gender</string>\r\n    <string name=\"residency\">residency</string>\r\n    <string name=\"region\">region</string>\r\n    <string name=\"province\">province</string>\r\n    <string name=\"city\">city</string>\r\n    <string name=\"save\">save</string>\r\n\r\n    //activity_profilo_utenti\r\n    <string name=\"add_to_friends\">add to friends</string>\r\n    <string name=\"birth2dots\">Date of birth</string>\r\n    <string name=\"age2dots\">Age:</string>\r\n    <string name=\"gender2dots\">Gender:</string>\r\n    <string name=\"residency2dots\">Residency:</string>\r\n\r\n    //activity_registration\r\n    <string name=\"take_profile_picture\">take profile picture</string>\r\n    <string name=\"upload_profile_picture\">upload profile picture</string>\r\n\r\n    //activity_segnala_negatività\r\n    <string name=\"date_of_negativity\">negativity date</string>\r\n    <string name=\"upload_image\">upload image</string>\r\n    <string name=\"upload_pdf\">upload pdf</string>\r\n    <string name=\"report\">report</string>\r\n\r\n    //activity_segnala_positività\r\n    <string name=\"date_of_positivity\">positivity date</string>\r\n\r\n    //fragment_events\r\n    <string name=\"participating\">Events I\\'ve subscribed to</string>\r\n    <string name=\"created_by_me\">Events created by me</string>\r\n\r\n    //fragment_friends\r\n    <string name=\"your_friends\">your friends</string>\r\n\r\n    //fragment_new_events\r\n    <string name=\"event_name\">Event name</string>\r\n    <string name=\"maximum_number_of_participants\">Maximum number of participants</string>\r\n    <string name=\"event_date2dots\">Event date:</string>\r\n    <string name=\"event_date\">Event date</string>\r\n    <string name=\"event_time2dots\">Event time:</string>\r\n    <string name=\"event_time\">Event time</string>\r\n    <string name=\"event_description\">Event description</string>\r\n    <string name=\"event_address\">Event address</string>\r\n\r\n    //fragment_profilo_evento\r\n    <string name=\"number_of_participants\">Number of participants at the event</string>\r\n    <string name=\"available_places\">Available places </string>\r\n    <string name=\"partecipate\">participate </string>\r\n    <string name=\"partecipate_as_a_group\">participate as a group </string>\r\n\r\n    //fragment_profilo_evento_admin\r\n    <string name=\"modify_event\">Modify event </string>\r\n    <string name=\"delete_event\">Delete event </string>\r\n\r\n    //fragment_profilo_gruppo\r\n    <string name=\"exit_group\">Exit group </string>\r\n\r\n    //fragment_profilo_gruppo_admin\r\n    <string name=\"group_state\">Group state </string>\r\n    <string name=\"invite_friends\">Invite friends </string>\r\n    <string name=\"modify_group\">Modify group</string>\r\n    <string name=\"delete_group\">Delete group </string>\r\n\r\n    //fragment_profilo_partecipante\r\n    <string name=\"name_and_surname\">Name Surname </string>\r\n\r\n\r\n    //fragment_rimuovi_partecipazione\r\n    <string name=\"cancel_participation\">Cancel participation </string>\r\n\r\n    //item_annulla_partecipazione_evento\r\n    <string name=\"red_state_participation\">Your state is red/orange\\nYou can\\'t participate at this event</string>\r\n\r\n    //item_invito\r\n    <string name=\"invite_from_group\">You received an invite from this group:</string>\r\n    <string name=\"accept\">Accept</string>\r\n    <string name=\"delete\">Delete</string>\r\n    <string name=\"participant\">Participants</string>\r\n\r\n    //item_partecipato_evento\r\n    <string name=\"did_you_participate_event\">Did you participate at this event?</string>\r\n    <string name=\"date\">Date</string>\r\n    <string name=\"yes\">Yes</string>\r\n    <string name=\"no\">No</string>\r\n\r\n    //item_promemoria_evento\r\n    <string name=\"reminder\">Promemoria</string>\r\n    <string name=\"you_will_participate_event\">You will participate at this event</string>\r\n\r\n\r\n    //item_richiesta\r\n    <string name=\"friend_request\">You received a friend request by:</string>\r\n\r\n    //partecipante_row\r\n    <string name=\"years\">years</string>\r\n\r\n    //bottom_navigation\r\n    <string name=\"groups\">Groups</string>\r\n    <string name=\"friends\">Friends</string>\r\n    <string name=\"notifications\">Notifications</string>\r\n    <string name=\"events\">Events</string>\r\n\r\n\r\n    //Shared message\r\n    <string name=\"subMessage1\">Register now for the ContagiApp event \\'\\'</string>\r\n    <string name=\"subMessage2\">\\'\\' \\nto be held in:\\n</string>\r\n    <string name=\"separator\">\", \"</string>\r\n    <string name=\"subMessage3\">\\n\\nMake your reservation on the app now.\"</string>\r\n    <string name=\"ERROR\">ERROR</string>\r\n\r\n\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-en/strings.xml	(revision a4479ca25108f2a75bcd5748f58899ddde2e5657)
+++ app/src/main/res/values-en/strings.xml	(date 1635590786851)
@@ -22,6 +22,7 @@
     <string name="invite">Invite</string>
     <string name="participants">participants</string>
     <string name="available">available</string>
+    <string name="VuotoEventi">You have not attended any event in the past. Click on finish to complete the operation</string>
 
     <string name="remember_me">Remember me</string>
     <string name="createAccount">Create account</string>
Index: app/src/main/java/com/example/contagiapp/utente/ProfiloActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.contagiapp.utente;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.content.FileProvider;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.ListView;\r\n\r\nimport com.example.contagiapp.BuildConfig;\r\nimport com.example.contagiapp.R;\r\nimport com.example.contagiapp.WelcomeActivity;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.gson.Gson;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.Objects;\r\n\r\npublic class ProfiloActivity extends AppCompatActivity {\r\n    static final int REQUEST_IMAGE_CAPTURE = 0;\r\n    private static final String TAG = \"ProfiloActivity\";\r\n    private Button certificato;\r\n    private ListView listViewProfilo;\r\n    private Button logout;\r\n    private Button modifica;\r\n    private FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private Utente utente;\r\n    //private ImageView imgCertificato;\r\n    private ImageView imgViewProfiloUtente;\r\n    String imageFileName;\r\n    String currentPhotoPath;\r\n    private StorageReference storageRef = FirebaseStorage.getInstance().getReference();\r\n    private final static String storageDirectory = \"imgUtenti\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_profilo);\r\n        //imgCertificato= findViewById(R.id.immaginecertificato);\r\n        imgViewProfiloUtente = findViewById(R.id.imgProfilo);\r\n        listViewProfilo = (ListView) findViewById(R.id.list_profilo);\r\n        final ArrayList<String> arrayListProfilo = new ArrayList<>();\r\n\r\n        SharedPreferences prefs = getApplicationContext().getSharedPreferences(\"Login\", MODE_PRIVATE);\r\n        Gson gson = new Gson();\r\n        String json = prefs.getString(\"utente\", \"no\");\r\n\r\n        //TODO verificare il controllo\r\n        if(!json.equals(\"no\")) {\r\n            utente = gson.fromJson(json, Utente.class);\r\n\r\n            riempiListView(arrayListProfilo);\r\n\r\n            caricaImgDaStorage(storageRef, storageDirectory, utente.getMail(), imgViewProfiloUtente);\r\n        } else {\r\n            SharedPreferences prefs1 = getApplicationContext().getSharedPreferences(\"LoginTemporaneo\", MODE_PRIVATE);\r\n            String username = prefs1.getString(\"mail\", \"no\");\r\n            Log.d(\"username\", String.valueOf(username));\r\n\r\n\r\n            db.collection(\"Utenti\")\r\n                    .document(username)\r\n                    .get()\r\n                    .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                        @Override\r\n                        public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n\r\n                            utente = new Utente();\r\n                            utente = documentSnapshot.toObject(Utente.class);\r\n                            utente.setNome(documentSnapshot.getString(\"nome\"));\r\n                            utente.setCognome(documentSnapshot.getString(\"cognome\"));\r\n                            utente.setMail(documentSnapshot.getString(\"mail\"));\r\n                            utente.setDataNascita(documentSnapshot.getString(\"dataNascita\"));\r\n                            utente.setGenere(documentSnapshot.getString(\"genere\"));\r\n                            utente.setNazione(documentSnapshot.getString(\"nazione\"));\r\n                            utente.setRegione(documentSnapshot.getString(\"regione\"));\r\n                            utente.setProvince(documentSnapshot.getString(\"province\"));\r\n                            utente.setCitta(documentSnapshot.getString(\"citta\"));\r\n                            utente.setTelefono(documentSnapshot.getString(\"telefono\"));\r\n                            utente.setStato(documentSnapshot.getString(\"stato\"));\r\n\r\n                            riempiListView(arrayListProfilo);\r\n                        }\r\n                    }).addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    Log.d(TAG, \"Documento non esiste\");\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n\r\n        //arrayListProfilo.add(\"Propic\"+ utente.getPropic());\r\n\r\n\r\n\r\n        modifica = (Button) findViewById(R.id.modifica_dati);\r\n        modifica.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent mod = new Intent(ProfiloActivity.this, ModificaUtenteActivity.class);\r\n                startActivity(mod);\r\n                finish();\r\n            }\r\n        });\r\n\r\n        logout = (Button) findViewById(R.id.logout);\r\n        logout.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                SharedPreferences prefs = getApplicationContext ().getSharedPreferences(\"Login\", MODE_PRIVATE);\r\n                SharedPreferences.Editor editor = prefs.edit();\r\n                editor.clear();\r\n                editor.apply();\r\n\r\n                Intent welcome = new Intent(ProfiloActivity.this, WelcomeActivity.class);\r\n                startActivity(welcome);\r\n                finish();\r\n            }\r\n        });\r\n\r\n        /*certificato = (Button) findViewById(R.id.certificato);\r\n        certificato.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                Intent photoIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n               dispatchTakePictureIntent(photoIntent);\r\n            }\r\n        });*/\r\n    }\r\n\r\n\r\n    private void riempiListView(ArrayList<String> arrayListProfilo){\r\n        String stato = null;\r\n        if(utente.getStato().equals(\"rosso\")) stato=\"POSITIVO\";\r\n        if(utente.getStato().equals(\"verde\")) stato=\"NEGATIVO\";\r\n        if(utente.getStato().equals(\"arancione\")) stato=\"contatto con un POSITIVO\";\r\n        if(utente.getStato().equals(\"giallo\")) stato=\"INCERTO\";\r\n\r\n        arrayListProfilo.add(\"Stato: \"+stato);\r\n        arrayListProfilo.add(\"Nome: \"+utente.getNome());\r\n        arrayListProfilo.add(\"Cognome: \"+utente.getCognome());\r\n        arrayListProfilo.add(\"Mail: \"+utente.getMail());\r\n        arrayListProfilo.add(\"Data di Nascita: \"+utente.getDataNascita());\r\n        arrayListProfilo.add(\"Genere: \"+utente.getGenere());\r\n        arrayListProfilo.add(\"Nazione di residenza: \"+utente.getNazione());\r\n        arrayListProfilo.add(\"Regione di residenza: \"+utente.getRegione());\r\n        arrayListProfilo.add(\"Provincia di residenza: \"+utente.getProvince());\r\n        arrayListProfilo.add(\"Città di residenza: \"+utente.getCitta());\r\n        arrayListProfilo.add(\"Telefono: \"+utente.getTelefono());\r\n\r\n        caricaImgDaStorage(storageRef, storageDirectory, utente.getMail(), imgViewProfiloUtente);\r\n        Log.d(\"arrayListProfilo\", String.valueOf(arrayListProfilo));\r\n        ArrayAdapter arrayAdapter = new ArrayAdapter(ProfiloActivity.this, R.layout.support_simple_spinner_dropdown_item, arrayListProfilo);\r\n        listViewProfilo.setAdapter(arrayAdapter);\r\n    }\r\n\r\n    private void caricaImgDaStorage(StorageReference storageRef, String directory, String idImmagine, final ImageView imageView){\r\n        storageRef.child(directory + \"/\" + idImmagine).getDownloadUrl().addOnSuccessListener( new OnSuccessListener<Uri>() {\r\n            @Override\r\n            public void onSuccess(Uri uri) {\r\n                String sUrl = uri.toString(); //otteniamo il token del'immagine\r\n                Log.d(\"sUrl\", sUrl);\r\n                Picasso.get().load(sUrl).into(imageView);\r\n            }\r\n        }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception e) {\r\n                Log.d(\"OnFailure Exception\", String.valueOf(e));\r\n            }\r\n        });\r\n    }\r\n\r\n   /* private void dispatchTakePictureIntent(@NotNull Intent takePictureIntent) {\r\n            // Create the File where the photo should go\r\n            File photoFile = null;\r\n            try {\r\n                photoFile = createImageFile();\r\n            } catch (IOException ex) {\r\n                ex.printStackTrace();\r\n            }\r\n            // Continue only if the File was successfully created\r\n            if (photoFile != null) {\r\n                Uri photoURI = FileProvider.getUriForFile(Objects.requireNonNull(getApplicationContext()),\r\n                        BuildConfig.APPLICATION_ID + \".provider\", photoFile);\r\n                takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, photoURI);\r\n                startActivityForResult(takePictureIntent, REQUEST_IMAGE_CAPTURE);\r\n            }\r\n        }*/\r\n\r\n    /*@Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if(resultCode== RESULT_OK ){\r\n            Bitmap bitmap= BitmapFactory.decodeFile(currentPhotoPath);\r\n            imgCertificato.setImageBitmap(bitmap);\r\n            imgCertificato.setRotation(90);\r\n        }\r\n    }\r\n\r\n    @NotNull\r\n    private File createImageFile() throws IOException {\r\n        // Create an image file name\r\n        String timeStamp = new SimpleDateFormat(\"yyyyMMdd_HHmmss\").format(new Date());\r\n        imageFileName = \"JPEG_\" + timeStamp + \"_\";\r\n        File storageDir = getExternalFilesDir(Environment.DIRECTORY_PICTURES);\r\n        File image = File.createTempFile(\r\n                imageFileName,\r\n                \".jpg\",\r\n                storageDir\r\n        );\r\n\r\n        // Save a file: path for use with ACTION_VIEW intents\r\n        currentPhotoPath = image.getAbsolutePath();\r\n        return image;\r\n    }*/\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/contagiapp/utente/ProfiloActivity.java	(revision a4479ca25108f2a75bcd5748f58899ddde2e5657)
+++ app/src/main/java/com/example/contagiapp/utente/ProfiloActivity.java	(date 1635587510916)
@@ -94,19 +94,7 @@
                         @Override
                         public void onSuccess(DocumentSnapshot documentSnapshot) {
 
-                            utente = new Utente();
                             utente = documentSnapshot.toObject(Utente.class);
-                            utente.setNome(documentSnapshot.getString("nome"));
-                            utente.setCognome(documentSnapshot.getString("cognome"));
-                            utente.setMail(documentSnapshot.getString("mail"));
-                            utente.setDataNascita(documentSnapshot.getString("dataNascita"));
-                            utente.setGenere(documentSnapshot.getString("genere"));
-                            utente.setNazione(documentSnapshot.getString("nazione"));
-                            utente.setRegione(documentSnapshot.getString("regione"));
-                            utente.setProvince(documentSnapshot.getString("province"));
-                            utente.setCitta(documentSnapshot.getString("citta"));
-                            utente.setTelefono(documentSnapshot.getString("telefono"));
-                            utente.setStato(documentSnapshot.getString("stato"));
 
                             riempiListView(arrayListProfilo);
                         }
@@ -124,7 +112,7 @@
 
 
 
-        modifica = (Button) findViewById(R.id.modifica_dati);
+        modifica = findViewById(R.id.modifica_dati);
         modifica.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -134,7 +122,7 @@
             }
         });
 
-        logout = (Button) findViewById(R.id.logout);
+        logout = findViewById(R.id.logout);
         logout.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
Index: app/src/main/java/com/example/contagiapp/impostazioni/SegnalaPositivitaActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.contagiapp.impostazioni;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.app.DatePickerDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.contagiapp.MainActivity;\r\nimport com.example.contagiapp.R;\r\nimport com.example.contagiapp.gruppi.AddImgGruppoActivity;\r\nimport com.example.contagiapp.registrazione.RegistrationActivity;\r\nimport com.example.contagiapp.utente.Utente;\r\nimport com.google.android.gms.tasks.OnCanceledListener;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.button.MaterialButton;\r\nimport com.google.android.material.dialog.MaterialAlertDialogBuilder;\r\nimport com.google.android.material.textfield.TextInputLayout;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\nimport com.google.gson.Gson;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.Calendar;\r\nimport java.util.GregorianCalendar;\r\n\r\nimport es.dmoral.toasty.Toasty;\r\n\r\npublic class SegnalaPositivitaActivity extends AppCompatActivity {\r\n\r\n\r\n    private static final int PICK_IMAGE = 1;\r\n    private MaterialButton btnAddImgPositivita;\r\n    private MaterialButton btnAddPdfPositivita;\r\n    private MaterialButton completaSegnalazione;\r\n    DatePickerDialog datePickerDialog;\r\n    private static final String TAG = \"SegnalaPositivita\";\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    Utente utente = new Utente();\r\n\r\n    Uri uri;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_segnala_positivita);\r\n\r\n        final EditText editTextData = findViewById(R.id.editTextDataPositivita);\r\n        final TextInputLayout textInputLayoutData = findViewById(R.id.textInputLayoutDataPositivita);\r\n\r\n        editTextData.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                Calendar cal = Calendar.getInstance();\r\n                int year = cal.get(Calendar.YEAR);\r\n                int month = cal.get(Calendar.MONTH);\r\n                int dayOfMonth = cal.get(Calendar.DAY_OF_MONTH);\r\n\r\n\r\n\r\n\r\n                datePickerDialog = new DatePickerDialog(\r\n                        SegnalaPositivitaActivity.this,\r\n                        new DatePickerDialog.OnDateSetListener() {\r\n                            @Override\r\n                            public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\r\n                                editTextData.setText(dayOfMonth + \"/\" + (month + 1) + \"/\" + year);\r\n                                //int dayOfYear = dayOfMonth + 30 * month;\r\n\r\n                                Calendar cal = Calendar.getInstance();\r\n                                cal.set(Calendar.YEAR, year);\r\n                                cal.set(Calendar.MONTH, month);\r\n                                cal.set(Calendar.DAY_OF_MONTH, dayOfMonth);\r\n                                int giornoDellAnno = cal.get(Calendar.DAY_OF_YEAR);\r\n\r\n                                Log.d(\"giornoDellAnno\", String.valueOf(cal.get(Calendar.DAY_OF_YEAR)));\r\n                                controlloData(editTextData, textInputLayoutData, giornoDellAnno);\r\n                            }\r\n                        },\r\n                        year, month, dayOfMonth);\r\n\r\n                datePickerDialog.show();\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        btnAddImgPositivita = findViewById(R.id.btnAddImgPositivita);\r\n        btnAddImgPositivita.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                scegliImmagine();\r\n            }\r\n        });\r\n\r\n        btnAddPdfPositivita = findViewById(R.id.btnAddPdfPositivita);\r\n        btnAddPdfPositivita.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                scegliDocumento();\r\n            }\r\n        });\r\n\r\n\r\n            completaSegnalazione = findViewById(R.id.btnCompletaSegnalazione);\r\n            completaSegnalazione.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n\r\n                    if(uri != null && !textInputLayoutData.isErrorEnabled()){\r\n                        uploadImage(getMailUtenteLoggato());\r\n                        cambiaStatoUtente(\"rosso\");\r\n                        Log.d(\"data1\", editTextData.getText().toString());\r\n                        aggiornaDataPositivita(editTextData.getText().toString());\r\n\r\n                        SharedPreferences prefs = getApplicationContext().getSharedPreferences(\"Login\", MODE_PRIVATE);\r\n                        SharedPreferences.Editor editor = prefs.edit();\r\n                        Gson gson = new Gson();\r\n                        String json = prefs.getString(\"utente\", \"no\");\r\n\r\n                        if(!json.equals(\"no\")) {\r\n                            utente = gson.fromJson(json, Utente.class);\r\n                            utente.setStato(\"rosso\");\r\n                            utente.setDataPositivita(editTextData.getText().toString());\r\n                            json = gson.toJson(utente);\r\n                            editor.putString(\"utente\", json);\r\n                            editor.commit ();\r\n                        }\r\n\r\n                        Intent i = new Intent(SegnalaPositivitaActivity.this, EventsPartecipatoPositivo.class);\r\n                        i.putExtra(\"dataRosso\", editTextData.getText().toString());\r\n                        startActivity(i);\r\n                    }else\r\n                        Toasty.warning(SegnalaPositivitaActivity.this, \"Inserisci data e/o certificato\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n\r\n\r\n\r\n    }\r\n\r\n    private void aggiornaDataPositivita(String data) {\r\n        db.collection(\"Utenti\")\r\n                .document(getMailUtenteLoggato())\r\n                .update(\"dataPositivita\", data);\r\n    }\r\n\r\n    private void cambiaStatoUtente(String nuovoStato){\r\n        db.collection(\"Utenti\")\r\n                .document(getMailUtenteLoggato())\r\n                .update(\"stato\", nuovoStato);\r\n    }\r\n\r\n\r\n    private void controlloData(EditText editTextData, TextInputLayout textInputLayoutData, int dayOfYear){\r\n        String data = editTextData.getText().toString();\r\n\r\n        //todo: controllo da sistemare. Deve tenere conto anche dell'anno\r\n        Calendar cal = Calendar.getInstance();\r\n        int dayOfYearToday = cal.get(Calendar.DAY_OF_YEAR);\r\n\r\n\r\n        if(editTextData == null){\r\n            textInputLayoutData.setError(\"inserisci data\");\r\n        }else{\r\n            textInputLayoutData.setErrorEnabled(false);\r\n            if((dayOfYear - dayOfYearToday) > 0){\r\n                textInputLayoutData.setError(\"Data successiva a quella di oggi\");\r\n            }else if ((dayOfYearToday - dayOfYear) > 30){\r\n                textInputLayoutData.setError(\"E' trascorso molto tempo\");\r\n                Toasty.warning(SegnalaPositivitaActivity.this, \"E' trascorso molto tempo\", Toast.LENGTH_SHORT).show();\r\n            }else\r\n\r\n                textInputLayoutData.setErrorEnabled(false);\r\n        }\r\n\r\n    }\r\n\r\n    private void scegliDocumento(){\r\n        Intent intent = new Intent(Intent.ACTION_GET_CONTENT);\r\n        intent.setType(\"application/pdf\");\r\n        startActivityForResult(intent, 1);\r\n    }\r\n\r\n\r\n    private void scegliImmagine(){\r\n        Intent intent = new Intent(Intent.ACTION_PICK);\r\n        intent.setType(\"image/*\");\r\n        startActivityForResult(intent, PICK_IMAGE);\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        if(requestCode == PICK_IMAGE && resultCode == RESULT_OK){\r\n            uri = data.getData();\r\n            Log.d(\"uri\", String.valueOf(uri));\r\n            Toasty.success(SegnalaPositivitaActivity.this, \"Operazione eseguita\", Toast.LENGTH_SHORT).show();\r\n        }\r\n\r\n    }\r\n\r\n    private void uploadImage(String documentId){\r\n        final ProgressDialog pd = new ProgressDialog(this);\r\n        pd.setMessage(\"Caricamento\");\r\n        pd.show();\r\n\r\n\r\n        if((uri != null) && (documentId != null)){\r\n            final StorageReference fileRef = FirebaseStorage.getInstance().getReference().child(\"certificatiPositivita\").child(documentId);\r\n\r\n            fileRef.putFile(uri).addOnCompleteListener(new OnCompleteListener<UploadTask.TaskSnapshot>() {\r\n                @Override\r\n                public void onComplete(@NonNull Task<UploadTask.TaskSnapshot> task) {\r\n                    fileRef.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                        @Override\r\n                        public void onSuccess(Uri uri) {\r\n                            String url = uri.toString();\r\n\r\n                            Log.d(\"downloadUrl\", url);\r\n                            pd.dismiss();\r\n                            Toasty.success(SegnalaPositivitaActivity.this, \"Certificato caricato\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }).addOnCanceledListener(new OnCanceledListener() {\r\n                        @Override\r\n                        public void onCanceled() {\r\n                            Toasty.error(SegnalaPositivitaActivity.this, \"Certificato non caricato\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }else {\r\n            pd.dismiss();\r\n            Toast.makeText(SegnalaPositivitaActivity.this, \"Errore\", Toast.LENGTH_SHORT).show();\r\n            Log.e(\"Errore\", \"Uri o documentId nulli\");\r\n            Log.d(\"documentId\", String.valueOf(documentId));\r\n        }\r\n\r\n    }\r\n\r\n    private String getMailUtenteLoggato(){\r\n        Gson gson = new Gson();\r\n        SharedPreferences prefs = getApplicationContext().getSharedPreferences(\"Login\", Context.MODE_PRIVATE);\r\n        String json = prefs.getString(\"utente\", \"no\");\r\n        String mailUtenteLoggato;\r\n        if(!json.equals(\"no\")) {\r\n            Utente utente = gson.fromJson(json, Utente.class);\r\n            mailUtenteLoggato = utente.getMail();\r\n            Log.d(\"mailutenteLoggato\", mailUtenteLoggato);\r\n        } else {\r\n            SharedPreferences prefs1 = getApplicationContext().getSharedPreferences(\"LoginTemporaneo\",Context.MODE_PRIVATE);\r\n            mailUtenteLoggato = prefs1.getString(\"mail\", \"no\");\r\n            Log.d(\"mail\", mailUtenteLoggato);\r\n        }\r\n        return mailUtenteLoggato;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/contagiapp/impostazioni/SegnalaPositivitaActivity.java	(revision a4479ca25108f2a75bcd5748f58899ddde2e5657)
+++ app/src/main/java/com/example/contagiapp/impostazioni/SegnalaPositivitaActivity.java	(date 1635607420794)
@@ -44,7 +44,10 @@
 import com.google.gson.Gson;
 import com.squareup.picasso.Picasso;
 
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
 import java.util.Calendar;
+import java.util.Date;
 import java.util.GregorianCalendar;
 
 import es.dmoral.toasty.Toasty;
@@ -89,17 +92,26 @@
                         new DatePickerDialog.OnDateSetListener() {
                             @Override
                             public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {
-                                editTextData.setText(dayOfMonth + "/" + (month + 1) + "/" + year);
-                                //int dayOfYear = dayOfMonth + 30 * month;
-
                                 Calendar cal = Calendar.getInstance();
                                 cal.set(Calendar.YEAR, year);
                                 cal.set(Calendar.MONTH, month);
                                 cal.set(Calendar.DAY_OF_MONTH, dayOfMonth);
-                                int giornoDellAnno = cal.get(Calendar.DAY_OF_YEAR);
+
+
+                                month++;
+
+                                String dataInserita;
+
+                                if (month <= 9) {
+                                    dataInserita = dayOfMonth + "/0" + month + "/" + year;
+                                } else
+                                    dataInserita = dayOfMonth + "/" + month + "/" + year;
+
+                                editTextData.setText(dataInserita);
+                                //int dayOfYear = dayOfMonth + 30 * month;
 
                                 Log.d("giornoDellAnno", String.valueOf(cal.get(Calendar.DAY_OF_YEAR)));
-                                controlloData(editTextData, textInputLayoutData, giornoDellAnno);
+                                controlloData(editTextData, textInputLayoutData, dataInserita);
                             }
                         },
                         year, month, dayOfMonth);
@@ -179,28 +191,28 @@
     }
 
 
-    private void controlloData(EditText editTextData, TextInputLayout textInputLayoutData, int dayOfYear){
-        String data = editTextData.getText().toString();
+    private void controlloData(EditText editTextData, TextInputLayout textInputLayoutData, String dataInserita){
 
-        //todo: controllo da sistemare. Deve tenere conto anche dell'anno
-        Calendar cal = Calendar.getInstance();
-        int dayOfYearToday = cal.get(Calendar.DAY_OF_YEAR);
-
+        try {
+            Date dataAttuale = new Date(System.currentTimeMillis());
+            Date inserita = new SimpleDateFormat("dd/MM/yyyy").parse(dataInserita);
 
-        if(editTextData == null){
-            textInputLayoutData.setError("inserisci data");
-        }else{
-            textInputLayoutData.setErrorEnabled(false);
-            if((dayOfYear - dayOfYearToday) > 0){
-                textInputLayoutData.setError("Data successiva a quella di oggi");
-            }else if ((dayOfYearToday - dayOfYear) > 30){
-                textInputLayoutData.setError("E' trascorso molto tempo");
-                Toasty.warning(SegnalaPositivitaActivity.this, "E' trascorso molto tempo", Toast.LENGTH_SHORT).show();
-            }else
-
-                textInputLayoutData.setErrorEnabled(false);
+            if(editTextData == null) {
+                textInputLayoutData.setError("inserisci data");
+            } else {
+                if((inserita.getTime() - dataAttuale.getTime()) > 0) {
+                    textInputLayoutData.setErrorEnabled(true);
+                    textInputLayoutData.setError("Data inserita successiva a quella di oggi");
+                } else {
+                    if((dataAttuale.getTime() - inserita.getTime()) > 864000000) {
+                        textInputLayoutData.setErrorEnabled(true);
+                        textInputLayoutData.setError("E' trascorso molto tempo");
+                    } else textInputLayoutData.setErrorEnabled(false);
+                }
+            }
+        } catch (ParseException e) {
+            e.printStackTrace();
         }
-
     }
 
     private void scegliDocumento(){
@@ -245,7 +257,7 @@
                         public void onSuccess(Uri uri) {
                             String url = uri.toString();
 
-                            Log.d("downloadUrl", url);
+                            Log.d("downloadUrl", url);//TODO sistemare bug
                             pd.dismiss();
                             Toasty.success(SegnalaPositivitaActivity.this, "Certificato caricato", Toast.LENGTH_SHORT).show();
                         }
Index: app/src/main/res/layout/activity_eventi_partecipato_positivo.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<ScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:layout_marginBottom=\"70dp\"\r\n    tools:context=\".impostazioni.EventsPartecipatoPositivo\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/rvRichiesteEventi\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            tools:listitem=\"@layout/item_partecipato_evento\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/btnFine\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:text=\"@string/end\" />\r\n    </LinearLayout>\r\n</ScrollView>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_eventi_partecipato_positivo.xml	(revision a4479ca25108f2a75bcd5748f58899ddde2e5657)
+++ app/src/main/res/layout/activity_eventi_partecipato_positivo.xml	(date 1635591067056)
@@ -11,6 +11,16 @@
         android:layout_height="match_parent"
         android:orientation="vertical">
 
+        <TextView
+            android:id="@+id/textView4"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="@string/VuotoEventi"
+            android:textSize="24sp"
+            android:textStyle="bold"
+            android:visibility="invisible"
+            android:layout_gravity="center"/>
+
         <androidx.recyclerview.widget.RecyclerView
             android:id="@+id/rvRichiesteEventi"
             android:layout_width="match_parent"
Index: app/src/main/java/com/example/contagiapp/HomeFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.contagiapp;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.res.ColorStateList;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.contagiapp.eventi.Evento;\r\nimport com.example.contagiapp.eventi.EventsFragment;\r\nimport com.example.contagiapp.eventi.NewEventsActivity;\r\nimport com.example.contagiapp.utente.Utente;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.button.MaterialButton;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreSettings;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.reflect.TypeToken;\r\n\r\nimport java.lang.reflect.Type;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\nimport es.dmoral.toasty.Toasty;\r\n\r\nimport static com.example.contagiapp.R.color.cardview_shadow_end_color;\r\nimport static com.example.contagiapp.R.color.quantum_yellow;\r\n\r\npublic class HomeFragment extends Fragment {\r\n\r\n    private FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private LinearLayout status;\r\n    private MaterialButton btnSearchEvents;\r\n    private  MaterialButton btnCreateEvents;\r\n    private TextView tvStatusDescr;\r\n    private String statoUtente;\r\n    private String mailUtenteLoggato;\r\n\r\n    ColorStateList red = ColorStateList.valueOf(Color.parseColor(\"#FF0000\"));\r\n    ColorStateList yellow = ColorStateList.valueOf(Color.parseColor(\"#FFF8F405\"));\r\n    ColorStateList green = ColorStateList.valueOf(Color.parseColor(\"#FF43A047\"));\r\n\r\n    public HomeFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        // Inflate the layout for this fragment\r\n\r\n        mailUtenteLoggato = getMailUtenteLoggato();\r\n\r\n        View view;\r\n        view = inflater.inflate(R.layout.fragment_home, container, false);\r\n\r\n        FirebaseFirestoreSettings settings = new FirebaseFirestoreSettings.Builder()\r\n                .setPersistenceEnabled(true)\r\n                .build();\r\n\r\n        db.setFirestoreSettings(settings);\r\n\r\n        btnCreateEvents = view.findViewById(R.id.btnCreateEvent);\r\n        btnSearchEvents = view.findViewById(R.id.btnSearchEvent);\r\n        status = view.findViewById(R.id.statusCircle2);\r\n        tvStatusDescr = view.findViewById(R.id.tvStatusDescriptionHome);\r\n\r\n\r\n        btnCreateEvents.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(getActivity(), NewEventsActivity.class);\r\n                intent.putExtra(\"scelta\", false);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        btnSearchEvents.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                //richiamo il fragment\r\n                Fragment fragment = new EventsFragment();\r\n                FragmentTransaction fr = getActivity().getSupportFragmentManager().beginTransaction();\r\n                fr.replace(R.id.container,fragment);\r\n                fr.addToBackStack(null); //serve per tornare al fragment precedente\r\n                fr.commit();\r\n            }\r\n        });\r\n\r\n        boolean caricato;\r\n        do {\r\n            try {\r\n                caricato = false;\r\n\r\n                db.collection(\"Utenti\")\r\n                        .document(mailUtenteLoggato)\r\n                        .get()\r\n                        .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                            @Override\r\n                            public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                                Utente utente = documentSnapshot.toObject(Utente.class);\r\n                                //Log.d(\"getMailUtenteLoggato\", getMailUtenteLoggato());\r\n                                String stato = utente.getStato();\r\n                                String dataStato = utente.getDataPositivita();\r\n\r\n                                if(!statoUtente.equals(stato)) setStato(stato, dataStato);\r\n                                if(stato.equals(\"rosso\") || stato.equals(\"arancione\")) eliminaPartecipazioneEventi();\r\n\r\n                                switch (stato){//TODO modificare i messaggi in tvStatusDEscr\r\n                                    case \"rosso\" :\r\n                                        try {\r\n                                            Date dataPositivita = new SimpleDateFormat(\"dd/MM/yyyy\").parse(dataStato);\r\n                                            Date dataAttuale = new Date(System.currentTimeMillis());\r\n\r\n                                            SimpleDateFormat sdf = new SimpleDateFormat(\"dd/MM/yyyy\");\r\n                                            String stringDataAttuale = sdf.format(dataAttuale);\r\n\r\n                                            //864000000 millisecondi = 10 giorni\r\n                                            if(dataAttuale.getTime() - dataPositivita.getTime() >= 864000000) {\r\n                                                db.collection(\"Utenti\").document(mailUtenteLoggato).update(\"stato\", \"arancione\", \"dataPositivita\", stringDataAttuale);\r\n                                                status.setBackgroundTintList(ColorStateList.valueOf(Color.rgb(255, 165, 0)));\r\n                                                setStato(\"arancione\", stringDataAttuale);\r\n                                            } else {\r\n                                                status.setBackgroundTintList(red);\r\n                                                tvStatusDescr.setText(getString(R.string.DescrStatoRosso));\r\n                                            }\r\n                                        } catch (ParseException e) {\r\n                                            e.printStackTrace();\r\n                                        }\r\n                                        break;\r\n\r\n                                    case \"verde\" : status.setBackgroundTintList(green);\r\n                                        tvStatusDescr.setText(getString(R.string.DescrStatoVerde));\r\n                                        break;\r\n\r\n                                    case \"giallo\" : status.setBackgroundTintList(yellow);\r\n                                        tvStatusDescr.setText(getString(R.string.DescrStatoGiallo));\r\n\r\n                                        break;\r\n\r\n                                    case \"arancione\" :\r\n                                        tvStatusDescr.setText(getString(R.string.DescrStatoArancione));\r\n                                        try {\r\n                                            Date dataPositivita = new SimpleDateFormat(\"dd/MM/yyyy\").parse(dataStato);\r\n                                            Date dataAttuale = new Date(System.currentTimeMillis());\r\n\r\n                                            SimpleDateFormat sdf = new SimpleDateFormat(\"dd/MM/yyyy\");\r\n                                            String stringDataAttuale = sdf.format(dataAttuale);\r\n\r\n                                            //864000000 millisecondi = 10 giorni\r\n                                            if(dataAttuale.getTime() - dataPositivita.getTime() >= 864000000) {\r\n                                                db.collection(\"Utenti\").document(mailUtenteLoggato).update(\"stato\", \"giallo\", \"dataPositivita\", stringDataAttuale);\r\n                                                status.setBackgroundTintList(yellow);\r\n                                                setStato(\"giallo\", stringDataAttuale);\r\n                                            } else status.setBackgroundTintList(ColorStateList.valueOf(Color.rgb(255, 165, 0)));\r\n                                        } catch (ParseException e) {\r\n                                            e.printStackTrace();\r\n                                        }\r\n                                        break;\r\n\r\n                                    default:\r\n                                        //toDo: inserire errore per lo stato\r\n                                }\r\n\r\n                            }\r\n                        });\r\n\r\n            } catch (NullPointerException e) {\r\n                caricato = true;\r\n            }\r\n        }while(caricato);\r\n        return view;\r\n    }\r\n\r\n    private String getMailUtenteLoggato(){\r\n        Utente utente;\r\n        Gson gson = new Gson();\r\n\r\n        SharedPreferences prefs = getActivity().getApplicationContext().getSharedPreferences(\"Login\", Context.MODE_PRIVATE);\r\n        String json = prefs.getString(\"utente\", \"no\");\r\n        String mailUtenteLoggato;\r\n        if(!json.equals(\"no\")) {\r\n            utente = gson.fromJson(json, Utente.class);\r\n            mailUtenteLoggato = utente.getMail();\r\n            Log.d(\"mailutenteLoggato\", mailUtenteLoggato);\r\n            statoUtente = utente.getStato();\r\n        } else {\r\n            SharedPreferences prefs1 = getActivity().getApplicationContext().getSharedPreferences(\"LoginTemporaneo\",Context.MODE_PRIVATE);\r\n            mailUtenteLoggato = prefs1.getString(\"mail\", \"no\");\r\n            Log.d(\"mail\", mailUtenteLoggato);\r\n\r\n            db.collection(\"Utenti\")\r\n                    .document(mailUtenteLoggato)\r\n                    .get()\r\n                    .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                @Override\r\n                public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                    statoUtente = documentSnapshot.getString(\"stato\");\r\n                }\r\n            });\r\n        }\r\n        return mailUtenteLoggato;\r\n    }\r\n\r\n    private void setStato(String stato, String dataPos) {\r\n        SharedPreferences prefs = getActivity().getApplicationContext().getSharedPreferences(\"Login\", Context.MODE_PRIVATE);\r\n        Gson gson = new Gson();\r\n        String json = prefs.getString(\"utente\", \"no\");\r\n        Utente utente;\r\n\r\n        if(!json.equals(\"no\")) {\r\n            utente = gson.fromJson(json, Utente.class);\r\n            utente.setStato(stato);\r\n            utente.setDataPositivita(dataPos);\r\n\r\n            SharedPreferences.Editor editor = prefs.edit();\r\n            String json1 = gson.toJson(utente);\r\n            editor.putString(\"utente\", json1);\r\n            editor.apply();\r\n        }\r\n\r\n        Toasty.success(getContext(), \"Stato aggiornato\", Toast.LENGTH_LONG).show();\r\n        Intent i = new Intent(getActivity(),MainActivity.class);\r\n        startActivity(i);\r\n    }\r\n\r\n    private void eliminaPartecipazioneEventi() {\r\n        ArrayList<String> finalEventi = new ArrayList<>();\r\n\r\n        SharedPreferences pref = getActivity().getSharedPreferences(\"eventi\", Context.MODE_PRIVATE);\r\n        Gson gson = new Gson();\r\n        String json = pref.getString(\"id\", \"no\");\r\n\r\n        if(!json.equals(\"no\")) {\r\n            finalEventi = gson.fromJson(json, new TypeToken<ArrayList<String>>() {}.getType());\r\n        }\r\n\r\n        final ArrayList<String> eventi = finalEventi;\r\n\r\n        db.collection(\"Eventi\")\r\n                .whereArrayContains(\"partecipanti\", mailUtenteLoggato)\r\n                .get()\r\n                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if(task.isSuccessful()) {\r\n                    for(DocumentSnapshot documentSnapshot : task.getResult()) {\r\n                        Evento ev = documentSnapshot.toObject(Evento.class);\r\n                        ArrayList<String> partecipanti;\r\n                        partecipanti = ev.getPartecipanti();\r\n                        partecipanti.remove(mailUtenteLoggato);\r\n                        Log.d(\"evento da rimuovere\", ev.getIdEvento());\r\n\r\n                        db.collection(\"Eventi\").document(ev.getIdEvento()).update(\"partecipanti\", partecipanti);\r\n                        eventi.add(ev.getIdEvento());\r\n                    }\r\n\r\n                    SharedPreferences preferences = getActivity().getSharedPreferences(\"eventi\", Context.MODE_PRIVATE);\r\n                    SharedPreferences.Editor editor = preferences.edit();\r\n                    Gson gson1 = new Gson();\r\n                    String json1 = gson1.toJson(eventi);\r\n                    editor.putString(\"id\", json1);\r\n                    editor.commit();\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/contagiapp/HomeFragment.java	(revision a4479ca25108f2a75bcd5748f58899ddde2e5657)
+++ app/src/main/java/com/example/contagiapp/HomeFragment.java	(date 1635607420824)
@@ -133,7 +133,7 @@
                                 if(!statoUtente.equals(stato)) setStato(stato, dataStato);
                                 if(stato.equals("rosso") || stato.equals("arancione")) eliminaPartecipazioneEventi();
 
-                                switch (stato){//TODO modificare i messaggi in tvStatusDEscr
+                                switch (stato){
                                     case "rosso" :
                                         try {
                                             Date dataPositivita = new SimpleDateFormat("dd/MM/yyyy").parse(dataStato);
@@ -184,9 +184,6 @@
                                             e.printStackTrace();
                                         }
                                         break;
-
-                                    default:
-                                        //toDo: inserire errore per lo stato
                                 }
 
                             }
@@ -249,6 +246,7 @@
         Toasty.success(getContext(), "Stato aggiornato", Toast.LENGTH_LONG).show();
         Intent i = new Intent(getActivity(),MainActivity.class);
         startActivity(i);
+        //getActivity().finish();
     }
 
     private void eliminaPartecipazioneEventi() {
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout-land/activity_login.xml\" value=\"0.21516754850088182\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/activity_add_friends.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/activity_add_img_gruppo.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/activity_crea_gruppo.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/activity_eventi_partecipato_positivo.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/activity_invita_amici_gruppo.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/activity_launch_screen.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/activity_login.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/activity_main.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/activity_modifica_dati_utente.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/activity_profilo.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/activity_profilo_utenti.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/activity_registration.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/activity_segnala_negativita.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/activity_segnala_positivita.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/activity_setting.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/activity_welcome.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/add_user_row.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/fragment_events.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/fragment_friends.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/fragment_group.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/fragment_home.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/fragment_modifica_gruppo.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/fragment_new_events.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/fragment_notify.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/fragment_partecipazione_gruppo.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/fragment_profilo_evento.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/fragment_profilo_evento_admin.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/fragment_profilo_gruppo.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/fragment_profilo_gruppo_admin.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/fragment_profilo_partecipante.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/fragment_rimuovi_partecipazione_evento.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/item_annulla_partecipazione_evento.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/item_event.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/item_gruppo.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/item_invito.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/item_partecipanti.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/item_partecipato_evento.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/item_promemoria_evento.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/item_richiesta.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/partecipante_row.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/layout/user_row.xml\" value=\"0.21693840579710144\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/menu/bottom_navigation.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/menu/menu.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml\" value=\"0.2703125\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/mipmap-anydpi-v26/ic_launcher2.xml\" value=\"0.2703125\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/mipmap-anydpi-v26/ic_launcher2_round.xml\" value=\"0.2703125\" />\r\n        <entry key=\"..\\:/Users/franc/AndroidStudioProjects/ContagiApp/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml\" value=\"0.2703125\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision a4479ca25108f2a75bcd5748f58899ddde2e5657)
+++ .idea/misc.xml	(date 1635607428702)
@@ -54,7 +54,7 @@
       </map>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: .idea/shelf/Uncommitted_changes_before_Update_at_26_10_2021_11_56_[Default_Changelist]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_26_10_2021_11_56_[Default_Changelist]/shelved.patch	(date 1635585907982)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_26_10_2021_11_56_[Default_Changelist]/shelved.patch	(date 1635585907982)
@@ -0,0 +1,238 @@
+Index: app/src/main/java/com/example/contagiapp/notifiche/Notifiche.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package com.example.contagiapp.notifiche;\r\n\r\nimport android.app.Notification;\r\nimport android.content.Context;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.net.Uri;\r\nimport android.util.Log;\r\nimport android.widget.ImageView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.core.app.NotificationCompat;\r\nimport androidx.core.app.NotificationManagerCompat;\r\n\r\nimport com.example.contagiapp.MainActivity;\r\nimport com.example.contagiapp.R;\r\nimport com.example.contagiapp.eventi.Evento;\r\nimport com.example.contagiapp.gruppi.Gruppo;\r\nimport com.example.contagiapp.utente.Utente;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.gson.Gson;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\n\r\n//classe che crea e mostra notifiche nella barra delle notifiche android\r\npublic class Notifiche {\r\n    private static final String TAG = \"Notifiche.java\";\r\n    private MainActivity mainActivity;\r\n    private FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private Bitmap bitMap;\r\n    private final StorageReference storageRef = FirebaseStorage.getInstance().getReference();\r\n    private static final String GROUP_KEY_WORK = \"NOTIFY\";\r\n\r\n    public Notifiche(MainActivity mainActivity) {\r\n        this.mainActivity = mainActivity;\r\n\r\n        invitiAmici();\r\n    }\r\n\r\n    private void invitiAmici() {\r\n\r\n        db.collection(\"Utenti\")\r\n                .document(getMailUtenteLoggato())\r\n                .get()\r\n                .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                    @Override\r\n                    public void onSuccess(final DocumentSnapshot documentSnapshot) {\r\n                        Utente utente = documentSnapshot.toObject(Utente.class);\r\n                        final ArrayList<String> invitiAmici = utente.getRichiesteRicevute();\r\n                        final ArrayList<Notification> notifiche = new ArrayList<>();\r\n\r\n                        boolean controllo = false;\r\n                        for(int i = 0; i < invitiAmici.size(); i++) {\r\n                            if(i == invitiAmici.size()-1) controllo = true;\r\n                            final boolean finalControllo = controllo;\r\n\r\n                            db.collection(\"Utenti\")\r\n                                    .document(invitiAmici.get(i))\r\n                                    .get()\r\n                                    .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                                        @Override\r\n                                        public void onSuccess(@NonNull DocumentSnapshot documentSnapshot1) {\r\n                                            Utente ut = documentSnapshot1.toObject(Utente.class);\r\n\r\n                                            //TODO non riesco a caricare l'immagine dell'utente\r\n                                            //caricaImgDaStorage(\"imgUtenti\", ut.getMail());\r\n                                            Notification newMessageNotification1 =\r\n                                                    new NotificationCompat.Builder(mainActivity, \"CHANNEL_ID\")\r\n                                                            .setSmallIcon(R.drawable.ic_friends)\r\n                                                            .setSubText(\"Richiesta di amicizia\")\r\n                                                            .setLargeIcon(bitMap)\r\n                                                            /*.setStyle(new NotificationCompat.BigPictureStyle()\r\n                                                                    .bigPicture(bitMap)\r\n                                                                    .bigLargeIcon(null))*/\r\n                                                            .setContentText(\"Città: \"+ut.getCitta()+\"\\nData di nascita: \"+ut.getDataNascita())\r\n                                                            .setContentTitle(ut.getCognome()+\" \"+ut.getNome())\r\n                                                            .setGroup(GROUP_KEY_WORK)\r\n                                                            .build();\r\n\r\n                                            notifiche.add(newMessageNotification1);\r\n\r\n                                            if(finalControllo) richiesteGruppi(notifiche);\r\n                                        }\r\n                                    });\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void richiesteGruppi(final ArrayList<Notification> notifiche) {\r\n\r\n        db.collection(\"Utenti\")\r\n                .document(getMailUtenteLoggato())\r\n                .get()\r\n                .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                Utente utente = documentSnapshot.toObject(Utente.class);\r\n                final ArrayList<String> richiesteGruppi = utente.getInvitiRicevuti();\r\n\r\n                boolean controllo = false;\r\n                for(int i = 0; i < richiesteGruppi.size(); i++) {\r\n                    if(i == richiesteGruppi.size()-1) controllo = true;\r\n                    final boolean finalControllo = controllo;\r\n\r\n                    db.collection(\"Gruppo\")\r\n                            .document(richiesteGruppi.get(i))\r\n                            .get()\r\n                            .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                        @Override\r\n                        public void onSuccess(@NonNull DocumentSnapshot documentSnapshot1) {\r\n                            final Gruppo grup = documentSnapshot1.toObject(Gruppo.class);\r\n\r\n                            db.collection(\"Utenti\")\r\n                                    .document(grup.getAdmin())\r\n                                    .get()\r\n                                    .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                                @Override\r\n                                public void onSuccess(DocumentSnapshot documentSnapshot2) {\r\n                                    Utente admin = documentSnapshot2.toObject(Utente.class);\r\n\r\n                                    Notification newMessageNotification1 =\r\n                                            new NotificationCompat.Builder(mainActivity, \"CHANNEL_ID\")\r\n                                                    .setSmallIcon(R.drawable.ic_group_black_24dp)\r\n                                                    .setSubText(\"Unisciti al gruppo\")\r\n                                                    .setLargeIcon(bitMap)\r\n                                                    /*.setStyle(new NotificationCompat.BigPictureStyle()\r\n                                                            .bigPicture(bitMap)\r\n                                                            .bigLargeIcon(null))*/\r\n                                                    .setContentTitle(\"Amministratore gruppo: \"+admin.getCognome()+\" \"+admin.getNome())\r\n                                                    .setContentText(\"Nome gruppo: \"+grup.getNomeGruppo()+\" Partecipanti: \"+grup.getNroPartecipanti())\r\n                                                    .setGroup(GROUP_KEY_WORK)\r\n                                                    .build();\r\n\r\n                                    notifiche.add(newMessageNotification1);\r\n\r\n                                    if(finalControllo) eventi(notifiche);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void eventi(final ArrayList<Notification> notifiche) {\r\n\r\n        db.collection(\"Eventi\")\r\n                .whereArrayContains(\"partecipanti\",getMailUtenteLoggato())\r\n                .get()\r\n                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if(task.isSuccessful()) {\r\n\r\n                    for(DocumentSnapshot documentSnapshot : task.getResult()) {\r\n                        Evento evento = documentSnapshot.toObject(Evento.class);\r\n\r\n                        try {\r\n                            Date dataEvento = new SimpleDateFormat(\"dd/MM/yyyy\").parse(evento.getData());\r\n                            Date dataAttuale = new Date(System.currentTimeMillis());\r\n\r\n                            //86400000 millisecondi = 1 giorno\r\n                            if((dataAttuale.getTime() - dataEvento.getTime()) <= 86400000) {\r\n                                Notification newMessageNotification1 =\r\n                                        new NotificationCompat.Builder(mainActivity, \"CHANNEL_ID\")\r\n                                                .setSmallIcon(R.drawable.ic_event_black_24dp)\r\n                                                .setSubText(\"Ti ricordiamo l'evento \"+evento.getNome())\r\n                                                .setLargeIcon(bitMap)\r\n                                                /*.setStyle(new NotificationCompat.BigPictureStyle()\r\n                                                        .bigPicture(bitMap)\r\n                                                        .bigLargeIcon(null))*/\r\n                                                .setContentText(\"Città: \"+evento.getCitta())\r\n                                                .setContentTitle(\"Data: \"+evento.getData()+\" \"+evento.getOrario())\r\n                                                .setGroup(GROUP_KEY_WORK)\r\n                                                .build();\r\n\r\n                                notifiche.add(newMessageNotification1);\r\n                            }\r\n                        } catch (ParseException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    }\r\n\r\n                    statoXTampone(notifiche);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void statoXTampone(final ArrayList<Notification> notifiche) {\r\n\r\n        db.collection(\"Utenti\")\r\n                .document(getMailUtenteLoggato())\r\n                .get()\r\n                .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                String stato = documentSnapshot.toObject(Utente.class).getStato();\r\n\r\n                if(stato.equals(\"arancione\") || stato.equals(\"giallo\")) {\r\n\r\n                    Notification newMessageNotification1 =\r\n                            new NotificationCompat.Builder(mainActivity, \"CHANNEL_ID\")\r\n                                    .setSmallIcon(R.drawable.ic_account_circle_black_24dp)\r\n                                    .setSubText(\"Stato\")\r\n                                    .setContentTitle(\"Ti ricordo che il tuo stato è \"+stato+\"\\n\")\r\n                                    .setContentText(\"Fai un tampone al più presto\")\r\n                                    .setLargeIcon(bitMap)\r\n                                    /*.setStyle(new NotificationCompat.BigPictureStyle()\r\n                                            .bigPicture(bitMap)\r\n                                            .bigLargeIcon(null))*/\r\n                                    .setGroup(GROUP_KEY_WORK)\r\n                                    .build();\r\n\r\n                    notifiche.add(newMessageNotification1);\r\n\r\n                    Notification summaryNotification =\r\n                            new NotificationCompat.Builder(mainActivity, \"CHANNEL_ID\")\r\n                                    .setContentTitle(\"Notifiche\")\r\n                                    //set content text to support devices running API level < 24\r\n                                    .setContentText(\"Notifiche\")\r\n                                    .setSmallIcon(R.mipmap.ic_launcher)\r\n                                    //build summary info into InboxStyle template\r\n                                    .setStyle(new NotificationCompat.InboxStyle()\r\n                                            .setSummaryText(\"Notifiche\"))\r\n                                    //specify which group this notification belongs to\r\n                                    .setGroup(GROUP_KEY_WORK)\r\n                                    //set this notification as the summary for the group\r\n                                    .setGroupSummary(true)\r\n                                    .build();\r\n\r\n                    NotificationManagerCompat notificationManager = NotificationManagerCompat.from(mainActivity);\r\n                    for(int j = 0; j < notifiche.size(); j++) {\r\n                        notificationManager.notify(j, notifiche.get(j));\r\n                    }\r\n                    notificationManager.notify(10, summaryNotification);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private String getMailUtenteLoggato(){\r\n        Gson gson = new Gson();\r\n        SharedPreferences prefs = mainActivity.getSharedPreferences(\"Login\", Context.MODE_PRIVATE);\r\n        String json = prefs.getString(\"utente\", \"no\");\r\n        String mailUtenteLoggato;\r\n\r\n        if(!json.equals(\"no\")) {\r\n            Utente utente = gson.fromJson(json, Utente.class);\r\n            mailUtenteLoggato = utente.getMail();\r\n            Log.d(\"mailutenteLoggato\", mailUtenteLoggato);\r\n        } else {\r\n            SharedPreferences prefs1 = mainActivity.getApplicationContext().getSharedPreferences(\"LoginTemporaneo\",Context.MODE_PRIVATE);\r\n            mailUtenteLoggato = prefs1.getString(\"mail\", \"no\");\r\n            Log.d(\"mail\", mailUtenteLoggato);\r\n        }\r\n        return mailUtenteLoggato;\r\n    }\r\n\r\n    private void caricaImgDaStorage(String directory, String idImmagine) {\r\n        storageRef.child(directory + \"/\" + idImmagine).getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n            @Override\r\n            public void onSuccess(Uri uri) {\r\n                ImageView imageView = mainActivity.findViewById(R.id.imgUser);\r\n                String sUrl = uri.toString(); //otteniamo il token del'immagine\r\n                Log.d(\"sUrl\", sUrl);\r\n                Picasso.get().load(sUrl).into(imageView);\r\n\r\n                Drawable d = imageView.getDrawable();\r\n                bitMap = Bitmap.createBitmap(d.getIntrinsicWidth(), d.getIntrinsicHeight(), Bitmap.Config.ARGB_8888);\r\n            }\r\n        }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception e) {\r\n                Log.d(\"OnFailure Exception\", String.valueOf(e));\r\n            }\r\n        });\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+--- app/src/main/java/com/example/contagiapp/notifiche/Notifiche.java	(revision 51ace52b74b5be9f024db79254b9ae61f950a25a)
++++ app/src/main/java/com/example/contagiapp/notifiche/Notifiche.java	(date 1635241629847)
+@@ -1,7 +1,9 @@
+ package com.example.contagiapp.notifiche;
+ 
+ import android.app.Notification;
++import android.app.PendingIntent;
+ import android.content.Context;
++import android.content.Intent;
+ import android.content.SharedPreferences;
+ import android.graphics.Bitmap;
+ import android.graphics.drawable.Drawable;
+@@ -16,6 +18,7 @@
+ import com.example.contagiapp.MainActivity;
+ import com.example.contagiapp.R;
+ import com.example.contagiapp.eventi.Evento;
++import com.example.contagiapp.eventi.ProfiloEventoFragment;
+ import com.example.contagiapp.gruppi.Gruppo;
+ import com.example.contagiapp.utente.Utente;
+ import com.google.android.gms.tasks.OnCompleteListener;
+@@ -176,11 +179,26 @@
+ 
+                             //86400000 millisecondi = 1 giorno
+                             if((dataAttuale.getTime() - dataEvento.getTime()) <= 86400000) {
++
++                                Intent notifyIntent = new Intent(mainActivity, Smistamento.class);
++                                notifyIntent.putExtra("fragment", "evento");
++                                notifyIntent.putExtra("id", evento.getIdEvento());
++
++                                // Set the Activity to start in a new, empty task
++                                notifyIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK
++                                        | Intent.FLAG_ACTIVITY_CLEAR_TASK);
++
++                                // Create the PendingIntent
++                                PendingIntent notifyPendingIntent = PendingIntent.getActivity(
++                                        mainActivity, 0, notifyIntent, PendingIntent.FLAG_UPDATE_CURRENT
++                                );
++
+                                 Notification newMessageNotification1 =
+                                         new NotificationCompat.Builder(mainActivity, "CHANNEL_ID")
+                                                 .setSmallIcon(R.drawable.ic_event_black_24dp)
+                                                 .setSubText("Ti ricordiamo l'evento "+evento.getNome())
+                                                 .setLargeIcon(bitMap)
++                                                .setContentIntent(notifyPendingIntent)
+                                                 /*.setStyle(new NotificationCompat.BigPictureStyle()
+                                                         .bigPicture(bitMap)
+                                                         .bigLargeIcon(null))*/
+Index: .idea/shelf/Uncommitted_changes_before_Update_at_18_10_2021_18_23__Default_Changelist_.xml
+===================================================================
+--- .idea/shelf/Uncommitted_changes_before_Update_at_18_10_2021_18_23__Default_Changelist_.xml	(revision 51ace52b74b5be9f024db79254b9ae61f950a25a)
++++ .idea/shelf/Uncommitted_changes_before_Update_at_18_10_2021_18_23__Default_Changelist_.xml	(revision 51ace52b74b5be9f024db79254b9ae61f950a25a)
+@@ -1,4 +0,0 @@
+-<changelist name="Uncommitted_changes_before_Update_at_18_10_2021_18_23_[Default_Changelist]" date="1634574193197" recycled="true" deleted="true">
+-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_10_2021_18_23_[Default_Changelist]/shelved.patch" />
+-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 18/10/2021 18:23 [Default Changelist]" />
+-</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Update_at_18_10_2021_18_23_[Default_Changelist]/shelved.patch
+===================================================================
+--- .idea/shelf/Uncommitted_changes_before_Update_at_18_10_2021_18_23_[Default_Changelist]/shelved.patch	(revision 51ace52b74b5be9f024db79254b9ae61f950a25a)
++++ .idea/shelf/Uncommitted_changes_before_Update_at_18_10_2021_18_23_[Default_Changelist]/shelved.patch	(revision 51ace52b74b5be9f024db79254b9ae61f950a25a)
+@@ -1,123 +0,0 @@
+-Index: app/src/main/java/com/example/contagiapp/ui/login/LoginActivity.java
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>package com.example.contagiapp.ui.login;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.StringRes;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.contagiapp.MainActivity;\r\nimport com.example.contagiapp.R;\r\nimport com.example.contagiapp.WelcomeActivity;\r\nimport com.example.contagiapp.registrazione.RegistrationActivity;\r\nimport com.example.contagiapp.utente.Utente;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.textfield.TextInputEditText;\r\nimport com.google.android.material.textfield.TextInputLayout;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.gson.Gson;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.io.OutputStream;\r\nimport java.io.OutputStreamWriter;\r\n\r\npublic class LoginActivity extends AppCompatActivity {\r\n\r\n    private static final String TAG =\"LoginActivity\";\r\n    private LoginViewModel loginViewModel;\r\n    private TextInputEditText mailEditText;\r\n    private TextInputEditText passwordEditText;\r\n    private TextInputLayout mailTextLayout;\r\n    private TextInputLayout passwordTextLayout;\r\n    private boolean ricord;\r\n    private FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n        loginViewModel = new ViewModelProvider(this, new LoginViewModelFactory())\r\n                .get(LoginViewModel.class);\r\n\r\n        mailEditText = findViewById(R.id.mail);\r\n        passwordEditText = findViewById(R.id.password);\r\n        mailTextLayout = findViewById(R.id.textFieldMail);\r\n        passwordTextLayout = findViewById(R.id.textFieldPassword);\r\n\r\n        final Button loginButton = findViewById(R.id.login);\r\n        final Button createAccountButton = findViewById(R.id.createAccount);\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n\r\n        loginButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                if(controlloTextFieldVuoto(mailEditText, passwordEditText) == 0){\r\n                    mailTextLayout.setError(null);\r\n                    passwordTextLayout.setError(null);\r\n                    CheckBox ricordami = (CheckBox) findViewById(R.id.checkBox);\r\n                    ricord = ricordami.isChecked();\r\n                    openMain();\r\n                }\r\n            }\r\n        });\r\n\r\n        createAccountButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                openRegistration();\r\n            }\r\n        });\r\n    }\r\n\r\n    private int controlloTextFieldVuoto(TextInputEditText mailEditText, TextInputEditText passwordEditText){\r\n\r\n        if(isEmpty(mailEditText) == true && isEmpty(passwordEditText) == false ){\r\n            mailTextLayout.setError(\"Inserisci mail\");\r\n            passwordTextLayout.setError(null);\r\n            return 1;\r\n        }\r\n\r\n        if(isEmpty(passwordEditText) == true && isEmpty(mailEditText) == false){\r\n            passwordTextLayout.setError(\"Inserisci password\");\r\n            mailTextLayout.setError(null);\r\n            return 2;\r\n        }else\r\n            passwordTextLayout.setError(null);\r\n\r\n        if(isEmpty(mailEditText) && isEmpty(passwordEditText) == true){\r\n            mailTextLayout.setError(\"Inserisci mail\");\r\n            passwordTextLayout.setError(\"Inserisci password\");\r\n            return 3;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    private boolean isEmpty(TextInputEditText etText) {\r\n        if(etText.getText().toString().length() > 0)\r\n            return false;\r\n        return true;\r\n    }\r\n\r\n    private void updateUiWithUser(LoggedInUserView model) {\r\n        String welcome = getString(R.string.welcome) + model.getDisplayName();\r\n        // TODO : initiate successful logged in experience\r\n        Toast.makeText(getApplicationContext(), welcome, Toast.LENGTH_LONG).show();\r\n    }\r\n\r\n    private void showLoginFailed(@StringRes Integer errorString) {\r\n        Toast.makeText(getApplicationContext(), errorString, Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n\r\n    public void openMain(){\r\n        final String username = mailEditText.getText().toString();\r\n        final String password = passwordEditText.getText().toString();\r\n\r\n        //utente già registrato?\r\n        db.collection(\"Utenti\").whereEqualTo(\"mail\", username).whereEqualTo(\"password\",password)\r\n                .get().addOnSuccessListener(new OnSuccessListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onSuccess(QuerySnapshot querySnapshots) {\r\n                if(querySnapshots.isEmpty()) {\r\n                    Toast.makeText(getApplicationContext(), \"Mail o password errati\", Toast.LENGTH_SHORT).show();\r\n                } else {\r\n                    //checkbox ricordami\r\n                    if(ricord) {\r\n                        db.collection(\"Utenti\").whereEqualTo(\"mail\", username).whereEqualTo(\"password\",password)\r\n                                .get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                            @Override\r\n                            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                                if (task.isSuccessful()) {\r\n                                    for (QueryDocumentSnapshot document : task.getResult()) {\r\n                                        Utente utente = document.toObject(Utente.class);\r\n\r\n                                        SharedPreferences prefs = getApplicationContext().getSharedPreferences(\"Login\", MODE_PRIVATE);\r\n                                        SharedPreferences.Editor editor = prefs.edit();\r\n                                        Gson gson = new Gson();\r\n                                        String json = gson.toJson(utente);\r\n                                        editor.putString(\"utente\", json);\r\n                                        editor.commit ();\r\n                                    }\r\n                                } else {\r\n                                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                                }\r\n                            }\r\n                        });\r\n                    } else {\r\n                        SharedPreferences prefs = getApplicationContext().getSharedPreferences(\"LoginTemporaneo\", MODE_PRIVATE);\r\n                        SharedPreferences.Editor editor = prefs.edit();\r\n                        editor.putString(\"mail\", username);\r\n                        editor.commit ();\r\n                    }\r\n                    Intent mainIntent = new Intent(LoginActivity.this, MainActivity.class);\r\n                    startActivity(mainIntent);\r\n                    finish();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public void openRegistration(){\r\n        Intent signUpIntent = new Intent(this, RegistrationActivity.class);\r\n        startActivity(signUpIntent);\r\n    }\r\n}
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+---- app/src/main/java/com/example/contagiapp/ui/login/LoginActivity.java	(revision d6fc8831346e0dc00973800390dc2c7b54150366)
+-+++ app/src/main/java/com/example/contagiapp/ui/login/LoginActivity.java	(date 1634572687167)
+-@@ -159,6 +159,9 @@
+-                                         String json = gson.toJson(utente);
+-                                         editor.putString("utente", json);
+-                                         editor.commit ();
+-+                                        Intent mainIntent = new Intent(LoginActivity.this, MainActivity.class);
+-+                                        startActivity(mainIntent);
+-+                                        finish();
+-                                     }
+-                                 } else {
+-                                     Log.d(TAG, "Error getting documents: ", task.getException());
+-@@ -170,10 +173,10 @@
+-                         SharedPreferences.Editor editor = prefs.edit();
+-                         editor.putString("mail", username);
+-                         editor.commit ();
+--                    }
+--                    Intent mainIntent = new Intent(LoginActivity.this, MainActivity.class);
+--                    startActivity(mainIntent);
+--                    finish();
+-+                        Intent mainIntent = new Intent(LoginActivity.this, MainActivity.class);
+-+                        startActivity(mainIntent);
+-+                        finish();
+-+                    }
+-                 }
+-             }
+-         });
+-Index: app/src/main/java/com/example/contagiapp/MainActivity.java
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>package com.example.contagiapp;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBar;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\n\r\nimport android.Manifest;\r\nimport android.bluetooth.BluetoothAdapter;\r\nimport android.bluetooth.BluetoothManager;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Color;\r\nimport android.graphics.PorterDuff;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.provider.Settings;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.WindowManager;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.contagiapp.data.amici.FriendsFragment;\r\nimport com.example.contagiapp.eventi.EventsFragment;\r\nimport com.example.contagiapp.gruppi.GroupFragment;\r\nimport com.example.contagiapp.impostazioni.SettingActivity;\r\nimport com.example.contagiapp.notifiche.NotifyFragment;\r\nimport com.example.contagiapp.utente.ProfiloActivity;\r\nimport com.example.contagiapp.utente.Utente;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.gson.Gson;\r\nimport com.karumi.dexter.Dexter;\r\nimport com.karumi.dexter.PermissionToken;\r\nimport com.karumi.dexter.listener.PermissionDeniedResponse;\r\nimport com.karumi.dexter.listener.PermissionGrantedResponse;\r\nimport com.karumi.dexter.listener.PermissionRequest;\r\nimport com.karumi.dexter.listener.single.PermissionListener;\r\n\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    private static final int PERMISSION_CODE = 0;\r\n    private static final int REQUEST_ENABLE_BT = 1;\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    String stato;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        checkMyPermission();\r\n        checkMyBL();\r\n\r\n        // Tiene lo schermo acceso\r\n        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);\r\n\r\n        /*\r\n        final BluetoothManager bluetoothManager = (BluetoothManager)getSystemService(Context.BLUETOOTH_SERVICE);\r\n        BluetoothAdapter bluetoothAdapter = bluetoothManager.getAdapter();\r\n\r\n\r\n        if (!bluetoothAdapter.isEnabled()) {\r\n            Intent enableBtIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);\r\n            startActivityForResult(enableBtIntent, REQUEST_ENABLE_BT);\r\n            Toast.makeText(this,\"schifoso il signore\",Toast.LENGTH_SHORT).show();\r\n        }\r\n\r\n         */\r\n\r\n        BottomNavigationView bottomNavigationView = findViewById(R.id.bottomNav);\r\n\r\n        bottomNavigationView.setOnNavigationItemSelectedListener(bottomNavMethod);\r\n        getSupportFragmentManager().beginTransaction().replace(R.id.container, new HomeFragment()).commit();\r\n\r\n        getSupportFragmentManager().addOnBackStackChangedListener(new FragmentManager.OnBackStackChangedListener() {\r\n            @Override\r\n            public void onBackStackChanged() {\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    //per bluetooth\r\n    private void checkMyBL(){\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\r\n            if (ContextCompat.checkSelfPermission(this,\r\n                    Manifest.permission.ACCESS_BACKGROUND_LOCATION)\r\n                    != PackageManager.PERMISSION_GRANTED) {\r\n                ActivityCompat.requestPermissions(\r\n                        MainActivity.this,\r\n                        new String[]{Manifest.permission.ACCESS_BACKGROUND_LOCATION},PERMISSION_CODE\r\n                        );\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    //per gps\r\n    private void checkMyPermission(){\r\n        Dexter.withActivity(this).withPermission(Manifest.permission.ACCESS_FINE_LOCATION).withListener(new PermissionListener() {\r\n            @Override\r\n            public void onPermissionGranted(PermissionGrantedResponse response) {\r\n                Toast.makeText(MainActivity.this, \"Permesso gps concesso\", Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            @Override\r\n            public void onPermissionDenied(PermissionDeniedResponse response) {\r\n                Intent intent = new Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS,\r\n                        Uri.fromParts(\"package\", getPackageName(), null));\r\n                startActivity(intent);\r\n            }\r\n\r\n            @Override\r\n            public void onPermissionRationaleShouldBeShown(PermissionRequest permission, PermissionToken token) {\r\n                token.continuePermissionRequest();\r\n            }\r\n        }).check();\r\n    }\r\n\r\n\r\n    //per aggiungere menu sulla actionBar\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.menu, menu);\r\n\r\n        SharedPreferences prefs = getApplicationContext().getSharedPreferences(\"Login\", MODE_PRIVATE);\r\n        Gson gson = new Gson();\r\n        String json = prefs.getString(\"utente\", \"no\");\r\n        Utente utente;\r\n\r\n        if(!json.equals(\"no\")) {\r\n            utente = gson.fromJson(json, Utente.class);\r\n            stato = utente.getStato();\r\n        } else {\r\n            SharedPreferences prefs1 = getApplicationContext().getSharedPreferences(\"LoginTemporaneo\", MODE_PRIVATE);\r\n            String username = prefs1.getString(\"mail\", \"no\");\r\n            Log.d(\"username\", String.valueOf(username));\r\n\r\n            db.collection(\"Utenti\")\r\n                    .document(username)\r\n                    .get()\r\n                    .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                        @Override\r\n                        public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                            stato = documentSnapshot.getString(\"stato\");\r\n                        }\r\n                    });\r\n        }\r\n\r\n        Drawable draw = menu.getItem(0).getIcon();\r\n        draw.mutate();\r\n\r\n        draw.setColorFilter(Color.GRAY, PorterDuff.Mode.SRC_IN);\r\n        if(stato.equals(\"rosso\")) draw.setColorFilter(Color.RED, PorterDuff.Mode.SRC_IN);\r\n        if(stato.equals(\"verde\")) draw.setColorFilter(Color.GREEN, PorterDuff.Mode.SRC_IN);\r\n        if(stato.equals(\"arancione\")) draw.setColorFilter(Color.rgb(255, 165, 0), PorterDuff.Mode.SRC_IN);\r\n        if(stato.equals(\"giallo\")) draw.setColorFilter(Color.YELLOW, PorterDuff.Mode.SRC_IN);\r\n\r\n        return super.onCreateOptionsMenu(menu);\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\r\n        int id = item.getItemId();\r\n\r\n\r\n        if(id == R.id.nav_setting){\r\n            //getSupportFragmentManager().beginTransaction().replace(R.id.container, SettingFragment).commit();\r\n            Intent settingIntent = new Intent(this, SettingActivity.class);\r\n            startActivity(settingIntent);\r\n        }\r\n\r\n        if(id == R.id.nav_account){\r\n            Intent profiloIntent = new Intent(this, ProfiloActivity.class);\r\n            startActivity(profiloIntent);\r\n        }\r\n\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    //Per ottenere la barra di navigazione in basso\r\n    private BottomNavigationView.OnNavigationItemSelectedListener bottomNavMethod = new\r\n            BottomNavigationView.OnNavigationItemSelectedListener() {\r\n                @Override\r\n                public boolean onNavigationItemSelected(@NonNull MenuItem menuitem) {\r\n\r\n                    Fragment fragment=null;\r\n\r\n                    switch (menuitem.getItemId())\r\n                    {\r\n                        case R.id.nav_group:\r\n                            fragment = new GroupFragment();\r\n                            break;\r\n\r\n                        case R.id.nav_home:\r\n                            fragment = new HomeFragment();\r\n                            break;\r\n\r\n                        case R.id.nav_notify:\r\n                            fragment = new NotifyFragment();\r\n                            break;\r\n\r\n                        case R.id.nav_events:\r\n                            fragment = new EventsFragment();\r\n                            break;\r\n\r\n                        case R.id.nav_friends:\r\n                            fragment = new FriendsFragment();\r\n                            break;\r\n\r\n                    }\r\n                    getSupportFragmentManager().beginTransaction().replace(R.id.container, fragment).commit();\r\n                    return true;\r\n                }\r\n            };\r\n\r\n\r\n\r\n\r\n\r\n}\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+---- app/src/main/java/com/example/contagiapp/MainActivity.java	(revision d6fc8831346e0dc00973800390dc2c7b54150366)
+-+++ app/src/main/java/com/example/contagiapp/MainActivity.java	(date 1634574183045)
+-@@ -36,10 +36,14 @@
+- import com.example.contagiapp.notifiche.NotifyFragment;
+- import com.example.contagiapp.utente.ProfiloActivity;
+- import com.example.contagiapp.utente.Utente;
+-+import com.google.android.gms.tasks.OnCompleteListener;
+- import com.google.android.gms.tasks.OnSuccessListener;
+-+import com.google.android.gms.tasks.Task;
+- import com.google.android.material.bottomnavigation.BottomNavigationView;
+- import com.google.firebase.firestore.DocumentSnapshot;
+- import com.google.firebase.firestore.FirebaseFirestore;
+-+import com.google.firebase.firestore.QueryDocumentSnapshot;
+-+import com.google.firebase.firestore.QuerySnapshot;
+- import com.google.gson.Gson;
+- import com.karumi.dexter.Dexter;
+- import com.karumi.dexter.PermissionToken;
+-@@ -53,7 +57,7 @@
+- 
+-     private static final int PERMISSION_CODE = 0;
+-     private static final int REQUEST_ENABLE_BT = 1;
+--    FirebaseFirestore db = FirebaseFirestore.getInstance();
+-+    private FirebaseFirestore db = FirebaseFirestore.getInstance();
+-     String stato;
+- 
+-     @Override
+-@@ -148,15 +152,30 @@
+-         } else {
+-             SharedPreferences prefs1 = getApplicationContext().getSharedPreferences("LoginTemporaneo", MODE_PRIVATE);
+-             String username = prefs1.getString("mail", "no");
+--            Log.d("username", String.valueOf(username));
+-+            //Log.d("username", username);
+- 
+--            db.collection("Utenti")
+--                    .document(username)
+--                    .get()
+--                    .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {
+--                        @Override
+--                        public void onSuccess(DocumentSnapshot documentSnapshot) {
+--                            stato = documentSnapshot.getString("stato");
+-+            do {
+-+                db.collection("Utenti")
+-+                        .document(username)
+-+                        .get()
+-+                        .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {
+-+                            @Override
+-+                            public void onSuccess(DocumentSnapshot documentSnapshot) {
+-+                                stato = documentSnapshot.getString("stato");
+-+                                Log.d("stato", stato);
+-+                            }
+-+                        });
+-+            } while(stato == null);
+-+
+-+            db.collection("Utenti").whereEqualTo("mailPath", utente.getMail()).get()
+-+                    .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
+-+                        @Override
+-+                        public void onComplete(@NonNull Task<QuerySnapshot> task) {
+-+                            if(task.isSuccessful()) {
+-+                                for (QueryDocumentSnapshot document : task.getResult()) {
+-+                                    utente = document.toObject(Utente.class);
+-+                                }
+-+                            }
+-                         }
+-                     });
+-         }
+-Index: app/src/main/java/com/example/contagiapp/HomeFragment.java
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>package com.example.contagiapp;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.res.ColorStateList;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.contagiapp.eventi.EventsFragment;\r\nimport com.example.contagiapp.eventi.NewEventsActivity;\r\nimport com.example.contagiapp.utente.Utente;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.material.button.MaterialButton;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.gson.Gson;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\n\r\nimport es.dmoral.toasty.Toasty;\r\n\r\nimport static com.example.contagiapp.R.color.cardview_shadow_end_color;\r\nimport static com.example.contagiapp.R.color.quantum_yellow;\r\n\r\npublic class HomeFragment extends Fragment {\r\n\r\n    private FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private LinearLayout status;\r\n    private MaterialButton btnSearchEvents;\r\n    private  MaterialButton btnCreateEvents;\r\n    private TextView tvStatusDescr;\r\n    private String statoUtente;\r\n\r\n    ColorStateList red = ColorStateList.valueOf(Color.parseColor(\"#FF0000\"));\r\n    ColorStateList yellow = ColorStateList.valueOf(Color.parseColor(\"#FFF8F405\"));\r\n    ColorStateList green = ColorStateList.valueOf(Color.parseColor(\"#FF43A047\"));\r\n\r\n    public HomeFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view;\r\n        view = inflater.inflate(R.layout.fragment_home, container, false);\r\n        btnCreateEvents = view.findViewById(R.id.btnCreateEvent);\r\n        btnSearchEvents = view.findViewById(R.id.btnSearchEvent);\r\n        status = view.findViewById(R.id.statusCircle2);\r\n        tvStatusDescr = view.findViewById(R.id.tvStatusDescription);\r\n\r\n\r\n        btnCreateEvents.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(getActivity(), NewEventsActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        btnSearchEvents.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                //richiamo il fragment\r\n                Fragment fragment = new EventsFragment();\r\n                FragmentTransaction fr = getActivity().getSupportFragmentManager().beginTransaction();\r\n                fr.replace(R.id.container,fragment);\r\n                fr.addToBackStack(null); //serve per tornare al fragment precedente\r\n                fr.commit();\r\n            }\r\n        });\r\n\r\n        boolean caricato;\r\n        do {\r\n            try {\r\n                caricato = false;\r\n                db.collection(\"Utenti\")\r\n                        .document(getMailUtenteLoggato())\r\n                        .get()\r\n                        .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                            @Override\r\n                            public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                                Utente utente = documentSnapshot.toObject(Utente.class);\r\n                                String stato = utente.getStato();\r\n                                String dataStato = utente.getDataPositivita();\r\n\r\n                                if(!statoUtente.equals(stato)) setStato(stato, dataStato);\r\n\r\n\r\n                                switch (stato){//TODO modificare i messaggi in tvStatusDEscr\r\n                                    case \"rosso\" : status.setBackgroundTintList(red);\r\n                                        tvStatusDescr.setText(getString(R.string.DescrStatoRosso));\r\n                                        break;\r\n\r\n                                    case \"verde\" : status.setBackgroundTintList(green);\r\n                                        tvStatusDescr.setText(getString(R.string.DescrStatoVerde));\r\n                                        break;\r\n\r\n                                    case \"giallo\" : status.setBackgroundTintList(yellow);\r\n                                        tvStatusDescr.setText(getString(R.string.DescrStatoGiallo));\r\n                                        break;\r\n\r\n                                    case \"arancione\" :\r\n                                        try {\r\n                                            Date dataPositivita = new SimpleDateFormat(\"dd/MM/yyyy\").parse(dataStato);\r\n                                            Date dataAttuale = new Date(System.currentTimeMillis());\r\n\r\n                                            SimpleDateFormat sdf = new SimpleDateFormat(\"dd/MM/yyyy\");\r\n                                            String stringDataAttuale = sdf.format(dataAttuale);\r\n\r\n                                            //864000000 millisecondi = 10 giorni\r\n                                            if(dataAttuale.getTime() - dataPositivita.getTime() >= 864000000) {\r\n                                                db.collection(\"Utenti\").document(getMailUtenteLoggato()).update(\"stato\", \"giallo\", \"dataPositivita\", stringDataAttuale);\r\n                                                status.setBackgroundTintList(yellow);\r\n                                                setStato(\"giallo\", stringDataAttuale);\r\n                                            } else status.setBackgroundTintList(ColorStateList.valueOf(Color.rgb(255, 165, 0)));\r\n                                        } catch (ParseException e) {\r\n                                            e.printStackTrace();\r\n                                        }\r\n                                        break;\r\n\r\n                                    default:\r\n                                        //toDo: inserire errore per lo stato\r\n                                }\r\n\r\n                            }\r\n                        });\r\n\r\n            } catch (NullPointerException e) {\r\n                caricato = true;\r\n            }\r\n        }while(caricato);\r\n        return view;\r\n    }\r\n\r\n    private String getMailUtenteLoggato(){\r\n        Utente utente;\r\n        Gson gson = new Gson();\r\n        SharedPreferences prefs = getActivity().getApplicationContext().getSharedPreferences(\"Login\", Context.MODE_PRIVATE);\r\n        String json = prefs.getString(\"utente\", \"no\");\r\n        String mailUtenteLoggato;\r\n        if(!json.equals(\"no\")) {\r\n            utente = gson.fromJson(json, Utente.class);\r\n            mailUtenteLoggato = utente.getMail();\r\n            Log.d(\"mailutenteLoggato\", mailUtenteLoggato);\r\n            statoUtente = utente.getStato();\r\n        } else {\r\n            SharedPreferences prefs1 = getActivity().getApplicationContext().getSharedPreferences(\"LoginTemporaneo\",Context.MODE_PRIVATE);\r\n            mailUtenteLoggato = prefs1.getString(\"mail\", \"no\");\r\n            Log.d(\"mail\", mailUtenteLoggato);\r\n\r\n            db.collection(\"Utenti\")\r\n                    .document(mailUtenteLoggato)\r\n                    .get()\r\n                    .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                @Override\r\n                public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                    statoUtente = documentSnapshot.getString(\"stato\");\r\n                }\r\n            });\r\n        }\r\n        return mailUtenteLoggato;\r\n    }\r\n\r\n    private void setStato(String stato, String dataPos) {\r\n        SharedPreferences prefs = getActivity().getApplicationContext().getSharedPreferences(\"Login\", Context.MODE_PRIVATE);\r\n        Gson gson = new Gson();\r\n        String json = prefs.getString(\"utente\", \"no\");\r\n        Utente utente;\r\n\r\n        if(!json.equals(\"no\")) {\r\n            utente = gson.fromJson(json, Utente.class);\r\n            utente.setStato(stato);\r\n            utente.setDataPositivita(dataPos);\r\n\r\n            SharedPreferences.Editor editor = prefs.edit();\r\n            String json1 = gson.toJson(utente);\r\n            editor.putString(\"utente\", json1);\r\n            editor.apply();\r\n        }\r\n\r\n        Toasty.success(getContext(), \"Stato aggiornato\", Toast.LENGTH_LONG).show();\r\n        Intent i = new Intent(getActivity(),MainActivity.class);\r\n        startActivity(i);\r\n    }\r\n}\r\n\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+---- app/src/main/java/com/example/contagiapp/HomeFragment.java	(revision d6fc8831346e0dc00973800390dc2c7b54150366)
+-+++ app/src/main/java/com/example/contagiapp/HomeFragment.java	(date 1634572109893)
+-@@ -94,6 +94,7 @@
+-         do {
+-             try {
+-                 caricato = false;
+-+                String mail = getMailUtenteLoggato();
+-                 db.collection("Utenti")
+-                         .document(getMailUtenteLoggato())
+-                         .get()
+Index: app/src/main/java/com/example/contagiapp/notifiche/Smistamento.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+--- app/src/main/java/com/example/contagiapp/notifiche/Smistamento.java	(date 1635242212673)
++++ app/src/main/java/com/example/contagiapp/notifiche/Smistamento.java	(date 1635242212673)
+@@ -0,0 +1,38 @@
++package com.example.contagiapp.notifiche;
++
++import android.os.Bundle;
++
++import androidx.appcompat.app.AppCompatActivity;
++import androidx.fragment.app.Fragment;
++
++import com.example.contagiapp.R;
++import com.example.contagiapp.eventi.ProfiloEventoFragment;
++import com.example.contagiapp.gruppi.ProfiloGruppoFragment;
++
++public class Smistamento extends AppCompatActivity {
++    @Override
++    protected void onCreate(Bundle savedInstanceState) {
++        super.onCreate(savedInstanceState);
++
++        String fragment = getIntent().getExtras().getString("fragmnet");
++        String id = getIntent().getExtras().getString("id");
++
++        Fragment fragment1 = null;
++        Bundle bundle = new Bundle();
++
++        switch (fragment) {
++            case "evento":
++                fragment1 = new ProfiloEventoFragment();
++                bundle.putString("idEvento", id);
++                break;
++            case "gruppo":
++                fragment1 = new ProfiloGruppoFragment();
++                bundle.putString("idGruppo", id);
++                break;
++                //per amico basta passare direttamente l'intent dalla notifica
++        }
++
++        fragment1.setArguments(bundle);
++        getSupportFragmentManager().beginTransaction().replace(R.id.container, fragment1).commit();
++    }
++}
Index: .idea/shelf/Uncommitted_changes_before_Update_at_26_10_2021_11_56__Default_Changelist_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_26_10_2021_11_56__Default_Changelist_.xml	(date 1635607428398)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_26_10_2021_11_56__Default_Changelist_.xml	(date 1635607428398)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_26_10_2021_11_56_[Default_Changelist]" date="1635242223111" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_10_2021_11_56_[Default_Changelist]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 26/10/2021 11:56 [Default Changelist]" />
+</changelist>
\ No newline at end of file
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_29_01_2021_17_16__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_29_01_2021_17_16__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_29_01_2021_17_16__Default_Changelist_1.xml .idea/shelf/Uncommitted_changes_before_Update_at_29_01_2021_17_16__Default_Changelist_1.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_29_10_2021_16_58__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_29_10_2021_16_58__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_14_01_2021_20_23__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_14_01_2021_20_23__Default_Changelist_.xml
