Index: app/src/main/java/com/example/contagiapp/ui/login/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.contagiapp.ui.login;\r\n\r\nimport android.app.Activity;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.StringRes;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.KeyEvent;\r\nimport android.view.View;\r\nimport android.view.inputmethod.EditorInfo;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.contagiapp.MainActivity;\r\nimport com.example.contagiapp.R;\r\nimport com.example.contagiapp.registrazione.RegistrationActivity;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.Query;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\npublic class LoginActivity extends AppCompatActivity {\r\n\r\n    private static final String TAG =\"LoginActivity\";\r\n    private LoginViewModel loginViewModel;\r\n    private EditText usernameEditText;\r\n    private EditText passwordEditText;\r\n    private FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n        loginViewModel = new ViewModelProvider(this, new LoginViewModelFactory())\r\n                .get(LoginViewModel.class);\r\n\r\n        usernameEditText = findViewById(R.id.username);\r\n        passwordEditText = findViewById(R.id.password);\r\n        final Button loginButton = findViewById(R.id.login);\r\n        final Button createAccountButton = findViewById(R.id.createAccount);\r\n        final ProgressBar loadingProgressBar = findViewById(R.id.loading);\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n\r\n\r\n        loginViewModel.getLoginFormState().observe(this, new Observer<LoginFormState>() {\r\n            @Override\r\n            public void onChanged(@Nullable LoginFormState loginFormState) {\r\n                if (loginFormState == null) {\r\n                    return;\r\n                }\r\n                loginButton.setEnabled(loginFormState.isDataValid());\r\n                if (loginFormState.getUsernameError() != null) {\r\n                    usernameEditText.setError(getString(loginFormState.getUsernameError()));\r\n                }\r\n                if (loginFormState.getPasswordError() != null) {\r\n                    passwordEditText.setError(getString(loginFormState.getPasswordError()));\r\n                }\r\n            }\r\n        });\r\n\r\n        loginViewModel.getLoginResult().observe(this, new Observer<LoginResult>() {\r\n            @Override\r\n            public void onChanged(@Nullable LoginResult loginResult) {\r\n                if (loginResult == null) {\r\n                    return;\r\n                }\r\n                loadingProgressBar.setVisibility(View.GONE);\r\n                if (loginResult.getError() != null) {\r\n                    showLoginFailed(loginResult.getError());\r\n                }\r\n                if (loginResult.getSuccess() != null) {\r\n                    updateUiWithUser(loginResult.getSuccess());\r\n                }\r\n                setResult(Activity.RESULT_OK);\r\n\r\n                //Complete and destroy login activity once successful\r\n                finish();\r\n            }\r\n        });\r\n\r\n        TextWatcher afterTextChangedListener = new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n                // ignore\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                // ignore\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n                loginViewModel.loginDataChanged(usernameEditText.getText().toString(),\r\n                        passwordEditText.getText().toString());\r\n            }\r\n        };\r\n        usernameEditText.addTextChangedListener(afterTextChangedListener);\r\n        passwordEditText.addTextChangedListener(afterTextChangedListener);\r\n        passwordEditText.setOnEditorActionListener(new TextView.OnEditorActionListener() {\r\n\r\n            @Override\r\n            public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {\r\n                if (actionId == EditorInfo.IME_ACTION_DONE) {\r\n                    loginViewModel.login(usernameEditText.getText().toString(),\r\n                            passwordEditText.getText().toString());\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        loginButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                loadingProgressBar.setVisibility(View.VISIBLE);\r\n                loginViewModel.login(usernameEditText.getText().toString(),\r\n                        passwordEditText.getText().toString());\r\n                openMain();\r\n            }\r\n        });\r\n\r\n        createAccountButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                openRegistration();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void updateUiWithUser(LoggedInUserView model) {\r\n        String welcome = getString(R.string.welcome) + model.getDisplayName();\r\n        // TODO : initiate successful logged in experience\r\n        Toast.makeText(getApplicationContext(), welcome, Toast.LENGTH_LONG).show();\r\n    }\r\n\r\n    private void showLoginFailed(@StringRes Integer errorString) {\r\n        Toast.makeText(getApplicationContext(), errorString, Toast.LENGTH_SHORT).show();\r\n    }\r\n    public void openMain(){\r\n        /*String username = usernameEditText.getText().toString();\r\n        String password = passwordEditText.getText().toString();*/\r\n        Intent mainIntent = new Intent(this, MainActivity.class);\r\n        startActivity(mainIntent);\r\n        /*db.collection(\"Utenti\")\r\n                .whereEqualTo(\"nome\", username).whereEqualTo(\"password\",password)\r\n                .get()\r\n                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                        if (task.isSuccessful()) {\r\n                            for (QueryDocumentSnapshot document : task.getResult()) {\r\n                                Log.d(TAG, document.getId() + \" => \" + document.getData());*/\r\n                                startActivity(mainIntent);\r\n                            /*}\r\n                        } else {\r\n                            Log.d(TAG, \"Username o password errati\", task.getException());\r\n                        }\r\n                    }\r\n                });*/\r\n        //Query capitalCities = db.collection(\"cities\").whereEqualTo(\"capital\", true);\r\n    }\r\n\r\n    public void openRegistration(){\r\n        Intent signUpIntent = new Intent(this, RegistrationActivity.class);\r\n        startActivity(signUpIntent);\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/contagiapp/ui/login/LoginActivity.java	(revision 083a37397929eab6aa567a8d9c85705e992457ec)
+++ app/src/main/java/com/example/contagiapp/ui/login/LoginActivity.java	(date 1611916874106)
@@ -25,10 +25,12 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
+import com.example.contagiapp.HomeFragment;
 import com.example.contagiapp.MainActivity;
 import com.example.contagiapp.R;
 import com.example.contagiapp.registrazione.RegistrationActivity;
 import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.OnSuccessListener;
 import com.google.android.gms.tasks.Task;
 import com.google.firebase.firestore.FirebaseFirestore;
 import com.google.firebase.firestore.Query;
@@ -153,27 +155,26 @@
         Toast.makeText(getApplicationContext(), errorString, Toast.LENGTH_SHORT).show();
     }
     public void openMain(){
-        /*String username = usernameEditText.getText().toString();
-        String password = passwordEditText.getText().toString();*/
-        Intent mainIntent = new Intent(this, MainActivity.class);
-        startActivity(mainIntent);
-        /*db.collection("Utenti")
-                .whereEqualTo("nome", username).whereEqualTo("password",password)
-                .get()
-                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
-                    @Override
-                    public void onComplete(@NonNull Task<QuerySnapshot> task) {
-                        if (task.isSuccessful()) {
-                            for (QueryDocumentSnapshot document : task.getResult()) {
-                                Log.d(TAG, document.getId() + " => " + document.getData());*/
-                                startActivity(mainIntent);
-                            /*}
-                        } else {
-                            Log.d(TAG, "Username o password errati", task.getException());
-                        }
-                    }
-                });*/
-        //Query capitalCities = db.collection("cities").whereEqualTo("capital", true);
+        String username = usernameEditText.getText().toString();
+        String password = passwordEditText.getText().toString();
+
+        System.out.println(username);
+        System.out.println(password);
+        //final Intent mainIntent = new Intent(this, HomeFragment.class);
+        db.collection("Utenti").whereEqualTo("mail", username).whereEqualTo("password",password)
+                .get().addOnSuccessListener(new OnSuccessListener<QuerySnapshot>() {
+            @Override
+            public void onSuccess(QuerySnapshot querySnapshots) { System.out.println(querySnapshots.isEmpty());
+                if(querySnapshots.isEmpty()) {
+                    finish();
+                    setContentView(R.layout.activity_login);
+                    Toast.makeText(getApplicationContext(), "Mail o password errati", Toast.LENGTH_SHORT).show();
+                } else {
+                    finish();
+                    setContentView(R.layout.fragment_home);
+                }
+            }
+        });
     }
 
     public void openRegistration(){
Index: .idea/shelf/Uncommitted_changes_before_Reset_at_21_01_2021_18_33_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Reset_at_21_01_2021_18_33_[Default_Changelist]/shelved.patch	(revision 083a37397929eab6aa567a8d9c85705e992457ec)
+++ .idea/shelf/Uncommitted_changes_before_Reset_at_21_01_2021_18_33_[Default_Changelist]/shelved.patch	(revision 083a37397929eab6aa567a8d9c85705e992457ec)
@@ -1,155 +0,0 @@
-Index: app/src/main/java/com/example/contagiapp/registrazione/RegistrationActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.contagiapp.registrazione;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.app.DatePickerDialog;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\n\r\nimport com.example.contagiapp.MainActivity;\r\nimport com.example.contagiapp.R;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.util.Calendar;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class RegistrationActivity extends AppCompatActivity implements AdapterView.OnItemSelectedListener {\r\n    private Button signInButton;\r\n    private TextView dataNascita;\r\n    private DatePickerDialog.OnDateSetListener dataDiNascita;\r\n    private RadioGroup radiogroup;\r\n    private RadioButton radiosex;\r\n    private static final String TAG = \"RegistrationActivity\";\r\n    // Access a Cloud Firestore instance from your Activity\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_registration);\r\n\r\n\r\n        //Spinner per nazioni\r\n        Spinner spinnerNazioni = findViewById(R.id.spinnerNazioni);\r\n        ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(this, R.array.nazioni, android.R.layout.simple_spinner_dropdown_item);\r\n        adapter.setDropDownViewResource(R.layout.support_simple_spinner_dropdown_item);\r\n        spinnerNazioni.setAdapter(adapter);\r\n        spinnerNazioni.setOnItemSelectedListener(this);\r\n\r\n\r\n        // collegamento button registrati con la mainActivity\r\n        signInButton = (Button) findViewById(R.id.registrati);\r\n        signInButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                openMainActivity();\r\n            }\r\n        });\r\n\r\n        //Date Picker\r\n        dataNascita = (TextView) findViewById(R.id.dataNascita);\r\n        dataNascita.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Calendar cal = Calendar.getInstance();\r\n                int year = cal.get(Calendar.YEAR);\r\n                int month = cal.get(Calendar.MONTH);\r\n                int day = cal.get(Calendar.DAY_OF_MONTH);\r\n\r\n                DatePickerDialog dialog = new DatePickerDialog(\r\n                        RegistrationActivity.this,\r\n                        android.R.style.Theme_Holo_Light_Dialog_MinWidth,\r\n                        dataDiNascita,\r\n                        year, month, day);\r\n                dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n                dialog.show();\r\n            }\r\n        });\r\n\r\n        dataDiNascita = new DatePickerDialog.OnDateSetListener(){\r\n            @Override\r\n            public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\r\n\r\n                Log.d(TAG, \"onDateSet: date: \" + dayOfMonth + \"/\" + month + \"/\" + year);\r\n                String date = dayOfMonth + \"/\" + month+1 + \"/\" + year;\r\n                dataNascita.setText(date);\r\n            }\r\n        };\r\n\r\n\r\n\r\n    }\r\n\r\n    public void openMainActivity(){\r\n        // Create a new user with a first, middle, and last name\r\n        final Map<String, Object> user = new HashMap<>();\r\n\r\n        EditText name = (EditText)findViewById(R.id.EditTextName);\r\n        String nome = name.getText().toString();\r\n        user.put(\"nome\", nome);\r\n\r\n        EditText surname = (EditText)findViewById(R.id.EdiTextSurname);\r\n        String cognome = surname.getText().toString();\r\n        user.put(\"cognome\", cognome);\r\n\r\n        TextView date = (TextView) findViewById(R.id.dataNascita);\r\n        String data= date.getText().toString();\r\n        user.put(\"dataNascita\", data);\r\n        radiogroup=(RadioGroup) findViewById(R.id.radiogroup);\r\n        int Idselezionato= radiogroup.getCheckedRadioButtonId();\r\n        radiosex= (RadioButton) findViewById(Idselezionato);\r\n        user.put(\"genere\", radiosex.getText().toString());\r\n\r\n\r\n\r\n\r\n        // Add a new document with a generated ID\r\n        db.collection(\"Utenti\")\r\n        .add(user)\r\n                /*.addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        Log.d(TAG, \"DocumentSnapshot successfully written!\");\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Log.w(TAG, \"Error writing document\", e);\r\n                    }\r\n                })*/;\r\n\r\n\r\n        Intent mainIntent = new Intent(this, MainActivity.class);\r\n        startActivity(mainIntent);\r\n    }\r\n\r\n\r\n    //Spinner per nazioni\r\n    @Override\r\n    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n        String text = parent.getItemAtPosition(position).toString();\r\n        //Toast.makeText(parent.getContext(), text, Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    @Override\r\n    public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/contagiapp/registrazione/RegistrationActivity.java	(revision 0919cc119003887da34facbe553496a86647b885)
-+++ app/src/main/java/com/example/contagiapp/registrazione/RegistrationActivity.java	(date 1611250415757)
-@@ -102,7 +102,7 @@
-         String nome = name.getText().toString();
-         user.put("nome", nome);
- 
--        EditText surname = (EditText)findViewById(R.id.EdiTextSurname);
-+        EditText surname = (EditText)findViewById(R.id.EdiTTextSurname);
-         String cognome = surname.getText().toString();
-         user.put("cognome", cognome);
- 
-Index: app/src/main/java/sql/DBhelper.java
-===================================================================
---- app/src/main/java/sql/DBhelper.java	(revision 0919cc119003887da34facbe553496a86647b885)
-+++ app/src/main/java/sql/DBhelper.java	(revision 0919cc119003887da34facbe553496a86647b885)
-@@ -1,65 +0,0 @@
--package sql;
--
--import android.content.Context;
--import android.database.sqlite.SQLiteDatabase;
--import android.database.sqlite.SQLiteOpenHelper;
--
--public class DBhelper extends SQLiteOpenHelper
--{
--    public static final String DBNAME = "Contagi";
--
--    public DBhelper(Context context) {
--        super(context, DBNAME, null, 1);
--    }
--
--    @Override
--    public void onCreate(SQLiteDatabase db)
--    {  //boolean = integers 0 (false) and 1 (true)
--
--        String utenti = "create table utenti (id INTEGER PRIMARY KEY AUTOINCREMENT, nome text not null, " +
--                "cognome text not null, cellulare integer unique, data_nascita text not null, citta_nascita text not null, " +
--                "mail text not null unique, genere text not null, foto_tampone text, consenso integer not null, data_iscrizione text not null, " +
--                "data_foto text, colore integer not null, nazione_residenza text not null, regione_residenza text not null, " +
--                "citta_residenza text not null, via_residenza text not null)";
--
--        String amici = "create table amici (id_utente integer, id_utente_amico integer, primary key(id_utente, id_utente_amico), " +
--                "foreign key (id_utente) references utenti(id))";
--
--        String gruppi = "create table gruppi (id INTEGER PRIMARY KEY AUTOINCREMENT, nome text not null, data_creazione text not null, " +
--                "num_utenti integer not null, descrizione text not null)";
--
--        String utenti_gruppi = "create table utenti_gruppi (id_utente integer, id_gruppo integer, primary key(id_utente, id_gruppo), " +
--                "foreign key (id_utente) references utenti(id), foreign key (id_gruppo) references gruppi(id))";
--
--        String eventi = "create table eventi (id  INTEGER PRIMARY KEY AUTOINCREMENT, data text not null, ora_inizio integer not null, ora_fine integer not null, " +
--                "nome text not null, num_partecipanti_max integer not null, descrizione text not null, nazione text not null, " +
--                "regione text not null, citta text not null, via text not null, luogo text not null)";
--
--        String utenti_eventi = "create table utenti_eventi (id_utente integer, id_evento integer, partecipazione_gps integer not null, " +
--                "primary key(id_utente, id_evento), foreign key (id_utente) references utenti(id), " +
--                "foreign key (id_evento) references eventi(id))";
--
--        String eventi_gruppi = "create table eventi_gruppi (id_gruppo integer, id_evento integer, primary key(id_gruppo, id_evento), " +
--                "foreign key (id_gruppo) references gruppi(id), foreign key (id_evento) references eventi(id))";
--
--        String codici = "create table codici (id  INTEGER PRIMARY KEY AUTOINCREMENT, codice integer unique, id_utente integer not null, " +
--                "foreign key (id_utente) references utenti(id))";
--
--        String bluetooth = "create table bluetooth (id_codice integer, id_codice_1 integer, data text, durata_contatto integer not null, distanza integer not null, " +
--                "primary key(id_codice, id_codice_1, data), foreign key (id_codice) references codici(id))";
--
--        db.execSQL(utenti);
--        db.execSQL(amici);
--        db.execSQL(gruppi);
--        db.execSQL(utenti_gruppi);
--        db.execSQL(eventi);
--        db.execSQL(utenti_eventi);
--        db.execSQL (eventi_gruppi);
--        db.execSQL(codici);
--        db.execSQL(bluetooth);
--    }
--
--    @Override
--    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion)
--    { }
--}
-\ No newline at end of file
-Index: app/src/main/java/sql/DbManager.java
-===================================================================
---- app/src/main/java/sql/DbManager.java	(revision 0919cc119003887da34facbe553496a86647b885)
-+++ app/src/main/java/sql/DbManager.java	(revision 0919cc119003887da34facbe553496a86647b885)
-@@ -1,60 +0,0 @@
--package sql;
--
--import android.content.ContentValues;
--import android.content.Context;
--import android.database.Cursor;
--import android.database.sqlite.SQLiteDatabase;
--import android.database.sqlite.SQLiteException;
--
--/*public class DbManager
--{
--    private DBhelper dbhelper;
--    public DbManager(Context ctx)
--    {
--        dbhelper=new DBhelper(ctx);
--    }
--    public void save(String sub, String txt, String date)
--    {
--        SQLiteDatabase db=dbhelper.getWritableDatabase();
--        ContentValues cv=new ContentValues();
--        cv.put(DatabaseStrings.FIELD_SUBJECT, sub);
--        cv.put(DatabaseStrings.FIELD_TEXT, txt);
--        cv.put(DatabaseStrings.FIELD_DATE, date);
--        try
--        {
--            db.insert(DatabaseStrings.TBL_NAME, null,cv);
--        }
--        catch (SQLiteException sqle)
--        {
--// Gestione delle eccezioni
--        }
--    }
--    public boolean delete(long id)
--    {
--        SQLiteDatabase db=dbhelper.getWritableDatabase();
--        try
--        {
--            if (db.delete(DatabaseStrings.TBL_NAME, DatabaseStrings.FIELD_ID+"=?", new String[]{Long.toString(id)})>0)
--                return true;
--            return false;
--        }
--        catch (SQLiteException sqle)
--        {
--            return false;
--        }
--    }
--    public Cursor query()
--    {
--        Cursor crs=null;
--        try
--        {
--            SQLiteDatabase db=dbhelper.getReadableDatabase();
--            crs=db.query(DatabaseStrings.TBL_NAME, null, null, null, null, null, null, null);
--        }
--        catch(SQLiteException sqle)
--        {
--            return null;
--        }
--        return crs;
--    }
--}*/
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_13_15_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_13_15_[Default_Changelist]/shelved.patch	(revision 083a37397929eab6aa567a8d9c85705e992457ec)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_13_15_[Default_Changelist]/shelved.patch	(revision 083a37397929eab6aa567a8d9c85705e992457ec)
@@ -1,32 +0,0 @@
-Index: app/src/main/java/com/example/contagiapp/registrazione/RegistrationActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.contagiapp.registrazione;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.app.DatePickerDialog;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Adapter;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.contagiapp.MainActivity;\r\nimport com.example.contagiapp.R;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.SetOptions;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class RegistrationActivity extends AppCompatActivity implements AdapterView.OnItemSelectedListener {\r\n    private Button signInButton;\r\n    public TextView dataNascita;\r\n    private DatePickerDialog.OnDateSetListener dataDiNascita;\r\n    private static final String TAG = \"RegistrationActivity\";\r\n    // Access a Cloud Firestore instance from your Activity\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_registration);\r\n\r\n\r\n        //Spinner per nazioni\r\n        Spinner spinnerNazioni = findViewById(R.id.spinnerNazioni);\r\n        ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(this, R.array.nazioni, android.R.layout.simple_spinner_dropdown_item);\r\n        adapter.setDropDownViewResource(R.layout.support_simple_spinner_dropdown_item);\r\n        spinnerNazioni.setAdapter(adapter);\r\n        spinnerNazioni.setOnItemSelectedListener(this);\r\n\r\n\r\n        // collegamento button registrati con la mainActivity\r\n        signInButton = (Button) findViewById(R.id.registrati);\r\n        signInButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                openMainActivity();\r\n            }\r\n        });\r\n\r\n        //Date Picker\r\n        dataNascita = (TextView) findViewById(R.id.dataNascita);\r\n        dataNascita.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Calendar cal = Calendar.getInstance();\r\n                int year = cal.get(Calendar.YEAR);\r\n                int month = cal.get(Calendar.MONTH);\r\n                int day = cal.get(Calendar.DAY_OF_MONTH);\r\n\r\n                DatePickerDialog dialog = new DatePickerDialog(\r\n                        RegistrationActivity.this,\r\n                        android.R.style.Theme_Holo_Light_Dialog_MinWidth,\r\n                        dataDiNascita,\r\n                        year, month, day);\r\n                dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n                dialog.show();\r\n            }\r\n        });\r\n\r\n        dataDiNascita = new DatePickerDialog.OnDateSetListener(){\r\n            @Override\r\n            public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\r\n\r\n                Log.d(TAG, \"onDateSet: date: \" + dayOfMonth + \"/\" + month + \"/\" + year);\r\n                String date = dayOfMonth + \"/\" + month+1 + \"/\" + year;\r\n                dataNascita.setText(date);\r\n            }\r\n        };\r\n\r\n\r\n\r\n    }\r\n\r\n    public void openMainActivity(){\r\n        // Create a new user with a first, middle, and last name\r\n        Map<String, Object> user = new HashMap<>();\r\n\r\n        EditText nom = (EditText)findViewById(R.id.editTextTextPersonName3);\r\n        String nome = nom.getText().toString();\r\n        user.put(\"nome\", nome);\r\n\r\n        EditText cogn = (EditText)findViewById(R.id.editTextTextPersonName4);\r\n        String cognome = cogn.getText().toString();\r\n        user.put(\"cognome\", cognome);\r\n        //user.put(\"dataNascita\", dataNascita);\r\n\r\n// Add a new document with a generated ID\r\n        db.collection(\"Utenti\")\r\n        .add(user)\r\n                /*.addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        Log.d(TAG, \"DocumentSnapshot successfully written!\");\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Log.w(TAG, \"Error writing document\", e);\r\n                    }\r\n                })*/;\r\n\r\n\r\n        Intent mainIntent = new Intent(this, MainActivity.class);\r\n        startActivity(mainIntent);\r\n    }\r\n\r\n\r\n    //Spinner per nazioni\r\n    @Override\r\n    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n        String text = parent.getItemAtPosition(position).toString();\r\n        //Toast.makeText(parent.getContext(), text, Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    @Override\r\n    public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/contagiapp/registrazione/RegistrationActivity.java	(revision b68c0a274b0f2b712c57ad8dc4028b57ced45ff5)
-+++ app/src/main/java/com/example/contagiapp/registrazione/RegistrationActivity.java	(date 1611231296459)
-@@ -37,7 +37,7 @@
- 
- public class RegistrationActivity extends AppCompatActivity implements AdapterView.OnItemSelectedListener {
-     private Button signInButton;
--    public TextView dataNascita;
-+    private TextView dataNascita;
-     private DatePickerDialog.OnDateSetListener dataDiNascita;
-     private static final String TAG = "RegistrationActivity";
-     // Access a Cloud Firestore instance from your Activity
-@@ -110,8 +110,11 @@
- 
-         EditText cogn = (EditText)findViewById(R.id.editTextTextPersonName4);
-         String cognome = cogn.getText().toString();
--        user.put("cognome", cognome);
--        //user.put("dataNascita", dataNascita);
-+        user.put("cognome", surm);
-+
-+        TextView data = (TextView) findViewById(R.id.dataNascita);
-+        String dat = data.getText().toString();
-+        user.put("dataNascita", dat);
- 
- // Add a new document with a generated ID
-         db.collection("Utenti")
Index: .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_18_59_[ciao]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_18_59_[ciao]/shelved.patch	(revision 083a37397929eab6aa567a8d9c85705e992457ec)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_18_59_[ciao]/shelved.patch	(revision 083a37397929eab6aa567a8d9c85705e992457ec)
@@ -1,176 +0,0 @@
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_12_34__Default_Changelist_.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_12_34__Default_Changelist_.xml	(date 1611244620387)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_12_34__Default_Changelist_.xml	(date 1611244620387)
-@@ -0,0 +1,4 @@
-+<changelist name="Uncommitted_changes_before_Update_at_21_01_2021_12_34_[Default_Changelist]" date="1611228873509" recycled="true" deleted="true">
-+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_12_34_[Default_Changelist]/shelved.patch" />
-+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 21/01/2021 12:34 [Default Changelist]" />
-+</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_16_01_2021_12_34_[Default_Changelist]/shelved.patch
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_16_01_2021_12_34_[Default_Changelist]/shelved.patch	(date 1610796854002)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_16_01_2021_12_34_[Default_Changelist]/shelved.patch	(date 1610796854002)
-@@ -0,0 +1,60 @@
-+Index: app/src/main/res/layout/fragment_group.xml
-+IDEA additional info:
-+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-+<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".GroupFragment\"\r\n    android:background=\"@color/colorAccent\">\r\n\r\n    <com.google.android.material.textfield.TextInputEditText\r\n        android:id=\"@+id/textInputEditText3\"\r\n        android:layout_width=\"278dp\"\r\n        android:layout_height=\"41dp\"\r\n        android:layout_marginStart=\"24dp\"\r\n        android:layout_marginTop=\"44dp\"\r\n        android:layout_marginEnd=\"16dp\"\r\n        android:hint=\"Cerca\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/imageButton\"\r\n        app:layout_constraintHorizontal_bias=\"0.41\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/imageButton4\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"16dp\"\r\n        android:layout_marginTop=\"37dp\"\r\n        android:layout_marginEnd=\"32dp\"\r\n        android:src=\"@android:drawable/ic_menu_search\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toEndOf=\"@+id/textInputLayout\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
-+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-+<+>UTF-8
-+===================================================================
-+--- app/src/main/res/layout/fragment_group.xml	(revision be5b21a8672dfacc58606f20007d737a5e86dfea)
-++++ app/src/main/res/layout/fragment_group.xml	(date 1610796851884)
-+@@ -4,8 +4,8 @@
-+     xmlns:tools="http://schemas.android.com/tools"
-+     android:layout_width="match_parent"
-+     android:layout_height="match_parent"
-+-    tools:context=".GroupFragment"
-+-    android:background="@color/colorAccent">
-++    android:background="@color/colorAccent"
-++    tools:context=".GroupFragment">
-+ 
-+     <com.google.android.material.textfield.TextInputEditText
-+         android:id="@+id/textInputEditText3"
-+@@ -31,4 +31,17 @@
-+         app:layout_constraintEnd_toEndOf="parent"
-+         app:layout_constraintStart_toEndOf="@+id/textInputLayout"
-+         app:layout_constraintTop_toTopOf="parent" />
-++
-++    <Button
-++        android:id="@+id/VIsualizza_evento"
-++        android:layout_width="wrap_content"
-++        android:layout_height="wrap_content"
-++        android:layout_marginStart="292dp"
-++        android:layout_marginEnd="31dp"
-++        android:text="Visualizza"
-++        app:layout_constraintBottom_toBottomOf="parent"
-++        app:layout_constraintEnd_toEndOf="parent"
-++        app:layout_constraintStart_toStartOf="parent"
-++        app:layout_constraintTop_toTopOf="parent"
-++        app:layout_constraintVertical_bias="0.203" />
-+ </androidx.constraintlayout.widget.ConstraintLayout>
-+\ No newline at end of file
-+Index: app/src/main/java/com/example/contagiapp/GroupSearch.java
-+IDEA additional info:
-+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-+<+>UTF-8
-+===================================================================
-+--- app/src/main/java/com/example/contagiapp/GroupSearch.java	(date 1610796851891)
-++++ app/src/main/java/com/example/contagiapp/GroupSearch.java	(date 1610796851891)
-+@@ -0,0 +1,13 @@
-++package com.example.contagiapp;
-++
-++import android.view.View;
-++
-++public class GroupSearch extends GroupFragment {
-++
-++
-++
-++
-++    }
-++
-++
-++
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_16_01_2021_12_34__Default_Changelist_.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_16_01_2021_12_34__Default_Changelist_.xml	(date 1611244620371)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_16_01_2021_12_34__Default_Changelist_.xml	(date 1611244620371)
-@@ -0,0 +1,4 @@
-+<changelist name="Uncommitted_changes_before_Update_at_16_01_2021_12_34_[Default_Changelist]" date="1610796854789" recycled="true" deleted="true">
-+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_16_01_2021_12_34_[Default_Changelist]/shelved.patch" />
-+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 16/01/2021 12:34 [Default Changelist]" />
-+</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_12_34_[Default_Changelist]/shelved.patch
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_12_34_[Default_Changelist]/shelved.patch	(date 1611228857895)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_12_34_[Default_Changelist]/shelved.patch	(date 1611228857895)
-@@ -0,0 +1,74 @@
-+Index: app/src/main/java/com/example/contagiapp/registrazione/RegistrationActivity.java
-+IDEA additional info:
-+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-+<+>package com.example.contagiapp.registrazione;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.app.DatePickerDialog;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Adapter;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.contagiapp.MainActivity;\r\nimport com.example.contagiapp.R;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.SetOptions;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class RegistrationActivity extends AppCompatActivity implements AdapterView.OnItemSelectedListener {\r\n    private Button signInButton;\r\n    private TextView dataNascita;\r\n    private DatePickerDialog.OnDateSetListener dataDiNascita;\r\n    private static final String TAG = \"RegistrationActivity\";\r\n    // Access a Cloud Firestore instance from your Activity\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_registration);\r\n\r\n\r\n        //Spinner per nazioni\r\n        Spinner spinnerNazioni = findViewById(R.id.spinnerNazioni);\r\n        ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(this, R.array.nazioni, android.R.layout.simple_spinner_dropdown_item);\r\n        adapter.setDropDownViewResource(R.layout.support_simple_spinner_dropdown_item);\r\n        spinnerNazioni.setAdapter(adapter);\r\n        spinnerNazioni.setOnItemSelectedListener(this);\r\n\r\n\r\n        // collegamento button registrati con la mainActivity\r\n        signInButton = (Button) findViewById(R.id.registrati);\r\n        signInButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                openMainActivity();\r\n            }\r\n        });\r\n\r\n        //Date Picker\r\n        dataNascita = (TextView) findViewById(R.id.dataNascita);\r\n        dataNascita.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Calendar cal = Calendar.getInstance();\r\n                int year = cal.get(Calendar.YEAR);\r\n                int month = cal.get(Calendar.MONTH);\r\n                int day = cal.get(Calendar.DAY_OF_MONTH);\r\n\r\n                DatePickerDialog dialog = new DatePickerDialog(\r\n                        RegistrationActivity.this,\r\n                        android.R.style.Theme_Holo_Light_Dialog_MinWidth,\r\n                        dataDiNascita,\r\n                        year, month, day);\r\n                dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n                dialog.show();\r\n            }\r\n        });\r\n\r\n        dataDiNascita = new DatePickerDialog.OnDateSetListener(){\r\n            @Override\r\n            public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\r\n\r\n                Log.d(TAG, \"onDateSet: date: \" + dayOfMonth + \"/\" + month + \"/\" + year);\r\n                String date = dayOfMonth + \"/\" + month+1 + \"/\" + year;\r\n                dataNascita.setText(date);\r\n            }\r\n        };\r\n\r\n\r\n\r\n    }\r\n\r\n    public void openMainActivity(){\r\n        // Create a new user with a first, middle, and last name\r\n        Map<String, Object> user = new HashMap<>();\r\n        user.put(\"nome\", \"Alan\");\r\n        user.put(\"cognome\", \"Mathison\");\r\n        user.put(\"last\", \"Turing\");\r\n        user.put(\"born\", 1912);\r\n\r\n// Add a new document with a generated ID\r\n        db.collection(\"Utenti\").document(\"3\")\r\n        .set(user, SetOptions.merge());\r\n               /* .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        Log.d(TAG, \"DocumentSnapshot successfully written!\");\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Log.w(TAG, \"Error writing document\", e);\r\n                    }\r\n                });*/\r\n\r\n\r\n        Intent mainIntent = new Intent(this, MainActivity.class);\r\n        startActivity(mainIntent);\r\n    }\r\n\r\n\r\n    //Spinner per nazioni\r\n    @Override\r\n    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n        String text = parent.getItemAtPosition(position).toString();\r\n        //Toast.makeText(parent.getContext(), text, Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    @Override\r\n    public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n    }\r\n}
-+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-+<+>UTF-8
-+===================================================================
-+--- app/src/main/java/com/example/contagiapp/registrazione/RegistrationActivity.java	(revision a6d59ef0a0e4e3d56815c2eddd6552d8b801464d)
-++++ app/src/main/java/com/example/contagiapp/registrazione/RegistrationActivity.java	(date 1611228540176)
-+@@ -103,15 +103,15 @@
-+     public void openMainActivity(){
-+         // Create a new user with a first, middle, and last name
-+         Map<String, Object> user = new HashMap<>();
-+-        user.put("nome", "Alan");
-+-        user.put("cognome", "Mathison");
-++        user.put("Nome", "Alan");
-++        user.put("Cognome", "Mathison");
-+         user.put("last", "Turing");
-+         user.put("born", 1912);
-+ 
-+ // Add a new document with a generated ID
-+         db.collection("Utenti").document("3")
-+-        .set(user, SetOptions.merge());
-+-               /* .addOnSuccessListener(new OnSuccessListener<Void>() {
-++        .set(user, SetOptions.merge())
-++               .addOnSuccessListener(new OnSuccessListener<Void>() {
-+                     @Override
-+                     public void onSuccess(Void aVoid) {
-+                         Log.d(TAG, "DocumentSnapshot successfully written!");
-+@@ -122,7 +122,7 @@
-+                     public void onFailure(@NonNull Exception e) {
-+                         Log.w(TAG, "Error writing document", e);
-+                     }
-+-                });*/
-++                });
-+ 
-+ 
-+         Intent mainIntent = new Intent(this, MainActivity.class);
-+Index: build.gradle
-+IDEA additional info:
-+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-+<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\n\r\nbuildscript {\r\n    \r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        \r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:4.1.1'\r\n        classpath 'com.google.gms:google-services:4.3.4'\r\n\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\n\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        \r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}\r\n
-+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-+<+>UTF-8
-+===================================================================
-+--- build.gradle	(revision a6d59ef0a0e4e3d56815c2eddd6552d8b801464d)
-++++ build.gradle	(date 1611228340506)
-+@@ -8,7 +8,7 @@
-+         
-+     }
-+     dependencies {
-+-        classpath 'com.android.tools.build:gradle:4.1.1'
-++        classpath 'com.android.tools.build:gradle:4.1.2'
-+         classpath 'com.google.gms:google-services:4.3.4'
-+ 
-+         // NOTE: Do not place your application dependencies here; they belong
-+Index: gradle/wrapper/gradle-wrapper.properties
-+IDEA additional info:
-+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-+<+>#Sun Jan 17 17:57:18 CET 2021\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-6.5-bin.zip\r\n
-+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-+<+>windows-1252
-+===================================================================
-+--- gradle/wrapper/gradle-wrapper.properties	(revision a6d59ef0a0e4e3d56815c2eddd6552d8b801464d)
-++++ gradle/wrapper/gradle-wrapper.properties	(date 1611228082942)
-+@@ -1,6 +1,6 @@
-+-#Sun Jan 17 17:57:18 CET 2021
-++#Thu Jan 21 12:21:22 CET 2021
-+ distributionBase=GRADLE_USER_HOME
-+ distributionPath=wrapper/dists
-+ zipStoreBase=GRADLE_USER_HOME
-+ zipStorePath=wrapper/dists
-+-distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-bin.zip
-++distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-all.zip
Index: .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_12_34__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_12_34__Default_Changelist_.xml	(revision 083a37397929eab6aa567a8d9c85705e992457ec)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_12_34__Default_Changelist_.xml	(revision 083a37397929eab6aa567a8d9c85705e992457ec)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_21_01_2021_12_34_[Default_Changelist]" date="1611228873509" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_12_34_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 21/01/2021 12:34 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_13_15__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_13_15__Default_Changelist_.xml	(revision 083a37397929eab6aa567a8d9c85705e992457ec)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_13_15__Default_Changelist_.xml	(revision 083a37397929eab6aa567a8d9c85705e992457ec)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_21_01_2021_13_15_[Default_Changelist]" date="1611231313135" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_13_15_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 21/01/2021 13:15 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_18_59__ciao_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_18_59__ciao_.xml	(revision 083a37397929eab6aa567a8d9c85705e992457ec)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_18_59__ciao_.xml	(revision 083a37397929eab6aa567a8d9c85705e992457ec)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_21_01_2021_18_59_[ciao]" date="1611251954423" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_18_59_[ciao]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 21/01/2021 18:59 [ciao]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Reset_at_21_01_2021_18_33__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Reset_at_21_01_2021_18_33__Default_Changelist_.xml	(revision 083a37397929eab6aa567a8d9c85705e992457ec)
+++ .idea/shelf/Uncommitted_changes_before_Reset_at_21_01_2021_18_33__Default_Changelist_.xml	(revision 083a37397929eab6aa567a8d9c85705e992457ec)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Reset_at_21_01_2021_18_33_[Default_Changelist]" date="1611250420202" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Reset_at_21_01_2021_18_33_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Reset at 21/01/2021 18:33 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_12_34_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_12_34_[Default_Changelist]/shelved.patch	(revision 083a37397929eab6aa567a8d9c85705e992457ec)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_12_34_[Default_Changelist]/shelved.patch	(revision 083a37397929eab6aa567a8d9c85705e992457ec)
@@ -1,74 +0,0 @@
-Index: app/src/main/java/com/example/contagiapp/registrazione/RegistrationActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.contagiapp.registrazione;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.app.DatePickerDialog;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Adapter;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.contagiapp.MainActivity;\r\nimport com.example.contagiapp.R;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.SetOptions;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class RegistrationActivity extends AppCompatActivity implements AdapterView.OnItemSelectedListener {\r\n    private Button signInButton;\r\n    private TextView dataNascita;\r\n    private DatePickerDialog.OnDateSetListener dataDiNascita;\r\n    private static final String TAG = \"RegistrationActivity\";\r\n    // Access a Cloud Firestore instance from your Activity\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_registration);\r\n\r\n\r\n        //Spinner per nazioni\r\n        Spinner spinnerNazioni = findViewById(R.id.spinnerNazioni);\r\n        ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(this, R.array.nazioni, android.R.layout.simple_spinner_dropdown_item);\r\n        adapter.setDropDownViewResource(R.layout.support_simple_spinner_dropdown_item);\r\n        spinnerNazioni.setAdapter(adapter);\r\n        spinnerNazioni.setOnItemSelectedListener(this);\r\n\r\n\r\n        // collegamento button registrati con la mainActivity\r\n        signInButton = (Button) findViewById(R.id.registrati);\r\n        signInButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                openMainActivity();\r\n            }\r\n        });\r\n\r\n        //Date Picker\r\n        dataNascita = (TextView) findViewById(R.id.dataNascita);\r\n        dataNascita.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Calendar cal = Calendar.getInstance();\r\n                int year = cal.get(Calendar.YEAR);\r\n                int month = cal.get(Calendar.MONTH);\r\n                int day = cal.get(Calendar.DAY_OF_MONTH);\r\n\r\n                DatePickerDialog dialog = new DatePickerDialog(\r\n                        RegistrationActivity.this,\r\n                        android.R.style.Theme_Holo_Light_Dialog_MinWidth,\r\n                        dataDiNascita,\r\n                        year, month, day);\r\n                dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n                dialog.show();\r\n            }\r\n        });\r\n\r\n        dataDiNascita = new DatePickerDialog.OnDateSetListener(){\r\n            @Override\r\n            public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\r\n\r\n                Log.d(TAG, \"onDateSet: date: \" + dayOfMonth + \"/\" + month + \"/\" + year);\r\n                String date = dayOfMonth + \"/\" + month+1 + \"/\" + year;\r\n                dataNascita.setText(date);\r\n            }\r\n        };\r\n\r\n\r\n\r\n    }\r\n\r\n    public void openMainActivity(){\r\n        // Create a new user with a first, middle, and last name\r\n        Map<String, Object> user = new HashMap<>();\r\n        user.put(\"nome\", \"Alan\");\r\n        user.put(\"cognome\", \"Mathison\");\r\n        user.put(\"last\", \"Turing\");\r\n        user.put(\"born\", 1912);\r\n\r\n// Add a new document with a generated ID\r\n        db.collection(\"Utenti\").document(\"3\")\r\n        .set(user, SetOptions.merge());\r\n               /* .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        Log.d(TAG, \"DocumentSnapshot successfully written!\");\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Log.w(TAG, \"Error writing document\", e);\r\n                    }\r\n                });*/\r\n\r\n\r\n        Intent mainIntent = new Intent(this, MainActivity.class);\r\n        startActivity(mainIntent);\r\n    }\r\n\r\n\r\n    //Spinner per nazioni\r\n    @Override\r\n    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n        String text = parent.getItemAtPosition(position).toString();\r\n        //Toast.makeText(parent.getContext(), text, Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    @Override\r\n    public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/contagiapp/registrazione/RegistrationActivity.java	(revision a6d59ef0a0e4e3d56815c2eddd6552d8b801464d)
-+++ app/src/main/java/com/example/contagiapp/registrazione/RegistrationActivity.java	(date 1611228540176)
-@@ -103,15 +103,15 @@
-     public void openMainActivity(){
-         // Create a new user with a first, middle, and last name
-         Map<String, Object> user = new HashMap<>();
--        user.put("nome", "Alan");
--        user.put("cognome", "Mathison");
-+        user.put("Nome", "Alan");
-+        user.put("Cognome", "Mathison");
-         user.put("last", "Turing");
-         user.put("born", 1912);
- 
- // Add a new document with a generated ID
-         db.collection("Utenti").document("3")
--        .set(user, SetOptions.merge());
--               /* .addOnSuccessListener(new OnSuccessListener<Void>() {
-+        .set(user, SetOptions.merge())
-+               .addOnSuccessListener(new OnSuccessListener<Void>() {
-                     @Override
-                     public void onSuccess(Void aVoid) {
-                         Log.d(TAG, "DocumentSnapshot successfully written!");
-@@ -122,7 +122,7 @@
-                     public void onFailure(@NonNull Exception e) {
-                         Log.w(TAG, "Error writing document", e);
-                     }
--                });*/
-+                });
- 
- 
-         Intent mainIntent = new Intent(this, MainActivity.class);
-Index: build.gradle
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\n\r\nbuildscript {\r\n    \r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        \r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:4.1.1'\r\n        classpath 'com.google.gms:google-services:4.3.4'\r\n\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\n\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        \r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- build.gradle	(revision a6d59ef0a0e4e3d56815c2eddd6552d8b801464d)
-+++ build.gradle	(date 1611228340506)
-@@ -8,7 +8,7 @@
-         
-     }
-     dependencies {
--        classpath 'com.android.tools.build:gradle:4.1.1'
-+        classpath 'com.android.tools.build:gradle:4.1.2'
-         classpath 'com.google.gms:google-services:4.3.4'
- 
-         // NOTE: Do not place your application dependencies here; they belong
-Index: gradle/wrapper/gradle-wrapper.properties
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>#Sun Jan 17 17:57:18 CET 2021\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-6.5-bin.zip\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>windows-1252
-===================================================================
---- gradle/wrapper/gradle-wrapper.properties	(revision a6d59ef0a0e4e3d56815c2eddd6552d8b801464d)
-+++ gradle/wrapper/gradle-wrapper.properties	(date 1611228082942)
-@@ -1,6 +1,6 @@
--#Sun Jan 17 17:57:18 CET 2021
-+#Thu Jan 21 12:21:22 CET 2021
- distributionBase=GRADLE_USER_HOME
- distributionPath=wrapper/dists
- zipStoreBase=GRADLE_USER_HOME
- zipStorePath=wrapper/dists
--distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-bin.zip
-+distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-all.zip
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.example.contagiapp\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\"/>\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\">\r\n\r\n        <!--<uses-library android:name=\"com.google.android.maps\" />-->\r\n        <meta-data android:name=\"com.google.android.geo.API_KEY\" android:value=\"your API key\"/>\r\n\r\n        <activity android:name=\".utente.ProfiloActivity\" />\r\n        <activity\r\n            android:name=\".registrazione.RegistrationActivity\"\r\n            android:parentActivityName=\".WelcomeActivity\"/>\r\n        <activity\r\n            android:name=\".ui.login.LoginActivity\"\r\n            android:parentActivityName=\".WelcomeActivity\" />\r\n        <activity\r\n            android:name=\".LaunchScreenActivity\"\r\n            android:theme=\"@style/NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".WelcomeActivity\"\r\n            android:theme=\"@style/NoActionBar\" />\r\n        <activity android:name=\".MainActivity\" />\r\n        <activity android:name=\".eventi.NewEventsFragment\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.NewEventsFragment\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".gruppi.GroupSearch\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.GroupSearch\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".gruppi.GroupAdd\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.GroupAdd\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".data.amici.FriendProfile\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.FriendProfile\" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 083a37397929eab6aa567a8d9c85705e992457ec)
+++ app/src/main/AndroidManifest.xml	(date 1611915647689)
@@ -4,8 +4,9 @@
     package="com.example.contagiapp">
 
     <uses-permission android:name="android.permission.INTERNET" />
+    <!--per google maps
     <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
-    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
+    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>-->
 
     <application
         android:allowBackup="true"
@@ -15,9 +16,6 @@
         android:supportsRtl="true"
         android:theme="@style/AppTheme">
 
-        <!--<uses-library android:name="com.google.android.maps" />-->
-        <meta-data android:name="com.google.android.geo.API_KEY" android:value="your API key"/>
-
         <activity android:name=".utente.ProfiloActivity" />
         <activity
             android:name=".registrazione.RegistrationActivity"
Index: app/src/main/res/layout/activity_profilo_evento.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <ScrollView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\" >\r\n\r\n            <TextView\r\n                android:id=\"@+id/nome_evento\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"TextView\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/num_max_partecipanti\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"TextView\" />\r\n        </LinearLayout>\r\n    </ScrollView>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/data_evento\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"TextView\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/nazione_evento\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"TextView\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/citta_evento\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"TextView\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/luogo_evento\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"TextView\" />\r\n    </LinearLayout>\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_profilo_evento.xml	(revision 083a37397929eab6aa567a8d9c85705e992457ec)
+++ app/src/main/res/layout/activity_profilo_evento.xml	(date 1611854514538)
@@ -23,36 +23,31 @@
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
                 android:text="TextView" />
-        </LinearLayout>
-    </ScrollView>
-
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:orientation="vertical">
 
-        <TextView
-            android:id="@+id/data_evento"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:text="TextView" />
+            <TextView
+                android:id="@+id/data_evento"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="TextView" />
 
-        <TextView
-            android:id="@+id/nazione_evento"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:text="TextView" />
+            <TextView
+                android:id="@+id/nazione_evento"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="TextView" />
 
-        <TextView
-            android:id="@+id/citta_evento"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:text="TextView" />
+            <TextView
+                android:id="@+id/citta_evento"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="TextView" />
 
-        <TextView
-            android:id="@+id/luogo_evento"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:text="TextView" />
-    </LinearLayout>
+            <TextView
+                android:id="@+id/luogo_evento"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="TextView" />
+        </LinearLayout>
+    </ScrollView>
+
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_27_01_2021_12_00__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_27_01_2021_12_00__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_22_01_2021_18_33__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_22_01_2021_18_33__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_27_01_2021_18_22__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_27_01_2021_18_22__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_26_01_2021_19_22__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_26_01_2021_19_22__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_24_01_2021_16_53__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_24_01_2021_16_53__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_27_01_2021_16_45__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_27_01_2021_16_45__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_27_01_2021_23_09__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_27_01_2021_23_09__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_27_01_2021_12_10__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_27_01_2021_12_10__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_27_01_2021_10_57__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_27_01_2021_10_57__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_14_01_2021_20_23__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_14_01_2021_20_23__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_23_01_2021_17_20__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_23_01_2021_17_20__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_23_01_2021_12_48__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_23_01_2021_12_48__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_23_01_2021_16_33__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_23_01_2021_16_33__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_23_01_2021_12_48__controllo_sulle_psw_ora_funzia_pure.xml .idea/shelf/Uncommitted_changes_before_Update_at_23_01_2021_12_48__controllo_sulle_psw_ora_funzia_pure.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_24_01_2021_10_31__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_24_01_2021_10_31__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_23_01_2021_11_24__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_23_01_2021_11_24__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_23_01_2021_12_44__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_23_01_2021_12_44__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_rebase__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_rebase__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_24_01_2021_19_06__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_24_01_2021_19_06__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_23_01_2021_11_20__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_23_01_2021_11_20__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_23_01_2021_10_24__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_23_01_2021_10_24__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_24_01_2021_18_04__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_24_01_2021_18_04__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_22_01_2021_18_06__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_22_01_2021_18_06__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_28_01_2021_12_42__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_28_01_2021_12_42__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_28_01_2021_13_29__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_28_01_2021_13_29__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_22_01_2021_17_38__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_22_01_2021_17_38__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_23_01_2021_12_39__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_23_01_2021_12_39__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_23_01_2021_23_48__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_23_01_2021_23_48__Default_Changelist_.xml
