Index: app/src/main/java/com/example/contagiapp/ui/login/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.contagiapp.ui.login;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.StringRes;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.contagiapp.MainActivity;\r\nimport com.example.contagiapp.R;\r\nimport com.example.contagiapp.WelcomeActivity;\r\nimport com.example.contagiapp.registrazione.RegistrationActivity;\r\nimport com.example.contagiapp.utente.Utente;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.textfield.TextInputEditText;\r\nimport com.google.android.material.textfield.TextInputLayout;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.gson.Gson;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.io.OutputStream;\r\nimport java.io.OutputStreamWriter;\r\n\r\npublic class LoginActivity extends AppCompatActivity {\r\n\r\n    private static final String TAG =\"LoginActivity\";\r\n    private LoginViewModel loginViewModel;\r\n    private TextInputEditText mailEditText;\r\n    private TextInputEditText passwordEditText;\r\n    private TextInputLayout mailTextLayout;\r\n    private TextInputLayout passwordTextLayout;\r\n    private boolean ricord;\r\n    private FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n        loginViewModel = new ViewModelProvider(this, new LoginViewModelFactory())\r\n                .get(LoginViewModel.class);\r\n\r\n        mailEditText = findViewById(R.id.mail);\r\n        passwordEditText = findViewById(R.id.password);\r\n        mailTextLayout = findViewById(R.id.textFieldMail);\r\n        passwordTextLayout = findViewById(R.id.textFieldPassword);\r\n\r\n        final Button loginButton = findViewById(R.id.login);\r\n        final Button createAccountButton = findViewById(R.id.createAccount);\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n\r\n        loginButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                if(controlloTextFieldVuoto(mailEditText, passwordEditText) == 0){\r\n                    mailTextLayout.setError(null);\r\n                    passwordTextLayout.setError(null);\r\n                    CheckBox ricordami = (CheckBox) findViewById(R.id.checkBox);\r\n                    ricord = ricordami.isChecked();\r\n                    openMain();\r\n                }\r\n            }\r\n        });\r\n\r\n        createAccountButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                openRegistration();\r\n            }\r\n        });\r\n    }\r\n\r\n    private int controlloTextFieldVuoto(TextInputEditText mailEditText, TextInputEditText passwordEditText){\r\n\r\n        if(isEmpty(mailEditText) == true && isEmpty(passwordEditText) == false ){\r\n            mailTextLayout.setError(\"Inserisci mail\");\r\n            passwordTextLayout.setError(null);\r\n            return 1;\r\n        }\r\n\r\n        if(isEmpty(passwordEditText) == true && isEmpty(mailEditText) == false){\r\n            passwordTextLayout.setError(\"Inserisci password\");\r\n            mailTextLayout.setError(null);\r\n            return 2;\r\n        }else\r\n            passwordTextLayout.setError(null);\r\n\r\n        if(isEmpty(mailEditText) && isEmpty(passwordEditText) == true){\r\n            mailTextLayout.setError(\"Inserisci mail\");\r\n            passwordTextLayout.setError(\"Inserisci password\");\r\n            return 3;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    private boolean isEmpty(TextInputEditText etText) {\r\n        if(etText.getText().toString().length() > 0)\r\n            return false;\r\n        return true;\r\n    }\r\n\r\n    private void updateUiWithUser(LoggedInUserView model) {\r\n        String welcome = getString(R.string.welcome) + model.getDisplayName();\r\n        // TODO : initiate successful logged in experience\r\n        Toast.makeText(getApplicationContext(), welcome, Toast.LENGTH_LONG).show();\r\n    }\r\n\r\n    private void showLoginFailed(@StringRes Integer errorString) {\r\n        Toast.makeText(getApplicationContext(), errorString, Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n\r\n    public void openMain(){\r\n        final String username = mailEditText.getText().toString();\r\n        final String password = passwordEditText.getText().toString();\r\n\r\n        //utente gi√† registrato?\r\n        db.collection(\"Utenti\").whereEqualTo(\"mail\", username).whereEqualTo(\"password\",password)\r\n                .get().addOnSuccessListener(new OnSuccessListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onSuccess(QuerySnapshot querySnapshots) {\r\n                if(querySnapshots.isEmpty()) {\r\n                    Toast.makeText(getApplicationContext(), \"Mail o password errati\", Toast.LENGTH_SHORT).show();\r\n                } else {\r\n                    //checkbox ricordami\r\n                    if(ricord) {\r\n                        db.collection(\"Utenti\").whereEqualTo(\"mail\", username).whereEqualTo(\"password\",password)\r\n                                .get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                            @Override\r\n                            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                                if (task.isSuccessful()) {\r\n                                    for (QueryDocumentSnapshot document : task.getResult()) {\r\n                                        Utente utente = document.toObject(Utente.class);\r\n\r\n                                        SharedPreferences prefs = getApplicationContext().getSharedPreferences(\"Login\", MODE_PRIVATE);\r\n                                        SharedPreferences.Editor editor = prefs.edit();\r\n                                        Gson gson = new Gson();\r\n                                        String json = gson.toJson(utente);\r\n                                        editor.putString(\"utente\", json);\r\n                                        editor.commit ();\r\n                                    }\r\n                                } else {\r\n                                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                                }\r\n                            }\r\n                        });\r\n                    } else {\r\n                        SharedPreferences prefs = getApplicationContext().getSharedPreferences(\"LoginTemporaneo\", MODE_PRIVATE);\r\n                        SharedPreferences.Editor editor = prefs.edit();\r\n                        editor.putString(\"mail\", username);\r\n                        editor.commit ();\r\n                    }\r\n                    Intent mainIntent = new Intent(LoginActivity.this, MainActivity.class);\r\n                    startActivity(mainIntent);\r\n                    finish();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public void openRegistration(){\r\n        Intent signUpIntent = new Intent(this, RegistrationActivity.class);\r\n        startActivity(signUpIntent);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/contagiapp/ui/login/LoginActivity.java	(revision d6fc8831346e0dc00973800390dc2c7b54150366)
+++ app/src/main/java/com/example/contagiapp/ui/login/LoginActivity.java	(date 1634572687167)
@@ -159,6 +159,9 @@
                                         String json = gson.toJson(utente);
                                         editor.putString("utente", json);
                                         editor.commit ();
+                                        Intent mainIntent = new Intent(LoginActivity.this, MainActivity.class);
+                                        startActivity(mainIntent);
+                                        finish();
                                     }
                                 } else {
                                     Log.d(TAG, "Error getting documents: ", task.getException());
@@ -170,10 +173,10 @@
                         SharedPreferences.Editor editor = prefs.edit();
                         editor.putString("mail", username);
                         editor.commit ();
-                    }
-                    Intent mainIntent = new Intent(LoginActivity.this, MainActivity.class);
-                    startActivity(mainIntent);
-                    finish();
+                        Intent mainIntent = new Intent(LoginActivity.this, MainActivity.class);
+                        startActivity(mainIntent);
+                        finish();
+                    }
                 }
             }
         });
Index: app/src/main/java/com/example/contagiapp/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.contagiapp;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBar;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\n\r\nimport android.Manifest;\r\nimport android.bluetooth.BluetoothAdapter;\r\nimport android.bluetooth.BluetoothManager;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Color;\r\nimport android.graphics.PorterDuff;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.provider.Settings;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.WindowManager;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.contagiapp.data.amici.FriendsFragment;\r\nimport com.example.contagiapp.eventi.EventsFragment;\r\nimport com.example.contagiapp.gruppi.GroupFragment;\r\nimport com.example.contagiapp.impostazioni.SettingActivity;\r\nimport com.example.contagiapp.notifiche.NotifyFragment;\r\nimport com.example.contagiapp.utente.ProfiloActivity;\r\nimport com.example.contagiapp.utente.Utente;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.gson.Gson;\r\nimport com.karumi.dexter.Dexter;\r\nimport com.karumi.dexter.PermissionToken;\r\nimport com.karumi.dexter.listener.PermissionDeniedResponse;\r\nimport com.karumi.dexter.listener.PermissionGrantedResponse;\r\nimport com.karumi.dexter.listener.PermissionRequest;\r\nimport com.karumi.dexter.listener.single.PermissionListener;\r\n\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    private static final int PERMISSION_CODE = 0;\r\n    private static final int REQUEST_ENABLE_BT = 1;\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    String stato;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        checkMyPermission();\r\n        checkMyBL();\r\n\r\n        // Tiene lo schermo acceso\r\n        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);\r\n\r\n        /*\r\n        final BluetoothManager bluetoothManager = (BluetoothManager)getSystemService(Context.BLUETOOTH_SERVICE);\r\n        BluetoothAdapter bluetoothAdapter = bluetoothManager.getAdapter();\r\n\r\n\r\n        if (!bluetoothAdapter.isEnabled()) {\r\n            Intent enableBtIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);\r\n            startActivityForResult(enableBtIntent, REQUEST_ENABLE_BT);\r\n            Toast.makeText(this,\"schifoso il signore\",Toast.LENGTH_SHORT).show();\r\n        }\r\n\r\n         */\r\n\r\n        BottomNavigationView bottomNavigationView = findViewById(R.id.bottomNav);\r\n\r\n        bottomNavigationView.setOnNavigationItemSelectedListener(bottomNavMethod);\r\n        getSupportFragmentManager().beginTransaction().replace(R.id.container, new HomeFragment()).commit();\r\n\r\n        getSupportFragmentManager().addOnBackStackChangedListener(new FragmentManager.OnBackStackChangedListener() {\r\n            @Override\r\n            public void onBackStackChanged() {\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    //per bluetooth\r\n    private void checkMyBL(){\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\r\n            if (ContextCompat.checkSelfPermission(this,\r\n                    Manifest.permission.ACCESS_BACKGROUND_LOCATION)\r\n                    != PackageManager.PERMISSION_GRANTED) {\r\n                ActivityCompat.requestPermissions(\r\n                        MainActivity.this,\r\n                        new String[]{Manifest.permission.ACCESS_BACKGROUND_LOCATION},PERMISSION_CODE\r\n                        );\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    //per gps\r\n    private void checkMyPermission(){\r\n        Dexter.withActivity(this).withPermission(Manifest.permission.ACCESS_FINE_LOCATION).withListener(new PermissionListener() {\r\n            @Override\r\n            public void onPermissionGranted(PermissionGrantedResponse response) {\r\n                Toast.makeText(MainActivity.this, \"Permesso gps concesso\", Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            @Override\r\n            public void onPermissionDenied(PermissionDeniedResponse response) {\r\n                Intent intent = new Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS,\r\n                        Uri.fromParts(\"package\", getPackageName(), null));\r\n                startActivity(intent);\r\n            }\r\n\r\n            @Override\r\n            public void onPermissionRationaleShouldBeShown(PermissionRequest permission, PermissionToken token) {\r\n                token.continuePermissionRequest();\r\n            }\r\n        }).check();\r\n    }\r\n\r\n\r\n    //per aggiungere menu sulla actionBar\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.menu, menu);\r\n\r\n        SharedPreferences prefs = getApplicationContext().getSharedPreferences(\"Login\", MODE_PRIVATE);\r\n        Gson gson = new Gson();\r\n        String json = prefs.getString(\"utente\", \"no\");\r\n        Utente utente;\r\n\r\n        if(!json.equals(\"no\")) {\r\n            utente = gson.fromJson(json, Utente.class);\r\n            stato = utente.getStato();\r\n        } else {\r\n            SharedPreferences prefs1 = getApplicationContext().getSharedPreferences(\"LoginTemporaneo\", MODE_PRIVATE);\r\n            String username = prefs1.getString(\"mail\", \"no\");\r\n            Log.d(\"username\", String.valueOf(username));\r\n\r\n            db.collection(\"Utenti\")\r\n                    .document(username)\r\n                    .get()\r\n                    .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                        @Override\r\n                        public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                            stato = documentSnapshot.getString(\"stato\");\r\n                        }\r\n                    });\r\n        }\r\n\r\n        Drawable draw = menu.getItem(0).getIcon();\r\n        draw.mutate();\r\n\r\n        draw.setColorFilter(Color.GRAY, PorterDuff.Mode.SRC_IN);\r\n        if(stato.equals(\"rosso\")) draw.setColorFilter(Color.RED, PorterDuff.Mode.SRC_IN);\r\n        if(stato.equals(\"verde\")) draw.setColorFilter(Color.GREEN, PorterDuff.Mode.SRC_IN);\r\n        if(stato.equals(\"arancione\")) draw.setColorFilter(Color.rgb(255, 165, 0), PorterDuff.Mode.SRC_IN);\r\n        if(stato.equals(\"giallo\")) draw.setColorFilter(Color.YELLOW, PorterDuff.Mode.SRC_IN);\r\n\r\n        return super.onCreateOptionsMenu(menu);\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\r\n        int id = item.getItemId();\r\n\r\n\r\n        if(id == R.id.nav_setting){\r\n            //getSupportFragmentManager().beginTransaction().replace(R.id.container, SettingFragment).commit();\r\n            Intent settingIntent = new Intent(this, SettingActivity.class);\r\n            startActivity(settingIntent);\r\n        }\r\n\r\n        if(id == R.id.nav_account){\r\n            Intent profiloIntent = new Intent(this, ProfiloActivity.class);\r\n            startActivity(profiloIntent);\r\n        }\r\n\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    //Per ottenere la barra di navigazione in basso\r\n    private BottomNavigationView.OnNavigationItemSelectedListener bottomNavMethod = new\r\n            BottomNavigationView.OnNavigationItemSelectedListener() {\r\n                @Override\r\n                public boolean onNavigationItemSelected(@NonNull MenuItem menuitem) {\r\n\r\n                    Fragment fragment=null;\r\n\r\n                    switch (menuitem.getItemId())\r\n                    {\r\n                        case R.id.nav_group:\r\n                            fragment = new GroupFragment();\r\n                            break;\r\n\r\n                        case R.id.nav_home:\r\n                            fragment = new HomeFragment();\r\n                            break;\r\n\r\n                        case R.id.nav_notify:\r\n                            fragment = new NotifyFragment();\r\n                            break;\r\n\r\n                        case R.id.nav_events:\r\n                            fragment = new EventsFragment();\r\n                            break;\r\n\r\n                        case R.id.nav_friends:\r\n                            fragment = new FriendsFragment();\r\n                            break;\r\n\r\n                    }\r\n                    getSupportFragmentManager().beginTransaction().replace(R.id.container, fragment).commit();\r\n                    return true;\r\n                }\r\n            };\r\n\r\n\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/contagiapp/MainActivity.java	(revision d6fc8831346e0dc00973800390dc2c7b54150366)
+++ app/src/main/java/com/example/contagiapp/MainActivity.java	(date 1634574183045)
@@ -36,10 +36,14 @@
 import com.example.contagiapp.notifiche.NotifyFragment;
 import com.example.contagiapp.utente.ProfiloActivity;
 import com.example.contagiapp.utente.Utente;
+import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.OnSuccessListener;
+import com.google.android.gms.tasks.Task;
 import com.google.android.material.bottomnavigation.BottomNavigationView;
 import com.google.firebase.firestore.DocumentSnapshot;
 import com.google.firebase.firestore.FirebaseFirestore;
+import com.google.firebase.firestore.QueryDocumentSnapshot;
+import com.google.firebase.firestore.QuerySnapshot;
 import com.google.gson.Gson;
 import com.karumi.dexter.Dexter;
 import com.karumi.dexter.PermissionToken;
@@ -53,7 +57,7 @@
 
     private static final int PERMISSION_CODE = 0;
     private static final int REQUEST_ENABLE_BT = 1;
-    FirebaseFirestore db = FirebaseFirestore.getInstance();
+    private FirebaseFirestore db = FirebaseFirestore.getInstance();
     String stato;
 
     @Override
@@ -148,15 +152,30 @@
         } else {
             SharedPreferences prefs1 = getApplicationContext().getSharedPreferences("LoginTemporaneo", MODE_PRIVATE);
             String username = prefs1.getString("mail", "no");
-            Log.d("username", String.valueOf(username));
+            //Log.d("username", username);
 
-            db.collection("Utenti")
-                    .document(username)
-                    .get()
-                    .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {
-                        @Override
-                        public void onSuccess(DocumentSnapshot documentSnapshot) {
-                            stato = documentSnapshot.getString("stato");
+            do {
+                db.collection("Utenti")
+                        .document(username)
+                        .get()
+                        .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {
+                            @Override
+                            public void onSuccess(DocumentSnapshot documentSnapshot) {
+                                stato = documentSnapshot.getString("stato");
+                                Log.d("stato", stato);
+                            }
+                        });
+            } while(stato == null);
+
+            db.collection("Utenti").whereEqualTo("mailPath", utente.getMail()).get()
+                    .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
+                        @Override
+                        public void onComplete(@NonNull Task<QuerySnapshot> task) {
+                            if(task.isSuccessful()) {
+                                for (QueryDocumentSnapshot document : task.getResult()) {
+                                    utente = document.toObject(Utente.class);
+                                }
+                            }
                         }
                     });
         }
Index: app/src/main/java/com/example/contagiapp/HomeFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.contagiapp;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.res.ColorStateList;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.contagiapp.eventi.EventsFragment;\r\nimport com.example.contagiapp.eventi.NewEventsActivity;\r\nimport com.example.contagiapp.utente.Utente;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.material.button.MaterialButton;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.gson.Gson;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\n\r\nimport es.dmoral.toasty.Toasty;\r\n\r\nimport static com.example.contagiapp.R.color.cardview_shadow_end_color;\r\nimport static com.example.contagiapp.R.color.quantum_yellow;\r\n\r\npublic class HomeFragment extends Fragment {\r\n\r\n    private FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private LinearLayout status;\r\n    private MaterialButton btnSearchEvents;\r\n    private  MaterialButton btnCreateEvents;\r\n    private TextView tvStatusDescr;\r\n    private String statoUtente;\r\n\r\n    ColorStateList red = ColorStateList.valueOf(Color.parseColor(\"#FF0000\"));\r\n    ColorStateList yellow = ColorStateList.valueOf(Color.parseColor(\"#FFF8F405\"));\r\n    ColorStateList green = ColorStateList.valueOf(Color.parseColor(\"#FF43A047\"));\r\n\r\n    public HomeFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view;\r\n        view = inflater.inflate(R.layout.fragment_home, container, false);\r\n        btnCreateEvents = view.findViewById(R.id.btnCreateEvent);\r\n        btnSearchEvents = view.findViewById(R.id.btnSearchEvent);\r\n        status = view.findViewById(R.id.statusCircle2);\r\n        tvStatusDescr = view.findViewById(R.id.tvStatusDescription);\r\n\r\n\r\n        btnCreateEvents.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(getActivity(), NewEventsActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        btnSearchEvents.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                //richiamo il fragment\r\n                Fragment fragment = new EventsFragment();\r\n                FragmentTransaction fr = getActivity().getSupportFragmentManager().beginTransaction();\r\n                fr.replace(R.id.container,fragment);\r\n                fr.addToBackStack(null); //serve per tornare al fragment precedente\r\n                fr.commit();\r\n            }\r\n        });\r\n\r\n        boolean caricato;\r\n        do {\r\n            try {\r\n                caricato = false;\r\n                db.collection(\"Utenti\")\r\n                        .document(getMailUtenteLoggato())\r\n                        .get()\r\n                        .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                            @Override\r\n                            public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                                Utente utente = documentSnapshot.toObject(Utente.class);\r\n                                String stato = utente.getStato();\r\n                                String dataStato = utente.getDataPositivita();\r\n\r\n                                if(!statoUtente.equals(stato)) setStato(stato, dataStato);\r\n\r\n\r\n                                switch (stato){//TODO modificare i messaggi in tvStatusDEscr\r\n                                    case \"rosso\" : status.setBackgroundTintList(red);\r\n                                        tvStatusDescr.setText(getString(R.string.DescrStatoRosso));\r\n                                        break;\r\n\r\n                                    case \"verde\" : status.setBackgroundTintList(green);\r\n                                        tvStatusDescr.setText(getString(R.string.DescrStatoVerde));\r\n                                        break;\r\n\r\n                                    case \"giallo\" : status.setBackgroundTintList(yellow);\r\n                                        tvStatusDescr.setText(getString(R.string.DescrStatoGiallo));\r\n                                        break;\r\n\r\n                                    case \"arancione\" :\r\n                                        try {\r\n                                            Date dataPositivita = new SimpleDateFormat(\"dd/MM/yyyy\").parse(dataStato);\r\n                                            Date dataAttuale = new Date(System.currentTimeMillis());\r\n\r\n                                            SimpleDateFormat sdf = new SimpleDateFormat(\"dd/MM/yyyy\");\r\n                                            String stringDataAttuale = sdf.format(dataAttuale);\r\n\r\n                                            //864000000 millisecondi = 10 giorni\r\n                                            if(dataAttuale.getTime() - dataPositivita.getTime() >= 864000000) {\r\n                                                db.collection(\"Utenti\").document(getMailUtenteLoggato()).update(\"stato\", \"giallo\", \"dataPositivita\", stringDataAttuale);\r\n                                                status.setBackgroundTintList(yellow);\r\n                                                setStato(\"giallo\", stringDataAttuale);\r\n                                            } else status.setBackgroundTintList(ColorStateList.valueOf(Color.rgb(255, 165, 0)));\r\n                                        } catch (ParseException e) {\r\n                                            e.printStackTrace();\r\n                                        }\r\n                                        break;\r\n\r\n                                    default:\r\n                                        //toDo: inserire errore per lo stato\r\n                                }\r\n\r\n                            }\r\n                        });\r\n\r\n            } catch (NullPointerException e) {\r\n                caricato = true;\r\n            }\r\n        }while(caricato);\r\n        return view;\r\n    }\r\n\r\n    private String getMailUtenteLoggato(){\r\n        Utente utente;\r\n        Gson gson = new Gson();\r\n        SharedPreferences prefs = getActivity().getApplicationContext().getSharedPreferences(\"Login\", Context.MODE_PRIVATE);\r\n        String json = prefs.getString(\"utente\", \"no\");\r\n        String mailUtenteLoggato;\r\n        if(!json.equals(\"no\")) {\r\n            utente = gson.fromJson(json, Utente.class);\r\n            mailUtenteLoggato = utente.getMail();\r\n            Log.d(\"mailutenteLoggato\", mailUtenteLoggato);\r\n            statoUtente = utente.getStato();\r\n        } else {\r\n            SharedPreferences prefs1 = getActivity().getApplicationContext().getSharedPreferences(\"LoginTemporaneo\",Context.MODE_PRIVATE);\r\n            mailUtenteLoggato = prefs1.getString(\"mail\", \"no\");\r\n            Log.d(\"mail\", mailUtenteLoggato);\r\n\r\n            db.collection(\"Utenti\")\r\n                    .document(mailUtenteLoggato)\r\n                    .get()\r\n                    .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                @Override\r\n                public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                    statoUtente = documentSnapshot.getString(\"stato\");\r\n                }\r\n            });\r\n        }\r\n        return mailUtenteLoggato;\r\n    }\r\n\r\n    private void setStato(String stato, String dataPos) {\r\n        SharedPreferences prefs = getActivity().getApplicationContext().getSharedPreferences(\"Login\", Context.MODE_PRIVATE);\r\n        Gson gson = new Gson();\r\n        String json = prefs.getString(\"utente\", \"no\");\r\n        Utente utente;\r\n\r\n        if(!json.equals(\"no\")) {\r\n            utente = gson.fromJson(json, Utente.class);\r\n            utente.setStato(stato);\r\n            utente.setDataPositivita(dataPos);\r\n\r\n            SharedPreferences.Editor editor = prefs.edit();\r\n            String json1 = gson.toJson(utente);\r\n            editor.putString(\"utente\", json1);\r\n            editor.apply();\r\n        }\r\n\r\n        Toasty.success(getContext(), \"Stato aggiornato\", Toast.LENGTH_LONG).show();\r\n        Intent i = new Intent(getActivity(),MainActivity.class);\r\n        startActivity(i);\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/contagiapp/HomeFragment.java	(revision d6fc8831346e0dc00973800390dc2c7b54150366)
+++ app/src/main/java/com/example/contagiapp/HomeFragment.java	(date 1634572109893)
@@ -94,6 +94,7 @@
         do {
             try {
                 caricato = false;
+                String mail = getMailUtenteLoggato();
                 db.collection("Utenti")
                         .document(getMailUtenteLoggato())
                         .get()
