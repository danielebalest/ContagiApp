Index: app/src/main/java/com/example/contagiapp/registrazione/RegistrationActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.contagiapp.registrazione;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.app.DatePickerDialog;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\n\r\nimport com.example.contagiapp.MainActivity;\r\nimport com.example.contagiapp.R;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.util.Calendar;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class RegistrationActivity extends AppCompatActivity implements AdapterView.OnItemSelectedListener {\r\n    private Button signInButton;\r\n    private TextView dataNascita;\r\n    private DatePickerDialog.OnDateSetListener dataDiNascita;\r\n    private RadioGroup radiogroup;\r\n    private RadioButton radiosex;\r\n    private static final String TAG = \"RegistrationActivity\";\r\n    // Access a Cloud Firestore instance from your Activity\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_registration);\r\n\r\n\r\n        //Spinner per nazioni\r\n        Spinner spinnerNazioni = findViewById(R.id.spinnerNazioni);\r\n        ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(this, R.array.nazioni, android.R.layout.simple_spinner_dropdown_item);\r\n        adapter.setDropDownViewResource(R.layout.support_simple_spinner_dropdown_item);\r\n        spinnerNazioni.setAdapter(adapter);\r\n        spinnerNazioni.setOnItemSelectedListener(this);\r\n\r\n\r\n        // collegamento button registrati con la mainActivity\r\n        signInButton = (Button) findViewById(R.id.registrati);\r\n        signInButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                openMainActivity();\r\n            }\r\n        });\r\n\r\n        //Date Picker\r\n        dataNascita = (TextView) findViewById(R.id.dataNascita);\r\n        dataNascita.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Calendar cal = Calendar.getInstance();\r\n                int year = cal.get(Calendar.YEAR);\r\n                int month = cal.get(Calendar.MONTH);\r\n                int day = cal.get(Calendar.DAY_OF_MONTH);\r\n\r\n                DatePickerDialog dialog = new DatePickerDialog(\r\n                        RegistrationActivity.this,\r\n                        android.R.style.Theme_Holo_Light_Dialog_MinWidth,\r\n                        dataDiNascita,\r\n                        year, month, day);\r\n                dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n                dialog.show();\r\n            }\r\n        });\r\n\r\n        dataDiNascita = new DatePickerDialog.OnDateSetListener(){\r\n            @Override\r\n            public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\r\n\r\n                Log.d(TAG, \"onDateSet: date: \" + dayOfMonth + \"/\" + month + \"/\" + year);\r\n                String date = dayOfMonth + \"/\" + month+1 + \"/\" + year;\r\n                dataNascita.setText(date);\r\n            }\r\n        };\r\n\r\n\r\n\r\n    }\r\n\r\n    public void openMainActivity(){\r\n        // Create a new user with a first, middle, and last name\r\n        final Map<String, Object> user = new HashMap<>();\r\n\r\n        EditText name = (EditText)findViewById(R.id.EditTextName);\r\n        String nome = name.getText().toString();\r\n        user.put(\"nome\", nome);\r\n\r\n        EditText surname = (EditText)findViewById(R.id.EdiTextSurname);\r\n        String cognome = surname.getText().toString();\r\n        user.put(\"cognome\", cognome);\r\n\r\n        TextView date = (TextView) findViewById(R.id.dataNascita);\r\n        String data= date.getText().toString();\r\n        user.put(\"dataNascita\", data);\r\n        radiogroup=(RadioGroup) findViewById(R.id.radiogroup);\r\n        int Idselezionato= radiogroup.getCheckedRadioButtonId();\r\n        radiosex= (RadioButton) findViewById(Idselezionato);\r\n        user.put(\"genere\", radiosex.getText().toString());\r\n\r\n\r\n\r\n\r\n        // Add a new document with a generated ID\r\n        db.collection(\"Utenti\")\r\n        .add(user)\r\n                /*.addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        Log.d(TAG, \"DocumentSnapshot successfully written!\");\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Log.w(TAG, \"Error writing document\", e);\r\n                    }\r\n                })*/;\r\n\r\n\r\n        Intent mainIntent = new Intent(this, MainActivity.class);\r\n        startActivity(mainIntent);\r\n    }\r\n\r\n\r\n    //Spinner per nazioni\r\n    @Override\r\n    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n        String text = parent.getItemAtPosition(position).toString();\r\n        //Toast.makeText(parent.getContext(), text, Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    @Override\r\n    public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/contagiapp/registrazione/RegistrationActivity.java	(revision 0919cc119003887da34facbe553496a86647b885)
+++ app/src/main/java/com/example/contagiapp/registrazione/RegistrationActivity.java	(date 1611250415757)
@@ -102,7 +102,7 @@
         String nome = name.getText().toString();
         user.put("nome", nome);
 
-        EditText surname = (EditText)findViewById(R.id.EdiTextSurname);
+        EditText surname = (EditText)findViewById(R.id.EdiTTextSurname);
         String cognome = surname.getText().toString();
         user.put("cognome", cognome);
 
Index: app/src/main/java/sql/DBhelper.java
===================================================================
--- app/src/main/java/sql/DBhelper.java	(revision 0919cc119003887da34facbe553496a86647b885)
+++ app/src/main/java/sql/DBhelper.java	(revision 0919cc119003887da34facbe553496a86647b885)
@@ -1,65 +0,0 @@
-package sql;
-
-import android.content.Context;
-import android.database.sqlite.SQLiteDatabase;
-import android.database.sqlite.SQLiteOpenHelper;
-
-public class DBhelper extends SQLiteOpenHelper
-{
-    public static final String DBNAME = "Contagi";
-
-    public DBhelper(Context context) {
-        super(context, DBNAME, null, 1);
-    }
-
-    @Override
-    public void onCreate(SQLiteDatabase db)
-    {  //boolean = integers 0 (false) and 1 (true)
-
-        String utenti = "create table utenti (id INTEGER PRIMARY KEY AUTOINCREMENT, nome text not null, " +
-                "cognome text not null, cellulare integer unique, data_nascita text not null, citta_nascita text not null, " +
-                "mail text not null unique, genere text not null, foto_tampone text, consenso integer not null, data_iscrizione text not null, " +
-                "data_foto text, colore integer not null, nazione_residenza text not null, regione_residenza text not null, " +
-                "citta_residenza text not null, via_residenza text not null)";
-
-        String amici = "create table amici (id_utente integer, id_utente_amico integer, primary key(id_utente, id_utente_amico), " +
-                "foreign key (id_utente) references utenti(id))";
-
-        String gruppi = "create table gruppi (id INTEGER PRIMARY KEY AUTOINCREMENT, nome text not null, data_creazione text not null, " +
-                "num_utenti integer not null, descrizione text not null)";
-
-        String utenti_gruppi = "create table utenti_gruppi (id_utente integer, id_gruppo integer, primary key(id_utente, id_gruppo), " +
-                "foreign key (id_utente) references utenti(id), foreign key (id_gruppo) references gruppi(id))";
-
-        String eventi = "create table eventi (id  INTEGER PRIMARY KEY AUTOINCREMENT, data text not null, ora_inizio integer not null, ora_fine integer not null, " +
-                "nome text not null, num_partecipanti_max integer not null, descrizione text not null, nazione text not null, " +
-                "regione text not null, citta text not null, via text not null, luogo text not null)";
-
-        String utenti_eventi = "create table utenti_eventi (id_utente integer, id_evento integer, partecipazione_gps integer not null, " +
-                "primary key(id_utente, id_evento), foreign key (id_utente) references utenti(id), " +
-                "foreign key (id_evento) references eventi(id))";
-
-        String eventi_gruppi = "create table eventi_gruppi (id_gruppo integer, id_evento integer, primary key(id_gruppo, id_evento), " +
-                "foreign key (id_gruppo) references gruppi(id), foreign key (id_evento) references eventi(id))";
-
-        String codici = "create table codici (id  INTEGER PRIMARY KEY AUTOINCREMENT, codice integer unique, id_utente integer not null, " +
-                "foreign key (id_utente) references utenti(id))";
-
-        String bluetooth = "create table bluetooth (id_codice integer, id_codice_1 integer, data text, durata_contatto integer not null, distanza integer not null, " +
-                "primary key(id_codice, id_codice_1, data), foreign key (id_codice) references codici(id))";
-
-        db.execSQL(utenti);
-        db.execSQL(amici);
-        db.execSQL(gruppi);
-        db.execSQL(utenti_gruppi);
-        db.execSQL(eventi);
-        db.execSQL(utenti_eventi);
-        db.execSQL (eventi_gruppi);
-        db.execSQL(codici);
-        db.execSQL(bluetooth);
-    }
-
-    @Override
-    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion)
-    { }
-}
\ No newline at end of file
Index: app/src/main/java/sql/DbManager.java
===================================================================
--- app/src/main/java/sql/DbManager.java	(revision 0919cc119003887da34facbe553496a86647b885)
+++ app/src/main/java/sql/DbManager.java	(revision 0919cc119003887da34facbe553496a86647b885)
@@ -1,60 +0,0 @@
-package sql;
-
-import android.content.ContentValues;
-import android.content.Context;
-import android.database.Cursor;
-import android.database.sqlite.SQLiteDatabase;
-import android.database.sqlite.SQLiteException;
-
-/*public class DbManager
-{
-    private DBhelper dbhelper;
-    public DbManager(Context ctx)
-    {
-        dbhelper=new DBhelper(ctx);
-    }
-    public void save(String sub, String txt, String date)
-    {
-        SQLiteDatabase db=dbhelper.getWritableDatabase();
-        ContentValues cv=new ContentValues();
-        cv.put(DatabaseStrings.FIELD_SUBJECT, sub);
-        cv.put(DatabaseStrings.FIELD_TEXT, txt);
-        cv.put(DatabaseStrings.FIELD_DATE, date);
-        try
-        {
-            db.insert(DatabaseStrings.TBL_NAME, null,cv);
-        }
-        catch (SQLiteException sqle)
-        {
-// Gestione delle eccezioni
-        }
-    }
-    public boolean delete(long id)
-    {
-        SQLiteDatabase db=dbhelper.getWritableDatabase();
-        try
-        {
-            if (db.delete(DatabaseStrings.TBL_NAME, DatabaseStrings.FIELD_ID+"=?", new String[]{Long.toString(id)})>0)
-                return true;
-            return false;
-        }
-        catch (SQLiteException sqle)
-        {
-            return false;
-        }
-    }
-    public Cursor query()
-    {
-        Cursor crs=null;
-        try
-        {
-            SQLiteDatabase db=dbhelper.getReadableDatabase();
-            crs=db.query(DatabaseStrings.TBL_NAME, null, null, null, null, null, null, null);
-        }
-        catch(SQLiteException sqle)
-        {
-            return null;
-        }
-        return crs;
-    }
-}*/
\ No newline at end of file
